# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `google-apis-sheets_v4` gem.
# Please instead update this file by running `bin/tapioca gem google-apis-sheets_v4`.


# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#20
module Google; end

# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#21
module Google::Apis
  class << self
    # source://google-apis-core/0.15.1/lib/google/apis.rb#59
    def default_logger; end

    # source://google-apis-core/0.15.1/lib/google/apis.rb#47
    def logger; end

    # source://google-apis-core/0.15.1/lib/google/apis.rb#52
    def logger=(_arg0); end

    # source://google-apis-core/0.15.1/lib/google/apis.rb#70
    def rails_logger; end
  end
end

# Google Sheets API
#
# Reads and writes Google Sheets.
#
# @see https://developers.google.com/sheets/
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#22
module Google::Apis::SheetsV4; end

# See, edit, create, and delete all of your Google Drive files
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4.rb#33
Google::Apis::SheetsV4::AUTH_DRIVE = T.let(T.unsafe(nil), String)

# See, edit, create, and delete only the specific Google Drive files you use with this app
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4.rb#36
Google::Apis::SheetsV4::AUTH_DRIVE_FILE = T.let(T.unsafe(nil), String)

# See and download all your Google Drive files
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4.rb#39
Google::Apis::SheetsV4::AUTH_DRIVE_READONLY = T.let(T.unsafe(nil), String)

# See, edit, create, and delete all your Google Sheets spreadsheets
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4.rb#42
Google::Apis::SheetsV4::AUTH_SPREADSHEETS = T.let(T.unsafe(nil), String)

# See all your Google Sheets spreadsheets
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4.rb#45
Google::Apis::SheetsV4::AUTH_SPREADSHEETS_READONLY = T.let(T.unsafe(nil), String)

# Adds a new banded range to the spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#26
class Google::Apis::SheetsV4::AddBandingRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddBandingRequest] a new instance of AddBandingRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#34
  def initialize(**args); end

  # A banded (alternating colors) range in a sheet.
  # Corresponds to the JSON property `bandedRange`
  #
  # @return [Google::Apis::SheetsV4::BandedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#32
  def banded_range; end

  # A banded (alternating colors) range in a sheet.
  # Corresponds to the JSON property `bandedRange`
  #
  # @return [Google::Apis::SheetsV4::BandedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#32
  def banded_range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#39
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#26
class Google::Apis::SheetsV4::AddBandingRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of adding a banded range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#45
class Google::Apis::SheetsV4::AddBandingResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddBandingResponse] a new instance of AddBandingResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#53
  def initialize(**args); end

  # A banded (alternating colors) range in a sheet.
  # Corresponds to the JSON property `bandedRange`
  #
  # @return [Google::Apis::SheetsV4::BandedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#51
  def banded_range; end

  # A banded (alternating colors) range in a sheet.
  # Corresponds to the JSON property `bandedRange`
  #
  # @return [Google::Apis::SheetsV4::BandedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#51
  def banded_range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#58
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#32
class Google::Apis::SheetsV4::AddBandingResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Adds a chart to a sheet in the spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#64
class Google::Apis::SheetsV4::AddChartRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddChartRequest] a new instance of AddChartRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#72
  def initialize(**args); end

  # A chart embedded in a sheet.
  # Corresponds to the JSON property `chart`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedChart]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#70
  def chart; end

  # A chart embedded in a sheet.
  # Corresponds to the JSON property `chart`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedChart]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#70
  def chart=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#77
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#38
class Google::Apis::SheetsV4::AddChartRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of adding a chart to a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#83
class Google::Apis::SheetsV4::AddChartResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddChartResponse] a new instance of AddChartResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#91
  def initialize(**args); end

  # A chart embedded in a sheet.
  # Corresponds to the JSON property `chart`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedChart]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#89
  def chart; end

  # A chart embedded in a sheet.
  # Corresponds to the JSON property `chart`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedChart]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#89
  def chart=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#96
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#44
class Google::Apis::SheetsV4::AddChartResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Adds a new conditional format rule at the given index. All subsequent rules'
# indexes are incremented.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#103
class Google::Apis::SheetsV4::AddConditionalFormatRuleRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddConditionalFormatRuleRequest] a new instance of AddConditionalFormatRuleRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#116
  def initialize(**args); end

  # The zero-based index where the rule should be inserted.
  # Corresponds to the JSON property `index`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#109
  def index; end

  # The zero-based index where the rule should be inserted.
  # Corresponds to the JSON property `index`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#109
  def index=(_arg0); end

  # A rule describing a conditional format.
  # Corresponds to the JSON property `rule`
  #
  # @return [Google::Apis::SheetsV4::ConditionalFormatRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#114
  def rule; end

  # A rule describing a conditional format.
  # Corresponds to the JSON property `rule`
  #
  # @return [Google::Apis::SheetsV4::ConditionalFormatRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#114
  def rule=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#121
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#50
class Google::Apis::SheetsV4::AddConditionalFormatRuleRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Adds a data source. After the data source is added successfully, an associated
# DATA_SOURCE sheet is created and an execution is triggered to refresh the
# sheet to read data from the data source. The request requires an additional `
# bigquery.readonly` OAuth scope if you are adding a BigQuery data source.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#131
class Google::Apis::SheetsV4::AddDataSourceRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddDataSourceRequest] a new instance of AddDataSourceRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#139
  def initialize(**args); end

  # Information about an external data source in the spreadsheet.
  # Corresponds to the JSON property `dataSource`
  #
  # @return [Google::Apis::SheetsV4::DataSource]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#137
  def data_source; end

  # Information about an external data source in the spreadsheet.
  # Corresponds to the JSON property `dataSource`
  #
  # @return [Google::Apis::SheetsV4::DataSource]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#137
  def data_source=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#144
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#56
class Google::Apis::SheetsV4::AddDataSourceRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of adding a data source.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#150
class Google::Apis::SheetsV4::AddDataSourceResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddDataSourceResponse] a new instance of AddDataSourceResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#171
  def initialize(**args); end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#164
  def data_execution_status; end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#164
  def data_execution_status=(_arg0); end

  # Information about an external data source in the spreadsheet.
  # Corresponds to the JSON property `dataSource`
  #
  # @return [Google::Apis::SheetsV4::DataSource]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#169
  def data_source; end

  # Information about an external data source in the spreadsheet.
  # Corresponds to the JSON property `dataSource`
  #
  # @return [Google::Apis::SheetsV4::DataSource]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#169
  def data_source=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#176
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#62
class Google::Apis::SheetsV4::AddDataSourceResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Creates a group over the specified range. If the requested range is a superset
# of the range of an existing group G, then the depth of G is incremented and
# this new group G' has the depth of that group. For example, a group [C:D,
# depth 1] + [B:E] results in groups [B:E, depth 1] and [C:D, depth 2]. If the
# requested range is a subset of the range of an existing group G, then the
# depth of the new group G' becomes one greater than the depth of G. For example,
# a group [B:E, depth 1] + [C:D] results in groups [B:E, depth 1] and [C:D,
# depth 2]. If the requested range starts before and ends within, or starts
# within and ends after, the range of an existing group G, then the range of the
# existing group G becomes the union of the ranges, and the new group G' has
# depth one greater than the depth of G and range as the intersection of the
# ranges. For example, a group [B:D, depth 1] + [C:E] results in groups [B:E,
# depth 1] and [C:D, depth 2].
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#195
class Google::Apis::SheetsV4::AddDimensionGroupRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddDimensionGroupRequest] a new instance of AddDimensionGroupRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#205
  def initialize(**args); end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#203
  def range; end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#203
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#210
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#68
class Google::Apis::SheetsV4::AddDimensionGroupRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of adding a group.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#216
class Google::Apis::SheetsV4::AddDimensionGroupResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddDimensionGroupResponse] a new instance of AddDimensionGroupResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#224
  def initialize(**args); end

  # All groups of a dimension after adding a group to that dimension.
  # Corresponds to the JSON property `dimensionGroups`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#222
  def dimension_groups; end

  # All groups of a dimension after adding a group to that dimension.
  # Corresponds to the JSON property `dimensionGroups`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#222
  def dimension_groups=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#229
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#74
class Google::Apis::SheetsV4::AddDimensionGroupResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Adds a filter view.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#235
class Google::Apis::SheetsV4::AddFilterViewRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddFilterViewRequest] a new instance of AddFilterViewRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#243
  def initialize(**args); end

  # A filter view.
  # Corresponds to the JSON property `filter`
  #
  # @return [Google::Apis::SheetsV4::FilterView]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#241
  def filter; end

  # A filter view.
  # Corresponds to the JSON property `filter`
  #
  # @return [Google::Apis::SheetsV4::FilterView]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#241
  def filter=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#248
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#80
class Google::Apis::SheetsV4::AddFilterViewRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of adding a filter view.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#254
class Google::Apis::SheetsV4::AddFilterViewResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddFilterViewResponse] a new instance of AddFilterViewResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#262
  def initialize(**args); end

  # A filter view.
  # Corresponds to the JSON property `filter`
  #
  # @return [Google::Apis::SheetsV4::FilterView]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#260
  def filter; end

  # A filter view.
  # Corresponds to the JSON property `filter`
  #
  # @return [Google::Apis::SheetsV4::FilterView]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#260
  def filter=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#267
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#86
class Google::Apis::SheetsV4::AddFilterViewResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Adds a named range to the spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#273
class Google::Apis::SheetsV4::AddNamedRangeRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddNamedRangeRequest] a new instance of AddNamedRangeRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#281
  def initialize(**args); end

  # A named range.
  # Corresponds to the JSON property `namedRange`
  #
  # @return [Google::Apis::SheetsV4::NamedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#279
  def named_range; end

  # A named range.
  # Corresponds to the JSON property `namedRange`
  #
  # @return [Google::Apis::SheetsV4::NamedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#279
  def named_range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#286
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#92
class Google::Apis::SheetsV4::AddNamedRangeRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of adding a named range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#292
class Google::Apis::SheetsV4::AddNamedRangeResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddNamedRangeResponse] a new instance of AddNamedRangeResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#300
  def initialize(**args); end

  # A named range.
  # Corresponds to the JSON property `namedRange`
  #
  # @return [Google::Apis::SheetsV4::NamedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#298
  def named_range; end

  # A named range.
  # Corresponds to the JSON property `namedRange`
  #
  # @return [Google::Apis::SheetsV4::NamedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#298
  def named_range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#305
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#98
class Google::Apis::SheetsV4::AddNamedRangeResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Adds a new protected range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#311
class Google::Apis::SheetsV4::AddProtectedRangeRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddProtectedRangeRequest] a new instance of AddProtectedRangeRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#319
  def initialize(**args); end

  # A protected range.
  # Corresponds to the JSON property `protectedRange`
  #
  # @return [Google::Apis::SheetsV4::ProtectedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#317
  def protected_range; end

  # A protected range.
  # Corresponds to the JSON property `protectedRange`
  #
  # @return [Google::Apis::SheetsV4::ProtectedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#317
  def protected_range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#324
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#104
class Google::Apis::SheetsV4::AddProtectedRangeRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of adding a new protected range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#330
class Google::Apis::SheetsV4::AddProtectedRangeResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddProtectedRangeResponse] a new instance of AddProtectedRangeResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#338
  def initialize(**args); end

  # A protected range.
  # Corresponds to the JSON property `protectedRange`
  #
  # @return [Google::Apis::SheetsV4::ProtectedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#336
  def protected_range; end

  # A protected range.
  # Corresponds to the JSON property `protectedRange`
  #
  # @return [Google::Apis::SheetsV4::ProtectedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#336
  def protected_range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#343
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#110
class Google::Apis::SheetsV4::AddProtectedRangeResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Adds a new sheet. When a sheet is added at a given index, all subsequent
# sheets' indexes are incremented. To add an object sheet, use AddChartRequest
# instead and specify EmbeddedObjectPosition.sheetId or EmbeddedObjectPosition.
# newSheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#352
class Google::Apis::SheetsV4::AddSheetRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddSheetRequest] a new instance of AddSheetRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#360
  def initialize(**args); end

  # Properties of a sheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#358
  def properties; end

  # Properties of a sheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#358
  def properties=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#365
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#116
class Google::Apis::SheetsV4::AddSheetRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of adding a sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#371
class Google::Apis::SheetsV4::AddSheetResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddSheetResponse] a new instance of AddSheetResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#379
  def initialize(**args); end

  # Properties of a sheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#377
  def properties; end

  # Properties of a sheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#377
  def properties=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#384
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#122
class Google::Apis::SheetsV4::AddSheetResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Adds a slicer to a sheet in the spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#390
class Google::Apis::SheetsV4::AddSlicerRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddSlicerRequest] a new instance of AddSlicerRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#398
  def initialize(**args); end

  # A slicer in a sheet.
  # Corresponds to the JSON property `slicer`
  #
  # @return [Google::Apis::SheetsV4::Slicer]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#396
  def slicer; end

  # A slicer in a sheet.
  # Corresponds to the JSON property `slicer`
  #
  # @return [Google::Apis::SheetsV4::Slicer]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#396
  def slicer=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#403
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#128
class Google::Apis::SheetsV4::AddSlicerRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of adding a slicer to a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#409
class Google::Apis::SheetsV4::AddSlicerResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AddSlicerResponse] a new instance of AddSlicerResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#417
  def initialize(**args); end

  # A slicer in a sheet.
  # Corresponds to the JSON property `slicer`
  #
  # @return [Google::Apis::SheetsV4::Slicer]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#415
  def slicer; end

  # A slicer in a sheet.
  # Corresponds to the JSON property `slicer`
  #
  # @return [Google::Apis::SheetsV4::Slicer]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#415
  def slicer=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#422
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#134
class Google::Apis::SheetsV4::AddSlicerResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Adds new cells after the last row with data in a sheet, inserting new rows
# into the sheet if necessary.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#429
class Google::Apis::SheetsV4::AppendCellsRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AppendCellsRequest] a new instance of AppendCellsRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#449
  def initialize(**args); end

  # The fields of CellData that should be updated. At least one field must be
  # specified. The root is the CellData; 'row.values.' should not be specified. A
  # single `"*"` can be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#437
  def fields; end

  # The fields of CellData that should be updated. At least one field must be
  # specified. The root is the CellData; 'row.values.' should not be specified. A
  # single `"*"` can be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#437
  def fields=(_arg0); end

  # The data to append.
  # Corresponds to the JSON property `rows`
  #
  # @return [Array<Google::Apis::SheetsV4::RowData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#442
  def rows; end

  # The data to append.
  # Corresponds to the JSON property `rows`
  #
  # @return [Array<Google::Apis::SheetsV4::RowData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#442
  def rows=(_arg0); end

  # The sheet ID to append the data to.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#447
  def sheet_id; end

  # The sheet ID to append the data to.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#447
  def sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#454
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#140
class Google::Apis::SheetsV4::AppendCellsRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Appends rows or columns to the end of a sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#462
class Google::Apis::SheetsV4::AppendDimensionRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AppendDimensionRequest] a new instance of AppendDimensionRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#480
  def initialize(**args); end

  # Whether rows or columns should be appended.
  # Corresponds to the JSON property `dimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#468
  def dimension; end

  # Whether rows or columns should be appended.
  # Corresponds to the JSON property `dimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#468
  def dimension=(_arg0); end

  # The number of rows or columns to append.
  # Corresponds to the JSON property `length`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#473
  def length; end

  # The number of rows or columns to append.
  # Corresponds to the JSON property `length`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#473
  def length=(_arg0); end

  # The sheet to append rows or columns to.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#478
  def sheet_id; end

  # The sheet to append rows or columns to.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#478
  def sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#485
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#146
class Google::Apis::SheetsV4::AppendDimensionRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response when updating a range of values in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#493
class Google::Apis::SheetsV4::AppendValuesResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AppendValuesResponse] a new instance of AppendValuesResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#512
  def initialize(**args); end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#499
  def spreadsheet_id; end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#499
  def spreadsheet_id=(_arg0); end

  # The range (in A1 notation) of the table that values are being appended to (
  # before the values were appended). Empty if no table was found.
  # Corresponds to the JSON property `tableRange`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#505
  def table_range; end

  # The range (in A1 notation) of the table that values are being appended to (
  # before the values were appended). Empty if no table was found.
  # Corresponds to the JSON property `tableRange`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#505
  def table_range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#517
  def update!(**args); end

  # The response when updating a range of values in a spreadsheet.
  # Corresponds to the JSON property `updates`
  #
  # @return [Google::Apis::SheetsV4::UpdateValuesResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#510
  def updates; end

  # The response when updating a range of values in a spreadsheet.
  # Corresponds to the JSON property `updates`
  #
  # @return [Google::Apis::SheetsV4::UpdateValuesResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#510
  def updates=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#152
class Google::Apis::SheetsV4::AppendValuesResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Fills in more data based on existing data.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#525
class Google::Apis::SheetsV4::AutoFillRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AutoFillRequest] a new instance of AutoFillRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#557
  def initialize(**args); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#543
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#543
  def range=(_arg0); end

  # A combination of a source range and how to extend that source.
  # Corresponds to the JSON property `sourceAndDestination`
  #
  # @return [Google::Apis::SheetsV4::SourceAndDestination]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#548
  def source_and_destination; end

  # A combination of a source range and how to extend that source.
  # Corresponds to the JSON property `sourceAndDestination`
  #
  # @return [Google::Apis::SheetsV4::SourceAndDestination]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#548
  def source_and_destination=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#562
  def update!(**args); end

  # True if we should generate data with the "alternate" series. This differs
  # based on the type and amount of source data.
  # Corresponds to the JSON property `useAlternateSeries`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#554
  def use_alternate_series; end

  # True if we should generate data with the "alternate" series. This differs
  # based on the type and amount of source data.
  # Corresponds to the JSON property `useAlternateSeries`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#554
  def use_alternate_series=(_arg0); end

  # True if we should generate data with the "alternate" series. This differs
  # based on the type and amount of source data.
  # Corresponds to the JSON property `useAlternateSeries`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#554
  def use_alternate_series?; end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#158
class Google::Apis::SheetsV4::AutoFillRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Automatically resizes one or more dimensions based on the contents of the
# cells in that dimension.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#571
class Google::Apis::SheetsV4::AutoResizeDimensionsRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [AutoResizeDimensionsRequest] a new instance of AutoResizeDimensionsRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#586
  def initialize(**args); end

  # A range along a single dimension on a DATA_SOURCE sheet.
  # Corresponds to the JSON property `dataSourceSheetDimensions`
  #
  # @return [Google::Apis::SheetsV4::DataSourceSheetDimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#577
  def data_source_sheet_dimensions; end

  # A range along a single dimension on a DATA_SOURCE sheet.
  # Corresponds to the JSON property `dataSourceSheetDimensions`
  #
  # @return [Google::Apis::SheetsV4::DataSourceSheetDimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#577
  def data_source_sheet_dimensions=(_arg0); end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `dimensions`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#584
  def dimensions; end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `dimensions`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#584
  def dimensions=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#591
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#164
class Google::Apis::SheetsV4::AutoResizeDimensionsRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A banded (alternating colors) range in a sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#598
class Google::Apis::SheetsV4::BandedRange
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BandedRange] a new instance of BandedRange
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#651
  def initialize(**args); end

  # The ID of the banded range.
  # Corresponds to the JSON property `bandedRangeId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#604
  def banded_range_id; end

  # The ID of the banded range.
  # Corresponds to the JSON property `bandedRangeId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#604
  def banded_range_id=(_arg0); end

  # Properties referring a single dimension (either row or column). If both
  # BandedRange.row_properties and BandedRange.column_properties are set, the fill
  # colors are applied to cells according to the following rules: * header_color
  # and footer_color take priority over band colors. * first_band_color takes
  # priority over second_band_color. * row_properties takes priority over
  # column_properties. For example, the first row color takes priority over the
  # first column color, but the first column color takes priority over the second
  # row color. Similarly, the row header takes priority over the column header in
  # the top left cell, but the column header takes priority over the first row
  # color if the row header is not set.
  # Corresponds to the JSON property `columnProperties`
  #
  # @return [Google::Apis::SheetsV4::BandingProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#618
  def column_properties; end

  # Properties referring a single dimension (either row or column). If both
  # BandedRange.row_properties and BandedRange.column_properties are set, the fill
  # colors are applied to cells according to the following rules: * header_color
  # and footer_color take priority over band colors. * first_band_color takes
  # priority over second_band_color. * row_properties takes priority over
  # column_properties. For example, the first row color takes priority over the
  # first column color, but the first column color takes priority over the second
  # row color. Similarly, the row header takes priority over the column header in
  # the top left cell, but the column header takes priority over the first row
  # color if the row header is not set.
  # Corresponds to the JSON property `columnProperties`
  #
  # @return [Google::Apis::SheetsV4::BandingProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#618
  def column_properties=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#635
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#635
  def range=(_arg0); end

  # Properties referring a single dimension (either row or column). If both
  # BandedRange.row_properties and BandedRange.column_properties are set, the fill
  # colors are applied to cells according to the following rules: * header_color
  # and footer_color take priority over band colors. * first_band_color takes
  # priority over second_band_color. * row_properties takes priority over
  # column_properties. For example, the first row color takes priority over the
  # first column color, but the first column color takes priority over the second
  # row color. Similarly, the row header takes priority over the column header in
  # the top left cell, but the column header takes priority over the first row
  # color if the row header is not set.
  # Corresponds to the JSON property `rowProperties`
  #
  # @return [Google::Apis::SheetsV4::BandingProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#649
  def row_properties; end

  # Properties referring a single dimension (either row or column). If both
  # BandedRange.row_properties and BandedRange.column_properties are set, the fill
  # colors are applied to cells according to the following rules: * header_color
  # and footer_color take priority over band colors. * first_band_color takes
  # priority over second_band_color. * row_properties takes priority over
  # column_properties. For example, the first row color takes priority over the
  # first column color, but the first column color takes priority over the second
  # row color. Similarly, the row header takes priority over the column header in
  # the top left cell, but the column header takes priority over the first row
  # color if the row header is not set.
  # Corresponds to the JSON property `rowProperties`
  #
  # @return [Google::Apis::SheetsV4::BandingProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#649
  def row_properties=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#656
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#170
class Google::Apis::SheetsV4::BandedRange::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Properties referring a single dimension (either row or column). If both
# BandedRange.row_properties and BandedRange.column_properties are set, the fill
# colors are applied to cells according to the following rules: * header_color
# and footer_color take priority over band colors. * first_band_color takes
# priority over second_band_color. * row_properties takes priority over
# column_properties. For example, the first row color takes priority over the
# first column color, but the first column color takes priority over the second
# row color. Similarly, the row header takes priority over the column header in
# the top left cell, but the column header takes priority over the first row
# color if the row header is not set.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#674
class Google::Apis::SheetsV4::BandingProperties
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BandingProperties] a new instance of BandingProperties
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#893
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `firstBandColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#724
  def first_band_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `firstBandColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#724
  def first_band_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `firstBandColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#729
  def first_band_color_style; end

  # A color value.
  # Corresponds to the JSON property `firstBandColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#729
  def first_band_color_style=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `footerColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#778
  def footer_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `footerColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#778
  def footer_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `footerColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#783
  def footer_color_style; end

  # A color value.
  # Corresponds to the JSON property `footerColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#783
  def footer_color_style=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `headerColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#832
  def header_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `headerColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#832
  def header_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `headerColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#837
  def header_color_style; end

  # A color value.
  # Corresponds to the JSON property `headerColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#837
  def header_color_style=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `secondBandColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#886
  def second_band_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `secondBandColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#886
  def second_band_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `secondBandColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#891
  def second_band_color_style; end

  # A color value.
  # Corresponds to the JSON property `secondBandColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#891
  def second_band_color_style=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#898
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#176
class Google::Apis::SheetsV4::BandingProperties::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Formatting options for baseline value.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#911
class Google::Apis::SheetsV4::BaselineValueFormat
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BaselineValueFormat] a new instance of BaselineValueFormat
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1043
  def initialize(**args); end

  # The comparison type of key value with baseline value.
  # Corresponds to the JSON property `comparisonType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#917
  def comparison_type; end

  # The comparison type of key value with baseline value.
  # Corresponds to the JSON property `comparisonType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#917
  def comparison_type=(_arg0); end

  # Description which is appended after the baseline value. This field is optional.
  # Corresponds to the JSON property `description`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#922
  def description; end

  # Description which is appended after the baseline value. This field is optional.
  # Corresponds to the JSON property `description`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#922
  def description=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `negativeColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#971
  def negative_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `negativeColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#971
  def negative_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `negativeColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#976
  def negative_color_style; end

  # A color value.
  # Corresponds to the JSON property `negativeColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#976
  def negative_color_style=(_arg0); end

  # Position settings for text.
  # Corresponds to the JSON property `position`
  #
  # @return [Google::Apis::SheetsV4::TextPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#981
  def position; end

  # Position settings for text.
  # Corresponds to the JSON property `position`
  #
  # @return [Google::Apis::SheetsV4::TextPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#981
  def position=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `positiveColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1030
  def positive_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `positiveColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1030
  def positive_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `positiveColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1035
  def positive_color_style; end

  # A color value.
  # Corresponds to the JSON property `positiveColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1035
  def positive_color_style=(_arg0); end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1041
  def text_format; end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1041
  def text_format=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1048
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#182
class Google::Apis::SheetsV4::BaselineValueFormat::Representation < ::Google::Apis::Core::JsonRepresentation; end

# An axis of the chart. A chart may not have more than one axis per axis
# position.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1062
class Google::Apis::SheetsV4::BasicChartAxis
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BasicChartAxis] a new instance of BasicChartAxis
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1093
  def initialize(**args); end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `format`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1069
  def format; end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `format`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1069
  def format=(_arg0); end

  # The position of this axis.
  # Corresponds to the JSON property `position`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1074
  def position; end

  # The position of this axis.
  # Corresponds to the JSON property `position`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1074
  def position=(_arg0); end

  # The title of this axis. If set, this overrides any title inferred from headers
  # of the data.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1080
  def title; end

  # The title of this axis. If set, this overrides any title inferred from headers
  # of the data.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1080
  def title=(_arg0); end

  # Position settings for text.
  # Corresponds to the JSON property `titleTextPosition`
  #
  # @return [Google::Apis::SheetsV4::TextPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1085
  def title_text_position; end

  # Position settings for text.
  # Corresponds to the JSON property `titleTextPosition`
  #
  # @return [Google::Apis::SheetsV4::TextPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1085
  def title_text_position=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1098
  def update!(**args); end

  # The options that define a "view window" for a chart (such as the visible
  # values in an axis).
  # Corresponds to the JSON property `viewWindowOptions`
  #
  # @return [Google::Apis::SheetsV4::ChartAxisViewWindowOptions]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1091
  def view_window_options; end

  # The options that define a "view window" for a chart (such as the visible
  # values in an axis).
  # Corresponds to the JSON property `viewWindowOptions`
  #
  # @return [Google::Apis::SheetsV4::ChartAxisViewWindowOptions]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1091
  def view_window_options=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#188
class Google::Apis::SheetsV4::BasicChartAxis::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The domain of a chart. For example, if charting stock prices over time, this
# would be the date.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1109
class Google::Apis::SheetsV4::BasicChartDomain
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BasicChartDomain] a new instance of BasicChartDomain
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1123
  def initialize(**args); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `domain`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1115
  def domain; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `domain`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1115
  def domain=(_arg0); end

  # True to reverse the order of the domain values (horizontal axis).
  # Corresponds to the JSON property `reversed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1120
  def reversed; end

  # True to reverse the order of the domain values (horizontal axis).
  # Corresponds to the JSON property `reversed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1120
  def reversed=(_arg0); end

  # True to reverse the order of the domain values (horizontal axis).
  # Corresponds to the JSON property `reversed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1120
  def reversed?; end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1128
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#194
class Google::Apis::SheetsV4::BasicChartDomain::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A single series of data in a chart. For example, if charting stock prices over
# time, multiple series may exist, one for the "Open Price", "High Price", "Low
# Price" and "Close Price".
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1137
class Google::Apis::SheetsV4::BasicChartSeries
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BasicChartSeries] a new instance of BasicChartSeries
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1238
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1187
  def color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1187
  def color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1192
  def color_style; end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1192
  def color_style=(_arg0); end

  # Settings for one set of data labels. Data labels are annotations that appear
  # next to a set of data, such as the points on a line chart, and provide
  # additional information about what the data represents, such as a text
  # representation of the value behind that point on the graph.
  # Corresponds to the JSON property `dataLabel`
  #
  # @return [Google::Apis::SheetsV4::DataLabel]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1200
  def data_label; end

  # Settings for one set of data labels. Data labels are annotations that appear
  # next to a set of data, such as the points on a line chart, and provide
  # additional information about what the data represents, such as a text
  # representation of the value behind that point on the graph.
  # Corresponds to the JSON property `dataLabel`
  #
  # @return [Google::Apis::SheetsV4::DataLabel]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1200
  def data_label=(_arg0); end

  # Properties that describe the style of a line.
  # Corresponds to the JSON property `lineStyle`
  #
  # @return [Google::Apis::SheetsV4::LineStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1205
  def line_style; end

  # Properties that describe the style of a line.
  # Corresponds to the JSON property `lineStyle`
  #
  # @return [Google::Apis::SheetsV4::LineStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1205
  def line_style=(_arg0); end

  # The style of a point on the chart.
  # Corresponds to the JSON property `pointStyle`
  #
  # @return [Google::Apis::SheetsV4::PointStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1210
  def point_style; end

  # The style of a point on the chart.
  # Corresponds to the JSON property `pointStyle`
  #
  # @return [Google::Apis::SheetsV4::PointStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1210
  def point_style=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `series`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1215
  def series; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `series`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1215
  def series=(_arg0); end

  # Style override settings for series data points.
  # Corresponds to the JSON property `styleOverrides`
  #
  # @return [Array<Google::Apis::SheetsV4::BasicSeriesDataPointStyleOverride>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1220
  def style_overrides; end

  # Style override settings for series data points.
  # Corresponds to the JSON property `styleOverrides`
  #
  # @return [Array<Google::Apis::SheetsV4::BasicSeriesDataPointStyleOverride>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1220
  def style_overrides=(_arg0); end

  # The minor axis that will specify the range of values for this series. For
  # example, if charting stocks over time, the "Volume" series may want to be
  # pinned to the right with the prices pinned to the left, because the scale of
  # trading volume is different than the scale of prices. It is an error to
  # specify an axis that isn't a valid minor axis for the chart's type.
  # Corresponds to the JSON property `targetAxis`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1229
  def target_axis; end

  # The minor axis that will specify the range of values for this series. For
  # example, if charting stocks over time, the "Volume" series may want to be
  # pinned to the right with the prices pinned to the left, because the scale of
  # trading volume is different than the scale of prices. It is an error to
  # specify an axis that isn't a valid minor axis for the chart's type.
  # Corresponds to the JSON property `targetAxis`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1229
  def target_axis=(_arg0); end

  # The type of this series. Valid only if the chartType is COMBO. Different types
  # will change the way the series is visualized. Only LINE, AREA, and COLUMN are
  # supported.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1236
  def type; end

  # The type of this series. Valid only if the chartType is COMBO. Different types
  # will change the way the series is visualized. Only LINE, AREA, and COLUMN are
  # supported.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1236
  def type=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1243
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#200
class Google::Apis::SheetsV4::BasicChartSeries::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The specification for a basic chart. See BasicChartType for the list of charts
# this supports.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1258
class Google::Apis::SheetsV4::BasicChartSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BasicChartSpec] a new instance of BasicChartSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1335
  def initialize(**args); end

  # The axis on the chart.
  # Corresponds to the JSON property `axis`
  #
  # @return [Array<Google::Apis::SheetsV4::BasicChartAxis>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1264
  def axis; end

  # The axis on the chart.
  # Corresponds to the JSON property `axis`
  #
  # @return [Array<Google::Apis::SheetsV4::BasicChartAxis>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1264
  def axis=(_arg0); end

  # The type of the chart.
  # Corresponds to the JSON property `chartType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1269
  def chart_type; end

  # The type of the chart.
  # Corresponds to the JSON property `chartType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1269
  def chart_type=(_arg0); end

  # The behavior of tooltips and data highlighting when hovering on data and chart
  # area.
  # Corresponds to the JSON property `compareMode`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1275
  def compare_mode; end

  # The behavior of tooltips and data highlighting when hovering on data and chart
  # area.
  # Corresponds to the JSON property `compareMode`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1275
  def compare_mode=(_arg0); end

  # The domain of data this is charting. Only a single domain is supported.
  # Corresponds to the JSON property `domains`
  #
  # @return [Array<Google::Apis::SheetsV4::BasicChartDomain>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1280
  def domains; end

  # The domain of data this is charting. Only a single domain is supported.
  # Corresponds to the JSON property `domains`
  #
  # @return [Array<Google::Apis::SheetsV4::BasicChartDomain>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1280
  def domains=(_arg0); end

  # The number of rows or columns in the data that are "headers". If not set,
  # Google Sheets will guess how many rows are headers based on the data. (Note
  # that BasicChartAxis.title may override the axis title inferred from the header
  # values.)
  # Corresponds to the JSON property `headerCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1288
  def header_count; end

  # The number of rows or columns in the data that are "headers". If not set,
  # Google Sheets will guess how many rows are headers based on the data. (Note
  # that BasicChartAxis.title may override the axis title inferred from the header
  # values.)
  # Corresponds to the JSON property `headerCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1288
  def header_count=(_arg0); end

  # If some values in a series are missing, gaps may appear in the chart (e.g,
  # segments of lines in a line chart will be missing). To eliminate these gaps
  # set this to true. Applies to Line, Area, and Combo charts.
  # Corresponds to the JSON property `interpolateNulls`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1295
  def interpolate_nulls; end

  # If some values in a series are missing, gaps may appear in the chart (e.g,
  # segments of lines in a line chart will be missing). To eliminate these gaps
  # set this to true. Applies to Line, Area, and Combo charts.
  # Corresponds to the JSON property `interpolateNulls`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1295
  def interpolate_nulls=(_arg0); end

  # If some values in a series are missing, gaps may appear in the chart (e.g,
  # segments of lines in a line chart will be missing). To eliminate these gaps
  # set this to true. Applies to Line, Area, and Combo charts.
  # Corresponds to the JSON property `interpolateNulls`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1295
  def interpolate_nulls?; end

  # The position of the chart legend.
  # Corresponds to the JSON property `legendPosition`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1301
  def legend_position; end

  # The position of the chart legend.
  # Corresponds to the JSON property `legendPosition`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1301
  def legend_position=(_arg0); end

  # Gets whether all lines should be rendered smooth or straight by default.
  # Applies to Line charts.
  # Corresponds to the JSON property `lineSmoothing`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1307
  def line_smoothing; end

  # Gets whether all lines should be rendered smooth or straight by default.
  # Applies to Line charts.
  # Corresponds to the JSON property `lineSmoothing`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1307
  def line_smoothing=(_arg0); end

  # Gets whether all lines should be rendered smooth or straight by default.
  # Applies to Line charts.
  # Corresponds to the JSON property `lineSmoothing`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1307
  def line_smoothing?; end

  # The data this chart is visualizing.
  # Corresponds to the JSON property `series`
  #
  # @return [Array<Google::Apis::SheetsV4::BasicChartSeries>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1313
  def series; end

  # The data this chart is visualizing.
  # Corresponds to the JSON property `series`
  #
  # @return [Array<Google::Apis::SheetsV4::BasicChartSeries>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1313
  def series=(_arg0); end

  # The stacked type for charts that support vertical stacking. Applies to Area,
  # Bar, Column, Combo, and Stepped Area charts.
  # Corresponds to the JSON property `stackedType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1319
  def stacked_type; end

  # The stacked type for charts that support vertical stacking. Applies to Area,
  # Bar, Column, Combo, and Stepped Area charts.
  # Corresponds to the JSON property `stackedType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1319
  def stacked_type=(_arg0); end

  # True to make the chart 3D. Applies to Bar and Column charts.
  # Corresponds to the JSON property `threeDimensional`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1324
  def three_dimensional; end

  # True to make the chart 3D. Applies to Bar and Column charts.
  # Corresponds to the JSON property `threeDimensional`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1324
  def three_dimensional=(_arg0); end

  # True to make the chart 3D. Applies to Bar and Column charts.
  # Corresponds to the JSON property `threeDimensional`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1324
  def three_dimensional?; end

  # Settings for one set of data labels. Data labels are annotations that appear
  # next to a set of data, such as the points on a line chart, and provide
  # additional information about what the data represents, such as a text
  # representation of the value behind that point on the graph.
  # Corresponds to the JSON property `totalDataLabel`
  #
  # @return [Google::Apis::SheetsV4::DataLabel]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1333
  def total_data_label; end

  # Settings for one set of data labels. Data labels are annotations that appear
  # next to a set of data, such as the points on a line chart, and provide
  # additional information about what the data represents, such as a text
  # representation of the value behind that point on the graph.
  # Corresponds to the JSON property `totalDataLabel`
  #
  # @return [Google::Apis::SheetsV4::DataLabel]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1333
  def total_data_label=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1340
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#206
class Google::Apis::SheetsV4::BasicChartSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The default filter associated with a sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1357
class Google::Apis::SheetsV4::BasicFilter
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BasicFilter] a new instance of BasicFilter
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1397
  def initialize(**args); end

  # The criteria for showing/hiding values per column. The map's key is the column
  # index, and the value is the criteria for that column. This field is deprecated
  # in favor of filter_specs.
  # Corresponds to the JSON property `criteria`
  #
  # @return [Hash<String,Google::Apis::SheetsV4::FilterCriteria>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1365
  def criteria; end

  # The criteria for showing/hiding values per column. The map's key is the column
  # index, and the value is the criteria for that column. This field is deprecated
  # in favor of filter_specs.
  # Corresponds to the JSON property `criteria`
  #
  # @return [Hash<String,Google::Apis::SheetsV4::FilterCriteria>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1365
  def criteria=(_arg0); end

  # The filter criteria per column. Both criteria and filter_specs are populated
  # in responses. If both fields are specified in an update request, this field
  # takes precedence.
  # Corresponds to the JSON property `filterSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::FilterSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1372
  def filter_specs; end

  # The filter criteria per column. Both criteria and filter_specs are populated
  # in responses. If both fields are specified in an update request, this field
  # takes precedence.
  # Corresponds to the JSON property `filterSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::FilterSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1372
  def filter_specs=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1389
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1389
  def range=(_arg0); end

  # The sort order per column. Later specifications are used when values are equal
  # in the earlier specifications.
  # Corresponds to the JSON property `sortSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::SortSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1395
  def sort_specs; end

  # The sort order per column. Later specifications are used when values are equal
  # in the earlier specifications.
  # Corresponds to the JSON property `sortSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::SortSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1395
  def sort_specs=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1402
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#212
class Google::Apis::SheetsV4::BasicFilter::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Style override settings for a single series data point.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1411
class Google::Apis::SheetsV4::BasicSeriesDataPointStyleOverride
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BasicSeriesDataPointStyleOverride] a new instance of BasicSeriesDataPointStyleOverride
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1478
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1461
  def color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1461
  def color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1466
  def color_style; end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1466
  def color_style=(_arg0); end

  # The zero-based index of the series data point.
  # Corresponds to the JSON property `index`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1471
  def index; end

  # The zero-based index of the series data point.
  # Corresponds to the JSON property `index`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1471
  def index=(_arg0); end

  # The style of a point on the chart.
  # Corresponds to the JSON property `pointStyle`
  #
  # @return [Google::Apis::SheetsV4::PointStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1476
  def point_style; end

  # The style of a point on the chart.
  # Corresponds to the JSON property `pointStyle`
  #
  # @return [Google::Apis::SheetsV4::PointStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1476
  def point_style=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1483
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#218
class Google::Apis::SheetsV4::BasicSeriesDataPointStyleOverride::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The request for clearing more than one range selected by a DataFilter in a
# spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1493
class Google::Apis::SheetsV4::BatchClearValuesByDataFilterRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchClearValuesByDataFilterRequest] a new instance of BatchClearValuesByDataFilterRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1501
  def initialize(**args); end

  # The DataFilters used to determine which ranges to clear.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1499
  def data_filters; end

  # The DataFilters used to determine which ranges to clear.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1499
  def data_filters=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1506
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#224
class Google::Apis::SheetsV4::BatchClearValuesByDataFilterRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response when clearing a range of values selected with DataFilters in a
# spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1513
class Google::Apis::SheetsV4::BatchClearValuesByDataFilterResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchClearValuesByDataFilterResponse] a new instance of BatchClearValuesByDataFilterResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1529
  def initialize(**args); end

  # The ranges that were cleared, in [A1 notation](/sheets/api/guides/concepts#
  # cell). If the requests are for an unbounded range or a ranger larger than the
  # bounds of the sheet, this is the actual ranges that were cleared, bounded to
  # the sheet's limits.
  # Corresponds to the JSON property `clearedRanges`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1522
  def cleared_ranges; end

  # The ranges that were cleared, in [A1 notation](/sheets/api/guides/concepts#
  # cell). If the requests are for an unbounded range or a ranger larger than the
  # bounds of the sheet, this is the actual ranges that were cleared, bounded to
  # the sheet's limits.
  # Corresponds to the JSON property `clearedRanges`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1522
  def cleared_ranges=(_arg0); end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1527
  def spreadsheet_id; end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1527
  def spreadsheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1534
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#230
class Google::Apis::SheetsV4::BatchClearValuesByDataFilterResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The request for clearing more than one range of values in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1541
class Google::Apis::SheetsV4::BatchClearValuesRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchClearValuesRequest] a new instance of BatchClearValuesRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1550
  def initialize(**args); end

  # The ranges to clear, in [A1 notation or R1C1 notation](/sheets/api/guides/
  # concepts#cell).
  # Corresponds to the JSON property `ranges`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1548
  def ranges; end

  # The ranges to clear, in [A1 notation or R1C1 notation](/sheets/api/guides/
  # concepts#cell).
  # Corresponds to the JSON property `ranges`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1548
  def ranges=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1555
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#236
class Google::Apis::SheetsV4::BatchClearValuesRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response when clearing a range of values in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1561
class Google::Apis::SheetsV4::BatchClearValuesResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchClearValuesResponse] a new instance of BatchClearValuesResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1576
  def initialize(**args); end

  # The ranges that were cleared, in A1 notation. If the requests are for an
  # unbounded range or a ranger larger than the bounds of the sheet, this is the
  # actual ranges that were cleared, bounded to the sheet's limits.
  # Corresponds to the JSON property `clearedRanges`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1569
  def cleared_ranges; end

  # The ranges that were cleared, in A1 notation. If the requests are for an
  # unbounded range or a ranger larger than the bounds of the sheet, this is the
  # actual ranges that were cleared, bounded to the sheet's limits.
  # Corresponds to the JSON property `clearedRanges`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1569
  def cleared_ranges=(_arg0); end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1574
  def spreadsheet_id; end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1574
  def spreadsheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1581
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#242
class Google::Apis::SheetsV4::BatchClearValuesResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The request for retrieving a range of values in a spreadsheet selected by a
# set of DataFilters.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1589
class Google::Apis::SheetsV4::BatchGetValuesByDataFilterRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchGetValuesByDataFilterRequest] a new instance of BatchGetValuesByDataFilterRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1619
  def initialize(**args); end

  # The data filters used to match the ranges of values to retrieve. Ranges that
  # match any of the specified data filters are included in the response.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1596
  def data_filters; end

  # The data filters used to match the ranges of values to retrieve. Ranges that
  # match any of the specified data filters are included in the response.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1596
  def data_filters=(_arg0); end

  # How dates, times, and durations should be represented in the output. This is
  # ignored if value_render_option is FORMATTED_VALUE. The default dateTime render
  # option is SERIAL_NUMBER.
  # Corresponds to the JSON property `dateTimeRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1603
  def date_time_render_option; end

  # How dates, times, and durations should be represented in the output. This is
  # ignored if value_render_option is FORMATTED_VALUE. The default dateTime render
  # option is SERIAL_NUMBER.
  # Corresponds to the JSON property `dateTimeRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1603
  def date_time_render_option=(_arg0); end

  # The major dimension that results should use. For example, if the spreadsheet
  # data is: `A1=1,B1=2,A2=3,B2=4`, then a request that selects that range and
  # sets `majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas a request that
  # sets `majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
  # Corresponds to the JSON property `majorDimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1611
  def major_dimension; end

  # The major dimension that results should use. For example, if the spreadsheet
  # data is: `A1=1,B1=2,A2=3,B2=4`, then a request that selects that range and
  # sets `majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas a request that
  # sets `majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
  # Corresponds to the JSON property `majorDimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1611
  def major_dimension=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1624
  def update!(**args); end

  # How values should be represented in the output. The default render option is
  # FORMATTED_VALUE.
  # Corresponds to the JSON property `valueRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1617
  def value_render_option; end

  # How values should be represented in the output. The default render option is
  # FORMATTED_VALUE.
  # Corresponds to the JSON property `valueRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1617
  def value_render_option=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#248
class Google::Apis::SheetsV4::BatchGetValuesByDataFilterRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response when retrieving more than one range of values in a spreadsheet
# selected by DataFilters.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1634
class Google::Apis::SheetsV4::BatchGetValuesByDataFilterResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchGetValuesByDataFilterResponse] a new instance of BatchGetValuesByDataFilterResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1647
  def initialize(**args); end

  # The ID of the spreadsheet the data was retrieved from.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1640
  def spreadsheet_id; end

  # The ID of the spreadsheet the data was retrieved from.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1640
  def spreadsheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1652
  def update!(**args); end

  # The requested values with the list of data filters that matched them.
  # Corresponds to the JSON property `valueRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::MatchedValueRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1645
  def value_ranges; end

  # The requested values with the list of data filters that matched them.
  # Corresponds to the JSON property `valueRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::MatchedValueRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1645
  def value_ranges=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#254
class Google::Apis::SheetsV4::BatchGetValuesByDataFilterResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response when retrieving more than one range of values in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1659
class Google::Apis::SheetsV4::BatchGetValuesResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchGetValuesResponse] a new instance of BatchGetValuesResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1673
  def initialize(**args); end

  # The ID of the spreadsheet the data was retrieved from.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1665
  def spreadsheet_id; end

  # The ID of the spreadsheet the data was retrieved from.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1665
  def spreadsheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1678
  def update!(**args); end

  # The requested values. The order of the ValueRanges is the same as the order of
  # the requested ranges.
  # Corresponds to the JSON property `valueRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::ValueRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1671
  def value_ranges; end

  # The requested values. The order of the ValueRanges is the same as the order of
  # the requested ranges.
  # Corresponds to the JSON property `valueRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::ValueRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1671
  def value_ranges=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#260
class Google::Apis::SheetsV4::BatchGetValuesResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The request for updating any aspect of a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1685
class Google::Apis::SheetsV4::BatchUpdateSpreadsheetRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchUpdateSpreadsheetRequest] a new instance of BatchUpdateSpreadsheetRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1715
  def initialize(**args); end

  # Determines if the update response should include the spreadsheet resource.
  # Corresponds to the JSON property `includeSpreadsheetInResponse`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1691
  def include_spreadsheet_in_response; end

  # Determines if the update response should include the spreadsheet resource.
  # Corresponds to the JSON property `includeSpreadsheetInResponse`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1691
  def include_spreadsheet_in_response=(_arg0); end

  # Determines if the update response should include the spreadsheet resource.
  # Corresponds to the JSON property `includeSpreadsheetInResponse`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1691
  def include_spreadsheet_in_response?; end

  # A list of updates to apply to the spreadsheet. Requests will be applied in the
  # order they are specified. If any request is not valid, no requests will be
  # applied.
  # Corresponds to the JSON property `requests`
  #
  # @return [Array<Google::Apis::SheetsV4::Request>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1699
  def requests; end

  # A list of updates to apply to the spreadsheet. Requests will be applied in the
  # order they are specified. If any request is not valid, no requests will be
  # applied.
  # Corresponds to the JSON property `requests`
  #
  # @return [Array<Google::Apis::SheetsV4::Request>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1699
  def requests=(_arg0); end

  # True if grid data should be returned. Meaningful only if
  # include_spreadsheet_in_response is 'true'. This parameter is ignored if a
  # field mask was set in the request.
  # Corresponds to the JSON property `responseIncludeGridData`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1706
  def response_include_grid_data; end

  # True if grid data should be returned. Meaningful only if
  # include_spreadsheet_in_response is 'true'. This parameter is ignored if a
  # field mask was set in the request.
  # Corresponds to the JSON property `responseIncludeGridData`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1706
  def response_include_grid_data=(_arg0); end

  # True if grid data should be returned. Meaningful only if
  # include_spreadsheet_in_response is 'true'. This parameter is ignored if a
  # field mask was set in the request.
  # Corresponds to the JSON property `responseIncludeGridData`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1706
  def response_include_grid_data?; end

  # Limits the ranges included in the response spreadsheet. Meaningful only if
  # include_spreadsheet_in_response is 'true'.
  # Corresponds to the JSON property `responseRanges`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1713
  def response_ranges; end

  # Limits the ranges included in the response spreadsheet. Meaningful only if
  # include_spreadsheet_in_response is 'true'.
  # Corresponds to the JSON property `responseRanges`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1713
  def response_ranges=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1720
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#266
class Google::Apis::SheetsV4::BatchUpdateSpreadsheetRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The reply for batch updating a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1729
class Google::Apis::SheetsV4::BatchUpdateSpreadsheetResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchUpdateSpreadsheetResponse] a new instance of BatchUpdateSpreadsheetResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1748
  def initialize(**args); end

  # The reply of the updates. This maps 1:1 with the updates, although replies to
  # some requests may be empty.
  # Corresponds to the JSON property `replies`
  #
  # @return [Array<Google::Apis::SheetsV4::Response>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1736
  def replies; end

  # The reply of the updates. This maps 1:1 with the updates, although replies to
  # some requests may be empty.
  # Corresponds to the JSON property `replies`
  #
  # @return [Array<Google::Apis::SheetsV4::Response>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1736
  def replies=(_arg0); end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1741
  def spreadsheet_id; end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1741
  def spreadsheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1753
  def update!(**args); end

  # Resource that represents a spreadsheet.
  # Corresponds to the JSON property `updatedSpreadsheet`
  #
  # @return [Google::Apis::SheetsV4::Spreadsheet]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1746
  def updated_spreadsheet; end

  # Resource that represents a spreadsheet.
  # Corresponds to the JSON property `updatedSpreadsheet`
  #
  # @return [Google::Apis::SheetsV4::Spreadsheet]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1746
  def updated_spreadsheet=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#272
class Google::Apis::SheetsV4::BatchUpdateSpreadsheetResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The request for updating more than one range of values in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1761
class Google::Apis::SheetsV4::BatchUpdateValuesByDataFilterRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchUpdateValuesByDataFilterRequest] a new instance of BatchUpdateValuesByDataFilterRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1800
  def initialize(**args); end

  # The new values to apply to the spreadsheet. If more than one range is matched
  # by the specified DataFilter the specified values are applied to all of those
  # ranges.
  # Corresponds to the JSON property `data`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilterValueRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1769
  def data; end

  # The new values to apply to the spreadsheet. If more than one range is matched
  # by the specified DataFilter the specified values are applied to all of those
  # ranges.
  # Corresponds to the JSON property `data`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilterValueRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1769
  def data=(_arg0); end

  # Determines if the update response should include the values of the cells that
  # were updated. By default, responses do not include the updated values. The `
  # updatedData` field within each of the BatchUpdateValuesResponse.responses
  # contains the updated values. If the range to write was larger than the range
  # actually written, the response includes all values in the requested range (
  # excluding trailing empty rows and columns).
  # Corresponds to the JSON property `includeValuesInResponse`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1779
  def include_values_in_response; end

  # Determines if the update response should include the values of the cells that
  # were updated. By default, responses do not include the updated values. The `
  # updatedData` field within each of the BatchUpdateValuesResponse.responses
  # contains the updated values. If the range to write was larger than the range
  # actually written, the response includes all values in the requested range (
  # excluding trailing empty rows and columns).
  # Corresponds to the JSON property `includeValuesInResponse`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1779
  def include_values_in_response=(_arg0); end

  # Determines if the update response should include the values of the cells that
  # were updated. By default, responses do not include the updated values. The `
  # updatedData` field within each of the BatchUpdateValuesResponse.responses
  # contains the updated values. If the range to write was larger than the range
  # actually written, the response includes all values in the requested range (
  # excluding trailing empty rows and columns).
  # Corresponds to the JSON property `includeValuesInResponse`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1779
  def include_values_in_response?; end

  # Determines how dates, times, and durations in the response should be rendered.
  # This is ignored if response_value_render_option is FORMATTED_VALUE. The
  # default dateTime render option is SERIAL_NUMBER.
  # Corresponds to the JSON property `responseDateTimeRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1787
  def response_date_time_render_option; end

  # Determines how dates, times, and durations in the response should be rendered.
  # This is ignored if response_value_render_option is FORMATTED_VALUE. The
  # default dateTime render option is SERIAL_NUMBER.
  # Corresponds to the JSON property `responseDateTimeRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1787
  def response_date_time_render_option=(_arg0); end

  # Determines how values in the response should be rendered. The default render
  # option is FORMATTED_VALUE.
  # Corresponds to the JSON property `responseValueRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1793
  def response_value_render_option; end

  # Determines how values in the response should be rendered. The default render
  # option is FORMATTED_VALUE.
  # Corresponds to the JSON property `responseValueRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1793
  def response_value_render_option=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1805
  def update!(**args); end

  # How the input data should be interpreted.
  # Corresponds to the JSON property `valueInputOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1798
  def value_input_option; end

  # How the input data should be interpreted.
  # Corresponds to the JSON property `valueInputOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1798
  def value_input_option=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#278
class Google::Apis::SheetsV4::BatchUpdateValuesByDataFilterRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response when updating a range of values in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1815
class Google::Apis::SheetsV4::BatchUpdateValuesByDataFilterResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchUpdateValuesByDataFilterResponse] a new instance of BatchUpdateValuesByDataFilterResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1848
  def initialize(**args); end

  # The response for each range updated.
  # Corresponds to the JSON property `responses`
  #
  # @return [Array<Google::Apis::SheetsV4::UpdateValuesByDataFilterResponse>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1821
  def responses; end

  # The response for each range updated.
  # Corresponds to the JSON property `responses`
  #
  # @return [Array<Google::Apis::SheetsV4::UpdateValuesByDataFilterResponse>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1821
  def responses=(_arg0); end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1826
  def spreadsheet_id; end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1826
  def spreadsheet_id=(_arg0); end

  # The total number of cells updated.
  # Corresponds to the JSON property `totalUpdatedCells`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1831
  def total_updated_cells; end

  # The total number of cells updated.
  # Corresponds to the JSON property `totalUpdatedCells`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1831
  def total_updated_cells=(_arg0); end

  # The total number of columns where at least one cell in the column was updated.
  # Corresponds to the JSON property `totalUpdatedColumns`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1836
  def total_updated_columns; end

  # The total number of columns where at least one cell in the column was updated.
  # Corresponds to the JSON property `totalUpdatedColumns`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1836
  def total_updated_columns=(_arg0); end

  # The total number of rows where at least one cell in the row was updated.
  # Corresponds to the JSON property `totalUpdatedRows`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1841
  def total_updated_rows; end

  # The total number of rows where at least one cell in the row was updated.
  # Corresponds to the JSON property `totalUpdatedRows`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1841
  def total_updated_rows=(_arg0); end

  # The total number of sheets where at least one cell in the sheet was updated.
  # Corresponds to the JSON property `totalUpdatedSheets`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1846
  def total_updated_sheets; end

  # The total number of sheets where at least one cell in the sheet was updated.
  # Corresponds to the JSON property `totalUpdatedSheets`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1846
  def total_updated_sheets=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1853
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#284
class Google::Apis::SheetsV4::BatchUpdateValuesByDataFilterResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The request for updating more than one range of values in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1864
class Google::Apis::SheetsV4::BatchUpdateValuesRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchUpdateValuesRequest] a new instance of BatchUpdateValuesRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1901
  def initialize(**args); end

  # The new values to apply to the spreadsheet.
  # Corresponds to the JSON property `data`
  #
  # @return [Array<Google::Apis::SheetsV4::ValueRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1870
  def data; end

  # The new values to apply to the spreadsheet.
  # Corresponds to the JSON property `data`
  #
  # @return [Array<Google::Apis::SheetsV4::ValueRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1870
  def data=(_arg0); end

  # Determines if the update response should include the values of the cells that
  # were updated. By default, responses do not include the updated values. The `
  # updatedData` field within each of the BatchUpdateValuesResponse.responses
  # contains the updated values. If the range to write was larger than the range
  # actually written, the response includes all values in the requested range (
  # excluding trailing empty rows and columns).
  # Corresponds to the JSON property `includeValuesInResponse`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1880
  def include_values_in_response; end

  # Determines if the update response should include the values of the cells that
  # were updated. By default, responses do not include the updated values. The `
  # updatedData` field within each of the BatchUpdateValuesResponse.responses
  # contains the updated values. If the range to write was larger than the range
  # actually written, the response includes all values in the requested range (
  # excluding trailing empty rows and columns).
  # Corresponds to the JSON property `includeValuesInResponse`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1880
  def include_values_in_response=(_arg0); end

  # Determines if the update response should include the values of the cells that
  # were updated. By default, responses do not include the updated values. The `
  # updatedData` field within each of the BatchUpdateValuesResponse.responses
  # contains the updated values. If the range to write was larger than the range
  # actually written, the response includes all values in the requested range (
  # excluding trailing empty rows and columns).
  # Corresponds to the JSON property `includeValuesInResponse`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1880
  def include_values_in_response?; end

  # Determines how dates, times, and durations in the response should be rendered.
  # This is ignored if response_value_render_option is FORMATTED_VALUE. The
  # default dateTime render option is SERIAL_NUMBER.
  # Corresponds to the JSON property `responseDateTimeRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1888
  def response_date_time_render_option; end

  # Determines how dates, times, and durations in the response should be rendered.
  # This is ignored if response_value_render_option is FORMATTED_VALUE. The
  # default dateTime render option is SERIAL_NUMBER.
  # Corresponds to the JSON property `responseDateTimeRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1888
  def response_date_time_render_option=(_arg0); end

  # Determines how values in the response should be rendered. The default render
  # option is FORMATTED_VALUE.
  # Corresponds to the JSON property `responseValueRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1894
  def response_value_render_option; end

  # Determines how values in the response should be rendered. The default render
  # option is FORMATTED_VALUE.
  # Corresponds to the JSON property `responseValueRenderOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1894
  def response_value_render_option=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1906
  def update!(**args); end

  # How the input data should be interpreted.
  # Corresponds to the JSON property `valueInputOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1899
  def value_input_option; end

  # How the input data should be interpreted.
  # Corresponds to the JSON property `valueInputOption`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1899
  def value_input_option=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#290
class Google::Apis::SheetsV4::BatchUpdateValuesRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response when updating a range of values in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1916
class Google::Apis::SheetsV4::BatchUpdateValuesResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BatchUpdateValuesResponse] a new instance of BatchUpdateValuesResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1950
  def initialize(**args); end

  # One UpdateValuesResponse per requested range, in the same order as the
  # requests appeared.
  # Corresponds to the JSON property `responses`
  #
  # @return [Array<Google::Apis::SheetsV4::UpdateValuesResponse>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1923
  def responses; end

  # One UpdateValuesResponse per requested range, in the same order as the
  # requests appeared.
  # Corresponds to the JSON property `responses`
  #
  # @return [Array<Google::Apis::SheetsV4::UpdateValuesResponse>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1923
  def responses=(_arg0); end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1928
  def spreadsheet_id; end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1928
  def spreadsheet_id=(_arg0); end

  # The total number of cells updated.
  # Corresponds to the JSON property `totalUpdatedCells`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1933
  def total_updated_cells; end

  # The total number of cells updated.
  # Corresponds to the JSON property `totalUpdatedCells`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1933
  def total_updated_cells=(_arg0); end

  # The total number of columns where at least one cell in the column was updated.
  # Corresponds to the JSON property `totalUpdatedColumns`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1938
  def total_updated_columns; end

  # The total number of columns where at least one cell in the column was updated.
  # Corresponds to the JSON property `totalUpdatedColumns`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1938
  def total_updated_columns=(_arg0); end

  # The total number of rows where at least one cell in the row was updated.
  # Corresponds to the JSON property `totalUpdatedRows`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1943
  def total_updated_rows; end

  # The total number of rows where at least one cell in the row was updated.
  # Corresponds to the JSON property `totalUpdatedRows`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1943
  def total_updated_rows=(_arg0); end

  # The total number of sheets where at least one cell in the sheet was updated.
  # Corresponds to the JSON property `totalUpdatedSheets`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1948
  def total_updated_sheets; end

  # The total number of sheets where at least one cell in the sheet was updated.
  # Corresponds to the JSON property `totalUpdatedSheets`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1948
  def total_updated_sheets=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1955
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#296
class Google::Apis::SheetsV4::BatchUpdateValuesResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The specification of a BigQuery data source that's connected to a sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1966
class Google::Apis::SheetsV4::BigQueryDataSourceSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BigQueryDataSourceSpec] a new instance of BigQueryDataSourceSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1987
  def initialize(**args); end

  # The ID of a BigQuery enabled Google Cloud project with a billing account
  # attached. For any queries executed against the data source, the project is
  # charged.
  # Corresponds to the JSON property `projectId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1974
  def project_id; end

  # The ID of a BigQuery enabled Google Cloud project with a billing account
  # attached. For any queries executed against the data source, the project is
  # charged.
  # Corresponds to the JSON property `projectId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1974
  def project_id=(_arg0); end

  # Specifies a custom BigQuery query.
  # Corresponds to the JSON property `querySpec`
  #
  # @return [Google::Apis::SheetsV4::BigQueryQuerySpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1979
  def query_spec; end

  # Specifies a custom BigQuery query.
  # Corresponds to the JSON property `querySpec`
  #
  # @return [Google::Apis::SheetsV4::BigQueryQuerySpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1979
  def query_spec=(_arg0); end

  # Specifies a BigQuery table definition. Only [native tables](https://cloud.
  # google.com/bigquery/docs/tables-intro) are allowed.
  # Corresponds to the JSON property `tableSpec`
  #
  # @return [Google::Apis::SheetsV4::BigQueryTableSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1985
  def table_spec; end

  # Specifies a BigQuery table definition. Only [native tables](https://cloud.
  # google.com/bigquery/docs/tables-intro) are allowed.
  # Corresponds to the JSON property `tableSpec`
  #
  # @return [Google::Apis::SheetsV4::BigQueryTableSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1985
  def table_spec=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#1992
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#302
class Google::Apis::SheetsV4::BigQueryDataSourceSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Specifies a custom BigQuery query.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2000
class Google::Apis::SheetsV4::BigQueryQuerySpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BigQueryQuerySpec] a new instance of BigQueryQuerySpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2008
  def initialize(**args); end

  # The raw query string.
  # Corresponds to the JSON property `rawQuery`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2006
  def raw_query; end

  # The raw query string.
  # Corresponds to the JSON property `rawQuery`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2006
  def raw_query=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2013
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#308
class Google::Apis::SheetsV4::BigQueryQuerySpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Specifies a BigQuery table definition. Only [native tables](https://cloud.
# google.com/bigquery/docs/tables-intro) are allowed.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2020
class Google::Apis::SheetsV4::BigQueryTableSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BigQueryTableSpec] a new instance of BigQueryTableSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2039
  def initialize(**args); end

  # The BigQuery dataset id.
  # Corresponds to the JSON property `datasetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2026
  def dataset_id; end

  # The BigQuery dataset id.
  # Corresponds to the JSON property `datasetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2026
  def dataset_id=(_arg0); end

  # The BigQuery table id.
  # Corresponds to the JSON property `tableId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2031
  def table_id; end

  # The BigQuery table id.
  # Corresponds to the JSON property `tableId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2031
  def table_id=(_arg0); end

  # The ID of a BigQuery project the table belongs to. If not specified, the
  # project_id is assumed.
  # Corresponds to the JSON property `tableProjectId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2037
  def table_project_id; end

  # The ID of a BigQuery project the table belongs to. If not specified, the
  # project_id is assumed.
  # Corresponds to the JSON property `tableProjectId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2037
  def table_project_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2044
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#314
class Google::Apis::SheetsV4::BigQueryTableSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A condition that can evaluate to true or false. BooleanConditions are used by
# conditional formatting, data validation, and the criteria in filters.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2053
class Google::Apis::SheetsV4::BooleanCondition
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BooleanCondition] a new instance of BooleanCondition
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2068
  def initialize(**args); end

  # The type of condition.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2059
  def type; end

  # The type of condition.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2059
  def type=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2073
  def update!(**args); end

  # The values of the condition. The number of supported values depends on the
  # condition type. Some support zero values, others one or two values, and
  # ConditionType.ONE_OF_LIST supports an arbitrary number of values.
  # Corresponds to the JSON property `values`
  #
  # @return [Array<Google::Apis::SheetsV4::ConditionValue>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2066
  def values; end

  # The values of the condition. The number of supported values depends on the
  # condition type. Some support zero values, others one or two values, and
  # ConditionType.ONE_OF_LIST supports an arbitrary number of values.
  # Corresponds to the JSON property `values`
  #
  # @return [Array<Google::Apis::SheetsV4::ConditionValue>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2066
  def values=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#320
class Google::Apis::SheetsV4::BooleanCondition::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A rule that may or may not match, depending on the condition.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2080
class Google::Apis::SheetsV4::BooleanRule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BooleanRule] a new instance of BooleanRule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2094
  def initialize(**args); end

  # A condition that can evaluate to true or false. BooleanConditions are used by
  # conditional formatting, data validation, and the criteria in filters.
  # Corresponds to the JSON property `condition`
  #
  # @return [Google::Apis::SheetsV4::BooleanCondition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2087
  def condition; end

  # A condition that can evaluate to true or false. BooleanConditions are used by
  # conditional formatting, data validation, and the criteria in filters.
  # Corresponds to the JSON property `condition`
  #
  # @return [Google::Apis::SheetsV4::BooleanCondition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2087
  def condition=(_arg0); end

  # The format of a cell.
  # Corresponds to the JSON property `format`
  #
  # @return [Google::Apis::SheetsV4::CellFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2092
  def format; end

  # The format of a cell.
  # Corresponds to the JSON property `format`
  #
  # @return [Google::Apis::SheetsV4::CellFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2092
  def format=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2099
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#326
class Google::Apis::SheetsV4::BooleanRule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A border along a cell.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2106
class Google::Apis::SheetsV4::Border
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Border] a new instance of Border
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2174
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2156
  def color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2156
  def color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2161
  def color_style; end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2161
  def color_style=(_arg0); end

  # The style of the border.
  # Corresponds to the JSON property `style`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2166
  def style; end

  # The style of the border.
  # Corresponds to the JSON property `style`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2166
  def style=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2179
  def update!(**args); end

  # The width of the border, in pixels. Deprecated; the width is determined by the
  # "style" field.
  # Corresponds to the JSON property `width`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2172
  def width; end

  # The width of the border, in pixels. Deprecated; the width is determined by the
  # "style" field.
  # Corresponds to the JSON property `width`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2172
  def width=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#332
class Google::Apis::SheetsV4::Border::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The borders of the cell.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2188
class Google::Apis::SheetsV4::Borders
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Borders] a new instance of Borders
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2211
  def initialize(**args); end

  # A border along a cell.
  # Corresponds to the JSON property `bottom`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2194
  def bottom; end

  # A border along a cell.
  # Corresponds to the JSON property `bottom`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2194
  def bottom=(_arg0); end

  # A border along a cell.
  # Corresponds to the JSON property `left`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2199
  def left; end

  # A border along a cell.
  # Corresponds to the JSON property `left`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2199
  def left=(_arg0); end

  # A border along a cell.
  # Corresponds to the JSON property `right`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2204
  def right; end

  # A border along a cell.
  # Corresponds to the JSON property `right`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2204
  def right=(_arg0); end

  # A border along a cell.
  # Corresponds to the JSON property `top`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2209
  def top; end

  # A border along a cell.
  # Corresponds to the JSON property `top`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2209
  def top=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2216
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#338
class Google::Apis::SheetsV4::Borders::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A bubble chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2225
class Google::Apis::SheetsV4::BubbleChartSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [BubbleChartSpec] a new instance of BubbleChartSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2336
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `bubbleBorderColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2275
  def bubble_border_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `bubbleBorderColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2275
  def bubble_border_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `bubbleBorderColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2280
  def bubble_border_color_style; end

  # A color value.
  # Corresponds to the JSON property `bubbleBorderColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2280
  def bubble_border_color_style=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `bubbleLabels`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2285
  def bubble_labels; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `bubbleLabels`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2285
  def bubble_labels=(_arg0); end

  # The max radius size of the bubbles, in pixels. If specified, the field must be
  # a positive value.
  # Corresponds to the JSON property `bubbleMaxRadiusSize`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2291
  def bubble_max_radius_size; end

  # The max radius size of the bubbles, in pixels. If specified, the field must be
  # a positive value.
  # Corresponds to the JSON property `bubbleMaxRadiusSize`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2291
  def bubble_max_radius_size=(_arg0); end

  # The minimum radius size of the bubbles, in pixels. If specific, the field must
  # be a positive value.
  # Corresponds to the JSON property `bubbleMinRadiusSize`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2297
  def bubble_min_radius_size; end

  # The minimum radius size of the bubbles, in pixels. If specific, the field must
  # be a positive value.
  # Corresponds to the JSON property `bubbleMinRadiusSize`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2297
  def bubble_min_radius_size=(_arg0); end

  # The opacity of the bubbles between 0 and 1.0. 0 is fully transparent and 1 is
  # fully opaque.
  # Corresponds to the JSON property `bubbleOpacity`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2303
  def bubble_opacity; end

  # The opacity of the bubbles between 0 and 1.0. 0 is fully transparent and 1 is
  # fully opaque.
  # Corresponds to the JSON property `bubbleOpacity`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2303
  def bubble_opacity=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `bubbleSizes`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2308
  def bubble_sizes; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `bubbleSizes`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2308
  def bubble_sizes=(_arg0); end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `bubbleTextStyle`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2314
  def bubble_text_style; end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `bubbleTextStyle`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2314
  def bubble_text_style=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `domain`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2319
  def domain; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `domain`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2319
  def domain=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `groupIds`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2324
  def group_ids; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `groupIds`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2324
  def group_ids=(_arg0); end

  # Where the legend of the chart should be drawn.
  # Corresponds to the JSON property `legendPosition`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2329
  def legend_position; end

  # Where the legend of the chart should be drawn.
  # Corresponds to the JSON property `legendPosition`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2329
  def legend_position=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `series`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2334
  def series; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `series`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2334
  def series=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2341
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#344
class Google::Apis::SheetsV4::BubbleChartSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Cancels one or multiple refreshes of data source objects in the spreadsheet by
# the specified references. The request requires an additional `bigquery.
# readonly` OAuth scope if you are cancelling a refresh on a BigQuery data
# source.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2361
class Google::Apis::SheetsV4::CancelDataSourceRefreshRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CancelDataSourceRefreshRequest] a new instance of CancelDataSourceRefreshRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2382
  def initialize(**args); end

  # Reference to a DataSource. If specified, cancels all associated data source
  # object refreshes for this data source.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2368
  def data_source_id; end

  # Reference to a DataSource. If specified, cancels all associated data source
  # object refreshes for this data source.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2368
  def data_source_id=(_arg0); end

  # Cancels all existing data source object refreshes for all data sources in the
  # spreadsheet.
  # Corresponds to the JSON property `isAll`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2374
  def is_all; end

  # Cancels all existing data source object refreshes for all data sources in the
  # spreadsheet.
  # Corresponds to the JSON property `isAll`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2374
  def is_all=(_arg0); end

  # Cancels all existing data source object refreshes for all data sources in the
  # spreadsheet.
  # Corresponds to the JSON property `isAll`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2374
  def is_all?; end

  # A list of references to data source objects.
  # Corresponds to the JSON property `references`
  #
  # @return [Google::Apis::SheetsV4::DataSourceObjectReferences]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2380
  def references; end

  # A list of references to data source objects.
  # Corresponds to the JSON property `references`
  #
  # @return [Google::Apis::SheetsV4::DataSourceObjectReferences]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2380
  def references=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2387
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#350
class Google::Apis::SheetsV4::CancelDataSourceRefreshRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response from cancelling one or multiple data source object refreshes.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2395
class Google::Apis::SheetsV4::CancelDataSourceRefreshResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CancelDataSourceRefreshResponse] a new instance of CancelDataSourceRefreshResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2406
  def initialize(**args); end

  # The cancellation statuses of refreshes of all data source objects specified in
  # the request. If is_all is specified, the field contains only those in failure
  # status. Refreshing and canceling refresh the same data source object is also
  # not allowed in the same `batchUpdate`.
  # Corresponds to the JSON property `statuses`
  #
  # @return [Array<Google::Apis::SheetsV4::CancelDataSourceRefreshStatus>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2404
  def statuses; end

  # The cancellation statuses of refreshes of all data source objects specified in
  # the request. If is_all is specified, the field contains only those in failure
  # status. Refreshing and canceling refresh the same data source object is also
  # not allowed in the same `batchUpdate`.
  # Corresponds to the JSON property `statuses`
  #
  # @return [Array<Google::Apis::SheetsV4::CancelDataSourceRefreshStatus>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2404
  def statuses=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2411
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#356
class Google::Apis::SheetsV4::CancelDataSourceRefreshResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The status of cancelling a single data source object refresh.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2417
class Google::Apis::SheetsV4::CancelDataSourceRefreshStatus
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CancelDataSourceRefreshStatus] a new instance of CancelDataSourceRefreshStatus
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2431
  def initialize(**args); end

  # Reference to a data source object.
  # Corresponds to the JSON property `reference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceObjectReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2423
  def reference; end

  # Reference to a data source object.
  # Corresponds to the JSON property `reference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceObjectReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2423
  def reference=(_arg0); end

  # The status of a refresh cancellation. You can send a cancel request to
  # explicitly cancel one or multiple data source object refreshes.
  # Corresponds to the JSON property `refreshCancellationStatus`
  #
  # @return [Google::Apis::SheetsV4::RefreshCancellationStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2429
  def refresh_cancellation_status; end

  # The status of a refresh cancellation. You can send a cancel request to
  # explicitly cancel one or multiple data source object refreshes.
  # Corresponds to the JSON property `refreshCancellationStatus`
  #
  # @return [Google::Apis::SheetsV4::RefreshCancellationStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2429
  def refresh_cancellation_status=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2436
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#362
class Google::Apis::SheetsV4::CancelDataSourceRefreshStatus::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A candlestick chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2443
class Google::Apis::SheetsV4::CandlestickChartSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CandlestickChartSpec] a new instance of CandlestickChartSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2456
  def initialize(**args); end

  # The Candlestick chart data. Only one CandlestickData is supported.
  # Corresponds to the JSON property `data`
  #
  # @return [Array<Google::Apis::SheetsV4::CandlestickData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2449
  def data; end

  # The Candlestick chart data. Only one CandlestickData is supported.
  # Corresponds to the JSON property `data`
  #
  # @return [Array<Google::Apis::SheetsV4::CandlestickData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2449
  def data=(_arg0); end

  # The domain of a CandlestickChart.
  # Corresponds to the JSON property `domain`
  #
  # @return [Google::Apis::SheetsV4::CandlestickDomain]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2454
  def domain; end

  # The domain of a CandlestickChart.
  # Corresponds to the JSON property `domain`
  #
  # @return [Google::Apis::SheetsV4::CandlestickDomain]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2454
  def domain=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2461
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#368
class Google::Apis::SheetsV4::CandlestickChartSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The Candlestick chart data, each containing the low, open, close, and high
# values for a series.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2469
class Google::Apis::SheetsV4::CandlestickData
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CandlestickData] a new instance of CandlestickData
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2492
  def initialize(**args); end

  # The series of a CandlestickData.
  # Corresponds to the JSON property `closeSeries`
  #
  # @return [Google::Apis::SheetsV4::CandlestickSeries]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2475
  def close_series; end

  # The series of a CandlestickData.
  # Corresponds to the JSON property `closeSeries`
  #
  # @return [Google::Apis::SheetsV4::CandlestickSeries]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2475
  def close_series=(_arg0); end

  # The series of a CandlestickData.
  # Corresponds to the JSON property `highSeries`
  #
  # @return [Google::Apis::SheetsV4::CandlestickSeries]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2480
  def high_series; end

  # The series of a CandlestickData.
  # Corresponds to the JSON property `highSeries`
  #
  # @return [Google::Apis::SheetsV4::CandlestickSeries]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2480
  def high_series=(_arg0); end

  # The series of a CandlestickData.
  # Corresponds to the JSON property `lowSeries`
  #
  # @return [Google::Apis::SheetsV4::CandlestickSeries]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2485
  def low_series; end

  # The series of a CandlestickData.
  # Corresponds to the JSON property `lowSeries`
  #
  # @return [Google::Apis::SheetsV4::CandlestickSeries]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2485
  def low_series=(_arg0); end

  # The series of a CandlestickData.
  # Corresponds to the JSON property `openSeries`
  #
  # @return [Google::Apis::SheetsV4::CandlestickSeries]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2490
  def open_series; end

  # The series of a CandlestickData.
  # Corresponds to the JSON property `openSeries`
  #
  # @return [Google::Apis::SheetsV4::CandlestickSeries]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2490
  def open_series=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2497
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#374
class Google::Apis::SheetsV4::CandlestickData::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The domain of a CandlestickChart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2506
class Google::Apis::SheetsV4::CandlestickDomain
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CandlestickDomain] a new instance of CandlestickDomain
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2520
  def initialize(**args); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `data`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2512
  def data; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `data`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2512
  def data=(_arg0); end

  # True to reverse the order of the domain values (horizontal axis).
  # Corresponds to the JSON property `reversed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2517
  def reversed; end

  # True to reverse the order of the domain values (horizontal axis).
  # Corresponds to the JSON property `reversed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2517
  def reversed=(_arg0); end

  # True to reverse the order of the domain values (horizontal axis).
  # Corresponds to the JSON property `reversed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2517
  def reversed?; end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2525
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#380
class Google::Apis::SheetsV4::CandlestickDomain::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The series of a CandlestickData.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2532
class Google::Apis::SheetsV4::CandlestickSeries
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CandlestickSeries] a new instance of CandlestickSeries
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2540
  def initialize(**args); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `data`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2538
  def data; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `data`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2538
  def data=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2545
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#386
class Google::Apis::SheetsV4::CandlestickSeries::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Data about a specific cell.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2551
class Google::Apis::SheetsV4::CellData
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CellData] a new instance of CellData
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2627
  def initialize(**args); end

  # A data source formula.
  # Corresponds to the JSON property `dataSourceFormula`
  #
  # @return [Google::Apis::SheetsV4::DataSourceFormula]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2557
  def data_source_formula; end

  # A data source formula.
  # Corresponds to the JSON property `dataSourceFormula`
  #
  # @return [Google::Apis::SheetsV4::DataSourceFormula]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2557
  def data_source_formula=(_arg0); end

  # A data source table, which allows the user to import a static table of data
  # from the DataSource into Sheets. This is also known as "Extract" in the Sheets
  # editor.
  # Corresponds to the JSON property `dataSourceTable`
  #
  # @return [Google::Apis::SheetsV4::DataSourceTable]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2564
  def data_source_table; end

  # A data source table, which allows the user to import a static table of data
  # from the DataSource into Sheets. This is also known as "Extract" in the Sheets
  # editor.
  # Corresponds to the JSON property `dataSourceTable`
  #
  # @return [Google::Apis::SheetsV4::DataSourceTable]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2564
  def data_source_table=(_arg0); end

  # A data validation rule.
  # Corresponds to the JSON property `dataValidation`
  #
  # @return [Google::Apis::SheetsV4::DataValidationRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2569
  def data_validation; end

  # A data validation rule.
  # Corresponds to the JSON property `dataValidation`
  #
  # @return [Google::Apis::SheetsV4::DataValidationRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2569
  def data_validation=(_arg0); end

  # The format of a cell.
  # Corresponds to the JSON property `effectiveFormat`
  #
  # @return [Google::Apis::SheetsV4::CellFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2574
  def effective_format; end

  # The format of a cell.
  # Corresponds to the JSON property `effectiveFormat`
  #
  # @return [Google::Apis::SheetsV4::CellFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2574
  def effective_format=(_arg0); end

  # The kinds of value that a cell in a spreadsheet can have.
  # Corresponds to the JSON property `effectiveValue`
  #
  # @return [Google::Apis::SheetsV4::ExtendedValue]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2579
  def effective_value; end

  # The kinds of value that a cell in a spreadsheet can have.
  # Corresponds to the JSON property `effectiveValue`
  #
  # @return [Google::Apis::SheetsV4::ExtendedValue]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2579
  def effective_value=(_arg0); end

  # The formatted value of the cell. This is the value as it's shown to the user.
  # This field is read-only.
  # Corresponds to the JSON property `formattedValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2585
  def formatted_value; end

  # The formatted value of the cell. This is the value as it's shown to the user.
  # This field is read-only.
  # Corresponds to the JSON property `formattedValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2585
  def formatted_value=(_arg0); end

  # A hyperlink this cell points to, if any. If the cell contains multiple
  # hyperlinks, this field will be empty. This field is read-only. To set it, use
  # a `=HYPERLINK` formula in the userEnteredValue.formulaValue field. A cell-
  # level link can also be set from the userEnteredFormat.textFormat field.
  # Alternatively, set a hyperlink in the textFormatRun.format.link field that
  # spans the entire cell.
  # Corresponds to the JSON property `hyperlink`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2595
  def hyperlink; end

  # A hyperlink this cell points to, if any. If the cell contains multiple
  # hyperlinks, this field will be empty. This field is read-only. To set it, use
  # a `=HYPERLINK` formula in the userEnteredValue.formulaValue field. A cell-
  # level link can also be set from the userEnteredFormat.textFormat field.
  # Alternatively, set a hyperlink in the textFormatRun.format.link field that
  # spans the entire cell.
  # Corresponds to the JSON property `hyperlink`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2595
  def hyperlink=(_arg0); end

  # Any note on the cell.
  # Corresponds to the JSON property `note`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2600
  def note; end

  # Any note on the cell.
  # Corresponds to the JSON property `note`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2600
  def note=(_arg0); end

  # A pivot table.
  # Corresponds to the JSON property `pivotTable`
  #
  # @return [Google::Apis::SheetsV4::PivotTable]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2605
  def pivot_table; end

  # A pivot table.
  # Corresponds to the JSON property `pivotTable`
  #
  # @return [Google::Apis::SheetsV4::PivotTable]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2605
  def pivot_table=(_arg0); end

  # Runs of rich text applied to subsections of the cell. Runs are only valid on
  # user entered strings, not formulas, bools, or numbers. Properties of a run
  # start at a specific index in the text and continue until the next run. Runs
  # will inherit the properties of the cell unless explicitly changed. When
  # writing, the new runs will overwrite any prior runs. When writing a new
  # user_entered_value, previous runs are erased.
  # Corresponds to the JSON property `textFormatRuns`
  #
  # @return [Array<Google::Apis::SheetsV4::TextFormatRun>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2615
  def text_format_runs; end

  # Runs of rich text applied to subsections of the cell. Runs are only valid on
  # user entered strings, not formulas, bools, or numbers. Properties of a run
  # start at a specific index in the text and continue until the next run. Runs
  # will inherit the properties of the cell unless explicitly changed. When
  # writing, the new runs will overwrite any prior runs. When writing a new
  # user_entered_value, previous runs are erased.
  # Corresponds to the JSON property `textFormatRuns`
  #
  # @return [Array<Google::Apis::SheetsV4::TextFormatRun>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2615
  def text_format_runs=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2632
  def update!(**args); end

  # The format of a cell.
  # Corresponds to the JSON property `userEnteredFormat`
  #
  # @return [Google::Apis::SheetsV4::CellFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2620
  def user_entered_format; end

  # The format of a cell.
  # Corresponds to the JSON property `userEnteredFormat`
  #
  # @return [Google::Apis::SheetsV4::CellFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2620
  def user_entered_format=(_arg0); end

  # The kinds of value that a cell in a spreadsheet can have.
  # Corresponds to the JSON property `userEnteredValue`
  #
  # @return [Google::Apis::SheetsV4::ExtendedValue]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2625
  def user_entered_value; end

  # The kinds of value that a cell in a spreadsheet can have.
  # Corresponds to the JSON property `userEnteredValue`
  #
  # @return [Google::Apis::SheetsV4::ExtendedValue]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2625
  def user_entered_value=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#392
class Google::Apis::SheetsV4::CellData::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The format of a cell.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2649
class Google::Apis::SheetsV4::CellFormat
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CellFormat] a new instance of CellFormat
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2758
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `backgroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2699
  def background_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `backgroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2699
  def background_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `backgroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2704
  def background_color_style; end

  # A color value.
  # Corresponds to the JSON property `backgroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2704
  def background_color_style=(_arg0); end

  # The borders of the cell.
  # Corresponds to the JSON property `borders`
  #
  # @return [Google::Apis::SheetsV4::Borders]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2709
  def borders; end

  # The borders of the cell.
  # Corresponds to the JSON property `borders`
  #
  # @return [Google::Apis::SheetsV4::Borders]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2709
  def borders=(_arg0); end

  # The horizontal alignment of the value in the cell.
  # Corresponds to the JSON property `horizontalAlignment`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2714
  def horizontal_alignment; end

  # The horizontal alignment of the value in the cell.
  # Corresponds to the JSON property `horizontalAlignment`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2714
  def horizontal_alignment=(_arg0); end

  # If one exists, how a hyperlink should be displayed in the cell.
  # Corresponds to the JSON property `hyperlinkDisplayType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2719
  def hyperlink_display_type; end

  # If one exists, how a hyperlink should be displayed in the cell.
  # Corresponds to the JSON property `hyperlinkDisplayType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2719
  def hyperlink_display_type=(_arg0); end

  # The number format of a cell.
  # Corresponds to the JSON property `numberFormat`
  #
  # @return [Google::Apis::SheetsV4::NumberFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2724
  def number_format; end

  # The number format of a cell.
  # Corresponds to the JSON property `numberFormat`
  #
  # @return [Google::Apis::SheetsV4::NumberFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2724
  def number_format=(_arg0); end

  # The amount of padding around the cell, in pixels. When updating padding, every
  # field must be specified.
  # Corresponds to the JSON property `padding`
  #
  # @return [Google::Apis::SheetsV4::Padding]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2730
  def padding; end

  # The amount of padding around the cell, in pixels. When updating padding, every
  # field must be specified.
  # Corresponds to the JSON property `padding`
  #
  # @return [Google::Apis::SheetsV4::Padding]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2730
  def padding=(_arg0); end

  # The direction of the text in the cell.
  # Corresponds to the JSON property `textDirection`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2735
  def text_direction; end

  # The direction of the text in the cell.
  # Corresponds to the JSON property `textDirection`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2735
  def text_direction=(_arg0); end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2741
  def text_format; end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2741
  def text_format=(_arg0); end

  # The rotation applied to text in a cell.
  # Corresponds to the JSON property `textRotation`
  #
  # @return [Google::Apis::SheetsV4::TextRotation]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2746
  def text_rotation; end

  # The rotation applied to text in a cell.
  # Corresponds to the JSON property `textRotation`
  #
  # @return [Google::Apis::SheetsV4::TextRotation]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2746
  def text_rotation=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2763
  def update!(**args); end

  # The vertical alignment of the value in the cell.
  # Corresponds to the JSON property `verticalAlignment`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2751
  def vertical_alignment; end

  # The vertical alignment of the value in the cell.
  # Corresponds to the JSON property `verticalAlignment`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2751
  def vertical_alignment=(_arg0); end

  # The wrap strategy for the value in the cell.
  # Corresponds to the JSON property `wrapStrategy`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2756
  def wrap_strategy; end

  # The wrap strategy for the value in the cell.
  # Corresponds to the JSON property `wrapStrategy`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2756
  def wrap_strategy=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#398
class Google::Apis::SheetsV4::CellFormat::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The options that define a "view window" for a chart (such as the visible
# values in an axis).
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2781
class Google::Apis::SheetsV4::ChartAxisViewWindowOptions
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ChartAxisViewWindowOptions] a new instance of ChartAxisViewWindowOptions
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2801
  def initialize(**args); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2806
  def update!(**args); end

  # The maximum numeric value to be shown in this view window. If unset, will
  # automatically determine a maximum value that looks good for the data.
  # Corresponds to the JSON property `viewWindowMax`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2788
  def view_window_max; end

  # The maximum numeric value to be shown in this view window. If unset, will
  # automatically determine a maximum value that looks good for the data.
  # Corresponds to the JSON property `viewWindowMax`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2788
  def view_window_max=(_arg0); end

  # The minimum numeric value to be shown in this view window. If unset, will
  # automatically determine a minimum value that looks good for the data.
  # Corresponds to the JSON property `viewWindowMin`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2794
  def view_window_min; end

  # The minimum numeric value to be shown in this view window. If unset, will
  # automatically determine a minimum value that looks good for the data.
  # Corresponds to the JSON property `viewWindowMin`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2794
  def view_window_min=(_arg0); end

  # The view window's mode.
  # Corresponds to the JSON property `viewWindowMode`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2799
  def view_window_mode; end

  # The view window's mode.
  # Corresponds to the JSON property `viewWindowMode`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2799
  def view_window_mode=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#404
class Google::Apis::SheetsV4::ChartAxisViewWindowOptions::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Custom number formatting options for chart attributes.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2814
class Google::Apis::SheetsV4::ChartCustomNumberFormatOptions
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ChartCustomNumberFormatOptions] a new instance of ChartCustomNumberFormatOptions
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2827
  def initialize(**args); end

  # Custom prefix to be prepended to the chart attribute. This field is optional.
  # Corresponds to the JSON property `prefix`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2820
  def prefix; end

  # Custom prefix to be prepended to the chart attribute. This field is optional.
  # Corresponds to the JSON property `prefix`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2820
  def prefix=(_arg0); end

  # Custom suffix to be appended to the chart attribute. This field is optional.
  # Corresponds to the JSON property `suffix`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2825
  def suffix; end

  # Custom suffix to be appended to the chart attribute. This field is optional.
  # Corresponds to the JSON property `suffix`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2825
  def suffix=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2832
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#410
class Google::Apis::SheetsV4::ChartCustomNumberFormatOptions::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The data included in a domain or series.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2839
class Google::Apis::SheetsV4::ChartData
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ChartData] a new instance of ChartData
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2868
  def initialize(**args); end

  # The aggregation type for the series of a data source chart. Only supported for
  # data source charts.
  # Corresponds to the JSON property `aggregateType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2846
  def aggregate_type; end

  # The aggregation type for the series of a data source chart. Only supported for
  # data source charts.
  # Corresponds to the JSON property `aggregateType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2846
  def aggregate_type=(_arg0); end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `columnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2851
  def column_reference; end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `columnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2851
  def column_reference=(_arg0); end

  # An optional setting on the ChartData of the domain of a data source chart that
  # defines buckets for the values in the domain rather than breaking out each
  # individual value. For example, when plotting a data source chart, you can
  # specify a histogram rule on the domain (it should only contain numeric values),
  # grouping its values into buckets. Any values of a chart series that fall into
  # the same bucket are aggregated based on the aggregate_type.
  # Corresponds to the JSON property `groupRule`
  #
  # @return [Google::Apis::SheetsV4::ChartGroupRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2861
  def group_rule; end

  # An optional setting on the ChartData of the domain of a data source chart that
  # defines buckets for the values in the domain rather than breaking out each
  # individual value. For example, when plotting a data source chart, you can
  # specify a histogram rule on the domain (it should only contain numeric values),
  # grouping its values into buckets. Any values of a chart series that fall into
  # the same bucket are aggregated based on the aggregate_type.
  # Corresponds to the JSON property `groupRule`
  #
  # @return [Google::Apis::SheetsV4::ChartGroupRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2861
  def group_rule=(_arg0); end

  # Source ranges for a chart.
  # Corresponds to the JSON property `sourceRange`
  #
  # @return [Google::Apis::SheetsV4::ChartSourceRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2866
  def source_range; end

  # Source ranges for a chart.
  # Corresponds to the JSON property `sourceRange`
  #
  # @return [Google::Apis::SheetsV4::ChartSourceRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2866
  def source_range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2873
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#416
class Google::Apis::SheetsV4::ChartData::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Allows you to organize the date-time values in a source data column into
# buckets based on selected parts of their date or time values.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2883
class Google::Apis::SheetsV4::ChartDateTimeRule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ChartDateTimeRule] a new instance of ChartDateTimeRule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2891
  def initialize(**args); end

  # The type of date-time grouping to apply.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2889
  def type; end

  # The type of date-time grouping to apply.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2889
  def type=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2896
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#422
class Google::Apis::SheetsV4::ChartDateTimeRule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# An optional setting on the ChartData of the domain of a data source chart that
# defines buckets for the values in the domain rather than breaking out each
# individual value. For example, when plotting a data source chart, you can
# specify a histogram rule on the domain (it should only contain numeric values),
# grouping its values into buckets. Any values of a chart series that fall into
# the same bucket are aggregated based on the aggregate_type.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2907
class Google::Apis::SheetsV4::ChartGroupRule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ChartGroupRule] a new instance of ChartGroupRule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2922
  def initialize(**args); end

  # Allows you to organize the date-time values in a source data column into
  # buckets based on selected parts of their date or time values.
  # Corresponds to the JSON property `dateTimeRule`
  #
  # @return [Google::Apis::SheetsV4::ChartDateTimeRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2914
  def date_time_rule; end

  # Allows you to organize the date-time values in a source data column into
  # buckets based on selected parts of their date or time values.
  # Corresponds to the JSON property `dateTimeRule`
  #
  # @return [Google::Apis::SheetsV4::ChartDateTimeRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2914
  def date_time_rule=(_arg0); end

  # Allows you to organize numeric values in a source data column into buckets of
  # constant size.
  # Corresponds to the JSON property `histogramRule`
  #
  # @return [Google::Apis::SheetsV4::ChartHistogramRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2920
  def histogram_rule; end

  # Allows you to organize numeric values in a source data column into buckets of
  # constant size.
  # Corresponds to the JSON property `histogramRule`
  #
  # @return [Google::Apis::SheetsV4::ChartHistogramRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2920
  def histogram_rule=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2927
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#428
class Google::Apis::SheetsV4::ChartGroupRule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Allows you to organize numeric values in a source data column into buckets of
# constant size.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2935
class Google::Apis::SheetsV4::ChartHistogramRule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ChartHistogramRule] a new instance of ChartHistogramRule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2957
  def initialize(**args); end

  # The size of the buckets that are created. Must be positive.
  # Corresponds to the JSON property `intervalSize`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2941
  def interval_size; end

  # The size of the buckets that are created. Must be positive.
  # Corresponds to the JSON property `intervalSize`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2941
  def interval_size=(_arg0); end

  # The maximum value at which items are placed into buckets. Values greater than
  # the maximum are grouped into a single bucket. If omitted, it is determined by
  # the maximum item value.
  # Corresponds to the JSON property `maxValue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2948
  def max_value; end

  # The maximum value at which items are placed into buckets. Values greater than
  # the maximum are grouped into a single bucket. If omitted, it is determined by
  # the maximum item value.
  # Corresponds to the JSON property `maxValue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2948
  def max_value=(_arg0); end

  # The minimum value at which items are placed into buckets. Values that are less
  # than the minimum are grouped into a single bucket. If omitted, it is
  # determined by the minimum item value.
  # Corresponds to the JSON property `minValue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2955
  def min_value; end

  # The minimum value at which items are placed into buckets. Values that are less
  # than the minimum are grouped into a single bucket. If omitted, it is
  # determined by the minimum item value.
  # Corresponds to the JSON property `minValue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2955
  def min_value=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2962
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#434
class Google::Apis::SheetsV4::ChartHistogramRule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Source ranges for a chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2970
class Google::Apis::SheetsV4::ChartSourceRange
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ChartSourceRange] a new instance of ChartSourceRange
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2985
  def initialize(**args); end

  # The ranges of data for a series or domain. Exactly one dimension must have a
  # length of 1, and all sources in the list must have the same dimension with
  # length 1. The domain (if it exists) & all series must have the same number of
  # source ranges. If using more than one source range, then the source range at a
  # given offset must be in order and contiguous across the domain and series. For
  # example, these are valid configurations: domain sources: A1:A5 series1 sources:
  # B1:B5 series2 sources: D6:D10 domain sources: A1:A5, C10:C12 series1 sources:
  # B1:B5, D10:D12 series2 sources: C1:C5, E10:E12
  # Corresponds to the JSON property `sources`
  #
  # @return [Array<Google::Apis::SheetsV4::GridRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2983
  def sources; end

  # The ranges of data for a series or domain. Exactly one dimension must have a
  # length of 1, and all sources in the list must have the same dimension with
  # length 1. The domain (if it exists) & all series must have the same number of
  # source ranges. If using more than one source range, then the source range at a
  # given offset must be in order and contiguous across the domain and series. For
  # example, these are valid configurations: domain sources: A1:A5 series1 sources:
  # B1:B5 series2 sources: D6:D10 domain sources: A1:A5, C10:C12 series1 sources:
  # B1:B5, D10:D12 series2 sources: C1:C5, E10:E12
  # Corresponds to the JSON property `sources`
  #
  # @return [Array<Google::Apis::SheetsV4::GridRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2983
  def sources=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2990
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#440
class Google::Apis::SheetsV4::ChartSourceRange::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The specifications of a chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#2996
class Google::Apis::SheetsV4::ChartSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ChartSpec] a new instance of ChartSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3189
  def initialize(**args); end

  # The alternative text that describes the chart. This is often used for
  # accessibility.
  # Corresponds to the JSON property `altText`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3003
  def alt_text; end

  # The alternative text that describes the chart. This is often used for
  # accessibility.
  # Corresponds to the JSON property `altText`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3003
  def alt_text=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `backgroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3052
  def background_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `backgroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3052
  def background_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `backgroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3057
  def background_color_style; end

  # A color value.
  # Corresponds to the JSON property `backgroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3057
  def background_color_style=(_arg0); end

  # The specification for a basic chart. See BasicChartType for the list of charts
  # this supports.
  # Corresponds to the JSON property `basicChart`
  #
  # @return [Google::Apis::SheetsV4::BasicChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3063
  def basic_chart; end

  # The specification for a basic chart. See BasicChartType for the list of charts
  # this supports.
  # Corresponds to the JSON property `basicChart`
  #
  # @return [Google::Apis::SheetsV4::BasicChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3063
  def basic_chart=(_arg0); end

  # A bubble chart.
  # Corresponds to the JSON property `bubbleChart`
  #
  # @return [Google::Apis::SheetsV4::BubbleChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3068
  def bubble_chart; end

  # A bubble chart.
  # Corresponds to the JSON property `bubbleChart`
  #
  # @return [Google::Apis::SheetsV4::BubbleChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3068
  def bubble_chart=(_arg0); end

  # A candlestick chart.
  # Corresponds to the JSON property `candlestickChart`
  #
  # @return [Google::Apis::SheetsV4::CandlestickChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3073
  def candlestick_chart; end

  # A candlestick chart.
  # Corresponds to the JSON property `candlestickChart`
  #
  # @return [Google::Apis::SheetsV4::CandlestickChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3073
  def candlestick_chart=(_arg0); end

  # Properties of a data source chart.
  # Corresponds to the JSON property `dataSourceChartProperties`
  #
  # @return [Google::Apis::SheetsV4::DataSourceChartProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3078
  def data_source_chart_properties; end

  # Properties of a data source chart.
  # Corresponds to the JSON property `dataSourceChartProperties`
  #
  # @return [Google::Apis::SheetsV4::DataSourceChartProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3078
  def data_source_chart_properties=(_arg0); end

  # The filters applied to the source data of the chart. Only supported for data
  # source charts.
  # Corresponds to the JSON property `filterSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::FilterSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3084
  def filter_specs; end

  # The filters applied to the source data of the chart. Only supported for data
  # source charts.
  # Corresponds to the JSON property `filterSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::FilterSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3084
  def filter_specs=(_arg0); end

  # The name of the font to use by default for all chart text (e.g. title, axis
  # labels, legend). If a font is specified for a specific part of the chart it
  # will override this font name.
  # Corresponds to the JSON property `fontName`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3091
  def font_name; end

  # The name of the font to use by default for all chart text (e.g. title, axis
  # labels, legend). If a font is specified for a specific part of the chart it
  # will override this font name.
  # Corresponds to the JSON property `fontName`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3091
  def font_name=(_arg0); end

  # Determines how the charts will use hidden rows or columns.
  # Corresponds to the JSON property `hiddenDimensionStrategy`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3096
  def hidden_dimension_strategy; end

  # Determines how the charts will use hidden rows or columns.
  # Corresponds to the JSON property `hiddenDimensionStrategy`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3096
  def hidden_dimension_strategy=(_arg0); end

  # A histogram chart. A histogram chart groups data items into bins, displaying
  # each bin as a column of stacked items. Histograms are used to display the
  # distribution of a dataset. Each column of items represents a range into which
  # those items fall. The number of bins can be chosen automatically or specified
  # explicitly.
  # Corresponds to the JSON property `histogramChart`
  #
  # @return [Google::Apis::SheetsV4::HistogramChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3105
  def histogram_chart; end

  # A histogram chart. A histogram chart groups data items into bins, displaying
  # each bin as a column of stacked items. Histograms are used to display the
  # distribution of a dataset. Each column of items represents a range into which
  # those items fall. The number of bins can be chosen automatically or specified
  # explicitly.
  # Corresponds to the JSON property `histogramChart`
  #
  # @return [Google::Apis::SheetsV4::HistogramChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3105
  def histogram_chart=(_arg0); end

  # True to make a chart fill the entire space in which it's rendered with minimum
  # padding. False to use the default padding. (Not applicable to Geo and Org
  # charts.)
  # Corresponds to the JSON property `maximized`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3112
  def maximized; end

  # True to make a chart fill the entire space in which it's rendered with minimum
  # padding. False to use the default padding. (Not applicable to Geo and Org
  # charts.)
  # Corresponds to the JSON property `maximized`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3112
  def maximized=(_arg0); end

  # True to make a chart fill the entire space in which it's rendered with minimum
  # padding. False to use the default padding. (Not applicable to Geo and Org
  # charts.)
  # Corresponds to the JSON property `maximized`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3112
  def maximized?; end

  # An org chart. Org charts require a unique set of labels in labels and may
  # optionally include parent_labels and tooltips. parent_labels contain, for each
  # node, the label identifying the parent node. tooltips contain, for each node,
  # an optional tooltip. For example, to describe an OrgChart with Alice as the
  # CEO, Bob as the President (reporting to Alice) and Cathy as VP of Sales (also
  # reporting to Alice), have labels contain "Alice", "Bob", "Cathy",
  # parent_labels contain "", "Alice", "Alice" and tooltips contain "CEO", "
  # President", "VP Sales".
  # Corresponds to the JSON property `orgChart`
  #
  # @return [Google::Apis::SheetsV4::OrgChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3125
  def org_chart; end

  # An org chart. Org charts require a unique set of labels in labels and may
  # optionally include parent_labels and tooltips. parent_labels contain, for each
  # node, the label identifying the parent node. tooltips contain, for each node,
  # an optional tooltip. For example, to describe an OrgChart with Alice as the
  # CEO, Bob as the President (reporting to Alice) and Cathy as VP of Sales (also
  # reporting to Alice), have labels contain "Alice", "Bob", "Cathy",
  # parent_labels contain "", "Alice", "Alice" and tooltips contain "CEO", "
  # President", "VP Sales".
  # Corresponds to the JSON property `orgChart`
  #
  # @return [Google::Apis::SheetsV4::OrgChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3125
  def org_chart=(_arg0); end

  # A pie chart.
  # Corresponds to the JSON property `pieChart`
  #
  # @return [Google::Apis::SheetsV4::PieChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3130
  def pie_chart; end

  # A pie chart.
  # Corresponds to the JSON property `pieChart`
  #
  # @return [Google::Apis::SheetsV4::PieChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3130
  def pie_chart=(_arg0); end

  # A scorecard chart. Scorecard charts are used to highlight key performance
  # indicators, known as KPIs, on the spreadsheet. A scorecard chart can represent
  # things like total sales, average cost, or a top selling item. You can specify
  # a single data value, or aggregate over a range of data. Percentage or absolute
  # difference from a baseline value can be highlighted, like changes over time.
  # Corresponds to the JSON property `scorecardChart`
  #
  # @return [Google::Apis::SheetsV4::ScorecardChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3139
  def scorecard_chart; end

  # A scorecard chart. Scorecard charts are used to highlight key performance
  # indicators, known as KPIs, on the spreadsheet. A scorecard chart can represent
  # things like total sales, average cost, or a top selling item. You can specify
  # a single data value, or aggregate over a range of data. Percentage or absolute
  # difference from a baseline value can be highlighted, like changes over time.
  # Corresponds to the JSON property `scorecardChart`
  #
  # @return [Google::Apis::SheetsV4::ScorecardChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3139
  def scorecard_chart=(_arg0); end

  # The order to sort the chart data by. Only a single sort spec is supported.
  # Only supported for data source charts.
  # Corresponds to the JSON property `sortSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::SortSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3145
  def sort_specs; end

  # The order to sort the chart data by. Only a single sort spec is supported.
  # Only supported for data source charts.
  # Corresponds to the JSON property `sortSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::SortSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3145
  def sort_specs=(_arg0); end

  # The subtitle of the chart.
  # Corresponds to the JSON property `subtitle`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3150
  def subtitle; end

  # The subtitle of the chart.
  # Corresponds to the JSON property `subtitle`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3150
  def subtitle=(_arg0); end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `subtitleTextFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3156
  def subtitle_text_format; end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `subtitleTextFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3156
  def subtitle_text_format=(_arg0); end

  # Position settings for text.
  # Corresponds to the JSON property `subtitleTextPosition`
  #
  # @return [Google::Apis::SheetsV4::TextPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3161
  def subtitle_text_position; end

  # Position settings for text.
  # Corresponds to the JSON property `subtitleTextPosition`
  #
  # @return [Google::Apis::SheetsV4::TextPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3161
  def subtitle_text_position=(_arg0); end

  # The title of the chart.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3166
  def title; end

  # The title of the chart.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3166
  def title=(_arg0); end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `titleTextFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3172
  def title_text_format; end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `titleTextFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3172
  def title_text_format=(_arg0); end

  # Position settings for text.
  # Corresponds to the JSON property `titleTextPosition`
  #
  # @return [Google::Apis::SheetsV4::TextPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3177
  def title_text_position; end

  # Position settings for text.
  # Corresponds to the JSON property `titleTextPosition`
  #
  # @return [Google::Apis::SheetsV4::TextPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3177
  def title_text_position=(_arg0); end

  # A Treemap chart.
  # Corresponds to the JSON property `treemapChart`
  #
  # @return [Google::Apis::SheetsV4::TreemapChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3182
  def treemap_chart; end

  # A Treemap chart.
  # Corresponds to the JSON property `treemapChart`
  #
  # @return [Google::Apis::SheetsV4::TreemapChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3182
  def treemap_chart=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3194
  def update!(**args); end

  # A waterfall chart.
  # Corresponds to the JSON property `waterfallChart`
  #
  # @return [Google::Apis::SheetsV4::WaterfallChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3187
  def waterfall_chart; end

  # A waterfall chart.
  # Corresponds to the JSON property `waterfallChart`
  #
  # @return [Google::Apis::SheetsV4::WaterfallChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3187
  def waterfall_chart=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#446
class Google::Apis::SheetsV4::ChartSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Clears the basic filter, if any exists on the sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3223
class Google::Apis::SheetsV4::ClearBasicFilterRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ClearBasicFilterRequest] a new instance of ClearBasicFilterRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3231
  def initialize(**args); end

  # The sheet ID on which the basic filter should be cleared.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3229
  def sheet_id; end

  # The sheet ID on which the basic filter should be cleared.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3229
  def sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3236
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#452
class Google::Apis::SheetsV4::ClearBasicFilterRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The request for clearing a range of values in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3242
class Google::Apis::SheetsV4::ClearValuesRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ClearValuesRequest] a new instance of ClearValuesRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3245
  def initialize(**args); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3250
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#458
class Google::Apis::SheetsV4::ClearValuesRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response when clearing a range of values in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3255
class Google::Apis::SheetsV4::ClearValuesResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ClearValuesResponse] a new instance of ClearValuesResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3270
  def initialize(**args); end

  # The range (in A1 notation) that was cleared. (If the request was for an
  # unbounded range or a ranger larger than the bounds of the sheet, this will be
  # the actual range that was cleared, bounded to the sheet's limits.)
  # Corresponds to the JSON property `clearedRange`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3263
  def cleared_range; end

  # The range (in A1 notation) that was cleared. (If the request was for an
  # unbounded range or a ranger larger than the bounds of the sheet, this will be
  # the actual range that was cleared, bounded to the sheet's limits.)
  # Corresponds to the JSON property `clearedRange`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3263
  def cleared_range=(_arg0); end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3268
  def spreadsheet_id; end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3268
  def spreadsheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3275
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#464
class Google::Apis::SheetsV4::ClearValuesResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Represents a color in the RGBA color space. This representation is designed
# for simplicity of conversion to and from color representations in various
# languages over compactness. For example, the fields of this representation can
# be trivially provided to the constructor of `java.awt.Color` in Java; it can
# also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
# method in iOS; and, with just a little work, it can be easily formatted into a
# CSS `rgba()` string in JavaScript. This reference page doesn't have
# information about the absolute color space that should be used to interpret
# the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
# applications should assume the sRGB color space. When color equality needs to
# be decided, implementations, unless documented otherwise, treat two colors as
# equal if all their red, green, blue, and alpha values each differ by at most `
# 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
# awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
# protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
# getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
# Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
# float green = (float) color.getGreen(); float blue = (float) color.getBlue();
# float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
# setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
# denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
# setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
# build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
# . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
# float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
# alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
# nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
# green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
# CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
# blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
# result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
# = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
# autorelease]; return result; ` // ... Example (JavaScript): // ... var
# protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
# var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
# var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
# var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
# rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
# 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
# ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
# ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
# = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
# resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
# push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
# / ...
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3326
class Google::Apis::SheetsV4::Color
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Color] a new instance of Color
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3356
  def initialize(**args); end

  # The fraction of this color that should be applied to the pixel. That is, the
  # final pixel color is defined by the equation: `pixel color = alpha * (this
  # color) + (1.0 - alpha) * (background color)` This means that a value of 1.0
  # corresponds to a solid color, whereas a value of 0.0 corresponds to a
  # completely transparent color. This uses a wrapper message rather than a simple
  # float scalar so that it is possible to distinguish between a default value and
  # the value being unset. If omitted, this color object is rendered as a solid
  # color (as if the alpha value had been explicitly given a value of 1.0).
  # Corresponds to the JSON property `alpha`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3339
  def alpha; end

  # The fraction of this color that should be applied to the pixel. That is, the
  # final pixel color is defined by the equation: `pixel color = alpha * (this
  # color) + (1.0 - alpha) * (background color)` This means that a value of 1.0
  # corresponds to a solid color, whereas a value of 0.0 corresponds to a
  # completely transparent color. This uses a wrapper message rather than a simple
  # float scalar so that it is possible to distinguish between a default value and
  # the value being unset. If omitted, this color object is rendered as a solid
  # color (as if the alpha value had been explicitly given a value of 1.0).
  # Corresponds to the JSON property `alpha`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3339
  def alpha=(_arg0); end

  # The amount of blue in the color as a value in the interval [0, 1].
  # Corresponds to the JSON property `blue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3344
  def blue; end

  # The amount of blue in the color as a value in the interval [0, 1].
  # Corresponds to the JSON property `blue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3344
  def blue=(_arg0); end

  # The amount of green in the color as a value in the interval [0, 1].
  # Corresponds to the JSON property `green`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3349
  def green; end

  # The amount of green in the color as a value in the interval [0, 1].
  # Corresponds to the JSON property `green`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3349
  def green=(_arg0); end

  # The amount of red in the color as a value in the interval [0, 1].
  # Corresponds to the JSON property `red`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3354
  def red; end

  # The amount of red in the color as a value in the interval [0, 1].
  # Corresponds to the JSON property `red`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3354
  def red=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3361
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#470
class Google::Apis::SheetsV4::Color::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A color value.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3370
class Google::Apis::SheetsV4::ColorStyle
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ColorStyle] a new instance of ColorStyle
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3427
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `rgbColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3420
  def rgb_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `rgbColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3420
  def rgb_color=(_arg0); end

  # Theme color.
  # Corresponds to the JSON property `themeColor`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3425
  def theme_color; end

  # Theme color.
  # Corresponds to the JSON property `themeColor`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3425
  def theme_color=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3432
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#476
class Google::Apis::SheetsV4::ColorStyle::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The value of the condition.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3439
class Google::Apis::SheetsV4::ConditionValue
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ConditionValue] a new instance of ConditionValue
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3456
  def initialize(**args); end

  # A relative date (based on the current date). Valid only if the type is
  # DATE_BEFORE, DATE_AFTER, DATE_ON_OR_BEFORE or DATE_ON_OR_AFTER. Relative dates
  # are not supported in data validation. They are supported only in conditional
  # formatting and conditional filters.
  # Corresponds to the JSON property `relativeDate`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3448
  def relative_date; end

  # A relative date (based on the current date). Valid only if the type is
  # DATE_BEFORE, DATE_AFTER, DATE_ON_OR_BEFORE or DATE_ON_OR_AFTER. Relative dates
  # are not supported in data validation. They are supported only in conditional
  # formatting and conditional filters.
  # Corresponds to the JSON property `relativeDate`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3448
  def relative_date=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3461
  def update!(**args); end

  # A value the condition is based on. The value is parsed as if the user typed
  # into a cell. Formulas are supported (and must begin with an `=` or a '+').
  # Corresponds to the JSON property `userEnteredValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3454
  def user_entered_value; end

  # A value the condition is based on. The value is parsed as if the user typed
  # into a cell. Formulas are supported (and must begin with an `=` or a '+').
  # Corresponds to the JSON property `userEnteredValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3454
  def user_entered_value=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#482
class Google::Apis::SheetsV4::ConditionValue::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A rule describing a conditional format.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3468
class Google::Apis::SheetsV4::ConditionalFormatRule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ConditionalFormatRule] a new instance of ConditionalFormatRule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3489
  def initialize(**args); end

  # A rule that may or may not match, depending on the condition.
  # Corresponds to the JSON property `booleanRule`
  #
  # @return [Google::Apis::SheetsV4::BooleanRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3474
  def boolean_rule; end

  # A rule that may or may not match, depending on the condition.
  # Corresponds to the JSON property `booleanRule`
  #
  # @return [Google::Apis::SheetsV4::BooleanRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3474
  def boolean_rule=(_arg0); end

  # A rule that applies a gradient color scale format, based on the interpolation
  # points listed. The format of a cell will vary based on its contents as
  # compared to the values of the interpolation points.
  # Corresponds to the JSON property `gradientRule`
  #
  # @return [Google::Apis::SheetsV4::GradientRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3481
  def gradient_rule; end

  # A rule that applies a gradient color scale format, based on the interpolation
  # points listed. The format of a cell will vary based on its contents as
  # compared to the values of the interpolation points.
  # Corresponds to the JSON property `gradientRule`
  #
  # @return [Google::Apis::SheetsV4::GradientRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3481
  def gradient_rule=(_arg0); end

  # The ranges that are formatted if the condition is true. All the ranges must be
  # on the same grid.
  # Corresponds to the JSON property `ranges`
  #
  # @return [Array<Google::Apis::SheetsV4::GridRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3487
  def ranges; end

  # The ranges that are formatted if the condition is true. All the ranges must be
  # on the same grid.
  # Corresponds to the JSON property `ranges`
  #
  # @return [Array<Google::Apis::SheetsV4::GridRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3487
  def ranges=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3494
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#488
class Google::Apis::SheetsV4::ConditionalFormatRule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Copies data from the source to the destination.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3502
class Google::Apis::SheetsV4::CopyPasteRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CopyPasteRequest] a new instance of CopyPasteRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3549
  def initialize(**args); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `destination`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3520
  def destination; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `destination`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3520
  def destination=(_arg0); end

  # How that data should be oriented when pasting.
  # Corresponds to the JSON property `pasteOrientation`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3525
  def paste_orientation; end

  # How that data should be oriented when pasting.
  # Corresponds to the JSON property `pasteOrientation`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3525
  def paste_orientation=(_arg0); end

  # What kind of data to paste.
  # Corresponds to the JSON property `pasteType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3530
  def paste_type; end

  # What kind of data to paste.
  # Corresponds to the JSON property `pasteType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3530
  def paste_type=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3547
  def source; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3547
  def source=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3554
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#494
class Google::Apis::SheetsV4::CopyPasteRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The request to copy a sheet across spreadsheets.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3563
class Google::Apis::SheetsV4::CopySheetToAnotherSpreadsheetRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CopySheetToAnotherSpreadsheetRequest] a new instance of CopySheetToAnotherSpreadsheetRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3571
  def initialize(**args); end

  # The ID of the spreadsheet to copy the sheet to.
  # Corresponds to the JSON property `destinationSpreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3569
  def destination_spreadsheet_id; end

  # The ID of the spreadsheet to copy the sheet to.
  # Corresponds to the JSON property `destinationSpreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3569
  def destination_spreadsheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3576
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#500
class Google::Apis::SheetsV4::CopySheetToAnotherSpreadsheetRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A request to create developer metadata.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3582
class Google::Apis::SheetsV4::CreateDeveloperMetadataRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CreateDeveloperMetadataRequest] a new instance of CreateDeveloperMetadataRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3597
  def initialize(**args); end

  # Developer metadata associated with a location or object in a spreadsheet.
  # Developer metadata may be used to associate arbitrary data with various parts
  # of a spreadsheet and will remain associated at those locations as they move
  # around and the spreadsheet is edited. For example, if developer metadata is
  # associated with row 5 and another row is then subsequently inserted above row
  # 5, that original metadata will still be associated with the row it was first
  # associated with (what is now row 6). If the associated object is deleted its
  # metadata is deleted too.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadata]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3595
  def developer_metadata; end

  # Developer metadata associated with a location or object in a spreadsheet.
  # Developer metadata may be used to associate arbitrary data with various parts
  # of a spreadsheet and will remain associated at those locations as they move
  # around and the spreadsheet is edited. For example, if developer metadata is
  # associated with row 5 and another row is then subsequently inserted above row
  # 5, that original metadata will still be associated with the row it was first
  # associated with (what is now row 6). If the associated object is deleted its
  # metadata is deleted too.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadata]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3595
  def developer_metadata=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3602
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#506
class Google::Apis::SheetsV4::CreateDeveloperMetadataRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response from creating developer metadata.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3608
class Google::Apis::SheetsV4::CreateDeveloperMetadataResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CreateDeveloperMetadataResponse] a new instance of CreateDeveloperMetadataResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3623
  def initialize(**args); end

  # Developer metadata associated with a location or object in a spreadsheet.
  # Developer metadata may be used to associate arbitrary data with various parts
  # of a spreadsheet and will remain associated at those locations as they move
  # around and the spreadsheet is edited. For example, if developer metadata is
  # associated with row 5 and another row is then subsequently inserted above row
  # 5, that original metadata will still be associated with the row it was first
  # associated with (what is now row 6). If the associated object is deleted its
  # metadata is deleted too.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadata]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3621
  def developer_metadata; end

  # Developer metadata associated with a location or object in a spreadsheet.
  # Developer metadata may be used to associate arbitrary data with various parts
  # of a spreadsheet and will remain associated at those locations as they move
  # around and the spreadsheet is edited. For example, if developer metadata is
  # associated with row 5 and another row is then subsequently inserted above row
  # 5, that original metadata will still be associated with the row it was first
  # associated with (what is now row 6). If the associated object is deleted its
  # metadata is deleted too.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadata]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3621
  def developer_metadata=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3628
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#512
class Google::Apis::SheetsV4::CreateDeveloperMetadataResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Moves data from the source to the destination.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3634
class Google::Apis::SheetsV4::CutPasteRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [CutPasteRequest] a new instance of CutPasteRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3665
  def initialize(**args); end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `destination`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3640
  def destination; end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `destination`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3640
  def destination=(_arg0); end

  # What kind of data to paste. All the source data will be cut, regardless of
  # what is pasted.
  # Corresponds to the JSON property `pasteType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3646
  def paste_type; end

  # What kind of data to paste. All the source data will be cut, regardless of
  # what is pasted.
  # Corresponds to the JSON property `pasteType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3646
  def paste_type=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3663
  def source; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3663
  def source=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3670
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#518
class Google::Apis::SheetsV4::CutPasteRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The data execution status. A data execution is created to sync a data source
# object with the latest data from a DataSource. It is usually scheduled to run
# at background, you can check its state to tell if an execution completes There
# are several scenarios where a data execution is triggered to run: * Adding a
# data source creates an associated data source sheet as well as a data
# execution to sync the data from the data source to the sheet. * Updating a
# data source creates a data execution to refresh the associated data source
# sheet similarly. * You can send refresh request to explicitly refresh one or
# multiple data source objects.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3686
class Google::Apis::SheetsV4::DataExecutionStatus
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataExecutionStatus] a new instance of DataExecutionStatus
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3709
  def initialize(**args); end

  # The error code.
  # Corresponds to the JSON property `errorCode`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3692
  def error_code; end

  # The error code.
  # Corresponds to the JSON property `errorCode`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3692
  def error_code=(_arg0); end

  # The error message, which may be empty.
  # Corresponds to the JSON property `errorMessage`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3697
  def error_message; end

  # The error message, which may be empty.
  # Corresponds to the JSON property `errorMessage`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3697
  def error_message=(_arg0); end

  # Gets the time the data last successfully refreshed.
  # Corresponds to the JSON property `lastRefreshTime`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3702
  def last_refresh_time; end

  # Gets the time the data last successfully refreshed.
  # Corresponds to the JSON property `lastRefreshTime`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3702
  def last_refresh_time=(_arg0); end

  # The state of the data execution.
  # Corresponds to the JSON property `state`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3707
  def state; end

  # The state of the data execution.
  # Corresponds to the JSON property `state`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3707
  def state=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3714
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#524
class Google::Apis::SheetsV4::DataExecutionStatus::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Filter that describes what data should be selected or returned from a request.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3723
class Google::Apis::SheetsV4::DataFilter
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataFilter] a new instance of DataFilter
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3761
  def initialize(**args); end

  # Selects data that matches the specified A1 range.
  # Corresponds to the JSON property `a1Range`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3729
  def a1_range; end

  # Selects data that matches the specified A1 range.
  # Corresponds to the JSON property `a1Range`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3729
  def a1_range=(_arg0); end

  # Selects DeveloperMetadata that matches all of the specified fields. For
  # example, if only a metadata ID is specified this considers the
  # DeveloperMetadata with that particular unique ID. If a metadata key is
  # specified, this considers all developer metadata with that key. If a key,
  # visibility, and location type are all specified, this considers all developer
  # metadata with that key and visibility that are associated with a location of
  # that type. In general, this selects all DeveloperMetadata that matches the
  # intersection of all the specified fields; any field or combination of fields
  # may be specified.
  # Corresponds to the JSON property `developerMetadataLookup`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadataLookup]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3742
  def developer_metadata_lookup; end

  # Selects DeveloperMetadata that matches all of the specified fields. For
  # example, if only a metadata ID is specified this considers the
  # DeveloperMetadata with that particular unique ID. If a metadata key is
  # specified, this considers all developer metadata with that key. If a key,
  # visibility, and location type are all specified, this considers all developer
  # metadata with that key and visibility that are associated with a location of
  # that type. In general, this selects all DeveloperMetadata that matches the
  # intersection of all the specified fields; any field or combination of fields
  # may be specified.
  # Corresponds to the JSON property `developerMetadataLookup`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadataLookup]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3742
  def developer_metadata_lookup=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `gridRange`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3759
  def grid_range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `gridRange`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3759
  def grid_range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3766
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#530
class Google::Apis::SheetsV4::DataFilter::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A range of values whose location is specified by a DataFilter.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3774
class Google::Apis::SheetsV4::DataFilterValueRange
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataFilterValueRange] a new instance of DataFilterValueRange
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3795
  def initialize(**args); end

  # Filter that describes what data should be selected or returned from a request.
  # Corresponds to the JSON property `dataFilter`
  #
  # @return [Google::Apis::SheetsV4::DataFilter]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3780
  def data_filter; end

  # Filter that describes what data should be selected or returned from a request.
  # Corresponds to the JSON property `dataFilter`
  #
  # @return [Google::Apis::SheetsV4::DataFilter]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3780
  def data_filter=(_arg0); end

  # The major dimension of the values.
  # Corresponds to the JSON property `majorDimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3785
  def major_dimension; end

  # The major dimension of the values.
  # Corresponds to the JSON property `majorDimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3785
  def major_dimension=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3800
  def update!(**args); end

  # The data to be written. If the provided values exceed any of the ranges
  # matched by the data filter then the request fails. If the provided values are
  # less than the matched ranges only the specified values are written, existing
  # values in the matched ranges remain unaffected.
  # Corresponds to the JSON property `values`
  #
  # @return [Array<Array<Object>>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3793
  def values; end

  # The data to be written. If the provided values exceed any of the ranges
  # matched by the data filter then the request fails. If the provided values are
  # less than the matched ranges only the specified values are written, existing
  # values in the matched ranges remain unaffected.
  # Corresponds to the JSON property `values`
  #
  # @return [Array<Array<Object>>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3793
  def values=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#536
class Google::Apis::SheetsV4::DataFilterValueRange::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Settings for one set of data labels. Data labels are annotations that appear
# next to a set of data, such as the points on a line chart, and provide
# additional information about what the data represents, such as a text
# representation of the value behind that point on the graph.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3811
class Google::Apis::SheetsV4::DataLabel
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataLabel] a new instance of DataLabel
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3835
  def initialize(**args); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `customLabelData`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3817
  def custom_label_data; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `customLabelData`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3817
  def custom_label_data=(_arg0); end

  # The placement of the data label relative to the labeled data.
  # Corresponds to the JSON property `placement`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3822
  def placement; end

  # The placement of the data label relative to the labeled data.
  # Corresponds to the JSON property `placement`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3822
  def placement=(_arg0); end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3828
  def text_format; end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3828
  def text_format=(_arg0); end

  # The type of the data label.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3833
  def type; end

  # The type of the data label.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3833
  def type=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3840
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#542
class Google::Apis::SheetsV4::DataLabel::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Information about an external data source in the spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3849
class Google::Apis::SheetsV4::DataSource
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSource] a new instance of DataSource
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3877
  def initialize(**args); end

  # All calculated columns in the data source.
  # Corresponds to the JSON property `calculatedColumns`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceColumn>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3855
  def calculated_columns; end

  # All calculated columns in the data source.
  # Corresponds to the JSON property `calculatedColumns`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceColumn>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3855
  def calculated_columns=(_arg0); end

  # The spreadsheet-scoped unique ID that identifies the data source. Example:
  # 1080547365.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3861
  def data_source_id; end

  # The spreadsheet-scoped unique ID that identifies the data source. Example:
  # 1080547365.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3861
  def data_source_id=(_arg0); end

  # The ID of the Sheet connected with the data source. The field cannot be
  # changed once set. When creating a data source, an associated DATA_SOURCE sheet
  # is also created, if the field is not specified, the ID of the created sheet
  # will be randomly generated.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3869
  def sheet_id; end

  # The ID of the Sheet connected with the data source. The field cannot be
  # changed once set. When creating a data source, an associated DATA_SOURCE sheet
  # is also created, if the field is not specified, the ID of the created sheet
  # will be randomly generated.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3869
  def sheet_id=(_arg0); end

  # This specifies the details of the data source. For example, for BigQuery, this
  # specifies information about the BigQuery source.
  # Corresponds to the JSON property `spec`
  #
  # @return [Google::Apis::SheetsV4::DataSourceSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3875
  def spec; end

  # This specifies the details of the data source. For example, for BigQuery, this
  # specifies information about the BigQuery source.
  # Corresponds to the JSON property `spec`
  #
  # @return [Google::Apis::SheetsV4::DataSourceSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3875
  def spec=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3882
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#548
class Google::Apis::SheetsV4::DataSource::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Properties of a data source chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3891
class Google::Apis::SheetsV4::DataSourceChartProperties
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceChartProperties] a new instance of DataSourceChartProperties
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3912
  def initialize(**args); end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3905
  def data_execution_status; end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3905
  def data_execution_status=(_arg0); end

  # ID of the data source that the chart is associated with.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3910
  def data_source_id; end

  # ID of the data source that the chart is associated with.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3910
  def data_source_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3917
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#554
class Google::Apis::SheetsV4::DataSourceChartProperties::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A column in a data source.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3924
class Google::Apis::SheetsV4::DataSourceColumn
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceColumn] a new instance of DataSourceColumn
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3937
  def initialize(**args); end

  # The formula of the calculated column.
  # Corresponds to the JSON property `formula`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3930
  def formula; end

  # The formula of the calculated column.
  # Corresponds to the JSON property `formula`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3930
  def formula=(_arg0); end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `reference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3935
  def reference; end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `reference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3935
  def reference=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3942
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#560
class Google::Apis::SheetsV4::DataSourceColumn::Representation < ::Google::Apis::Core::JsonRepresentation; end

# An unique identifier that references a data source column.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3949
class Google::Apis::SheetsV4::DataSourceColumnReference
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceColumnReference] a new instance of DataSourceColumnReference
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3957
  def initialize(**args); end

  # The display name of the column. It should be unique within a data source.
  # Corresponds to the JSON property `name`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3955
  def name; end

  # The display name of the column. It should be unique within a data source.
  # Corresponds to the JSON property `name`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3955
  def name=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3962
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#566
class Google::Apis::SheetsV4::DataSourceColumnReference::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A data source formula.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3968
class Google::Apis::SheetsV4::DataSourceFormula
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceFormula] a new instance of DataSourceFormula
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3989
  def initialize(**args); end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3982
  def data_execution_status; end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3982
  def data_execution_status=(_arg0); end

  # The ID of the data source the formula is associated with.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3987
  def data_source_id; end

  # The ID of the data source the formula is associated with.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3987
  def data_source_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#3994
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#572
class Google::Apis::SheetsV4::DataSourceFormula::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Reference to a data source object.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4001
class Google::Apis::SheetsV4::DataSourceObjectReference
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceObjectReference] a new instance of DataSourceObjectReference
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4029
  def initialize(**args); end

  # References to a data source chart.
  # Corresponds to the JSON property `chartId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4007
  def chart_id; end

  # References to a data source chart.
  # Corresponds to the JSON property `chartId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4007
  def chart_id=(_arg0); end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `dataSourceFormulaCell`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4012
  def data_source_formula_cell; end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `dataSourceFormulaCell`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4012
  def data_source_formula_cell=(_arg0); end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `dataSourcePivotTableAnchorCell`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4017
  def data_source_pivot_table_anchor_cell; end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `dataSourcePivotTableAnchorCell`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4017
  def data_source_pivot_table_anchor_cell=(_arg0); end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `dataSourceTableAnchorCell`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4022
  def data_source_table_anchor_cell; end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `dataSourceTableAnchorCell`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4022
  def data_source_table_anchor_cell=(_arg0); end

  # References to a DATA_SOURCE sheet.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4027
  def sheet_id; end

  # References to a DATA_SOURCE sheet.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4027
  def sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4034
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#578
class Google::Apis::SheetsV4::DataSourceObjectReference::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A list of references to data source objects.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4044
class Google::Apis::SheetsV4::DataSourceObjectReferences
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceObjectReferences] a new instance of DataSourceObjectReferences
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4052
  def initialize(**args); end

  # The references.
  # Corresponds to the JSON property `references`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceObjectReference>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4050
  def references; end

  # The references.
  # Corresponds to the JSON property `references`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceObjectReference>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4050
  def references=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4057
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#584
class Google::Apis::SheetsV4::DataSourceObjectReferences::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A parameter in a data source's query. The parameter allows the user to pass in
# values from the spreadsheet into a query.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4064
class Google::Apis::SheetsV4::DataSourceParameter
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceParameter] a new instance of DataSourceParameter
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4096
  def initialize(**args); end

  # Named parameter. Must be a legitimate identifier for the DataSource that
  # supports it. For example, [BigQuery identifier](https://cloud.google.com/
  # bigquery/docs/reference/standard-sql/lexical#identifiers).
  # Corresponds to the JSON property `name`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4072
  def name; end

  # Named parameter. Must be a legitimate identifier for the DataSource that
  # supports it. For example, [BigQuery identifier](https://cloud.google.com/
  # bigquery/docs/reference/standard-sql/lexical#identifiers).
  # Corresponds to the JSON property `name`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4072
  def name=(_arg0); end

  # ID of a NamedRange. Its size must be 1x1.
  # Corresponds to the JSON property `namedRangeId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4077
  def named_range_id; end

  # ID of a NamedRange. Its size must be 1x1.
  # Corresponds to the JSON property `namedRangeId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4077
  def named_range_id=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4094
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4094
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4101
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#590
class Google::Apis::SheetsV4::DataSourceParameter::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A schedule for data to refresh every day in a given time interval.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4109
class Google::Apis::SheetsV4::DataSourceRefreshDailySchedule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceRefreshDailySchedule] a new instance of DataSourceRefreshDailySchedule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4119
  def initialize(**args); end

  # Represents a time of day. The date and time zone are either not significant or
  # are specified elsewhere. An API may choose to allow leap seconds. Related
  # types are google.type.Date and `google.protobuf.Timestamp`.
  # Corresponds to the JSON property `startTime`
  #
  # @return [Google::Apis::SheetsV4::TimeOfDay]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4117
  def start_time; end

  # Represents a time of day. The date and time zone are either not significant or
  # are specified elsewhere. An API may choose to allow leap seconds. Related
  # types are google.type.Date and `google.protobuf.Timestamp`.
  # Corresponds to the JSON property `startTime`
  #
  # @return [Google::Apis::SheetsV4::TimeOfDay]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4117
  def start_time=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4124
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#596
class Google::Apis::SheetsV4::DataSourceRefreshDailySchedule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A monthly schedule for data to refresh on specific days in the month in a
# given time interval.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4131
class Google::Apis::SheetsV4::DataSourceRefreshMonthlySchedule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceRefreshMonthlySchedule] a new instance of DataSourceRefreshMonthlySchedule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4147
  def initialize(**args); end

  # Days of the month to refresh. Only 1-28 are supported, mapping to the 1st to
  # the 28th day. At least one day must be specified.
  # Corresponds to the JSON property `daysOfMonth`
  #
  # @return [Array<Fixnum>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4138
  def days_of_month; end

  # Days of the month to refresh. Only 1-28 are supported, mapping to the 1st to
  # the 28th day. At least one day must be specified.
  # Corresponds to the JSON property `daysOfMonth`
  #
  # @return [Array<Fixnum>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4138
  def days_of_month=(_arg0); end

  # Represents a time of day. The date and time zone are either not significant or
  # are specified elsewhere. An API may choose to allow leap seconds. Related
  # types are google.type.Date and `google.protobuf.Timestamp`.
  # Corresponds to the JSON property `startTime`
  #
  # @return [Google::Apis::SheetsV4::TimeOfDay]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4145
  def start_time; end

  # Represents a time of day. The date and time zone are either not significant or
  # are specified elsewhere. An API may choose to allow leap seconds. Related
  # types are google.type.Date and `google.protobuf.Timestamp`.
  # Corresponds to the JSON property `startTime`
  #
  # @return [Google::Apis::SheetsV4::TimeOfDay]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4145
  def start_time=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4152
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#602
class Google::Apis::SheetsV4::DataSourceRefreshMonthlySchedule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Schedule for refreshing the data source. Data sources in the spreadsheet are
# refreshed within a time interval. You can specify the start time by clicking
# the Scheduled Refresh button in the Sheets editor, but the interval is fixed
# at 4 hours. For example, if you specify a start time of 8 AM , the refresh
# will take place between 8 AM and 12 PM every day.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4163
class Google::Apis::SheetsV4::DataSourceRefreshSchedule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceRefreshSchedule] a new instance of DataSourceRefreshSchedule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4202
  def initialize(**args); end

  # A schedule for data to refresh every day in a given time interval.
  # Corresponds to the JSON property `dailySchedule`
  #
  # @return [Google::Apis::SheetsV4::DataSourceRefreshDailySchedule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4169
  def daily_schedule; end

  # A schedule for data to refresh every day in a given time interval.
  # Corresponds to the JSON property `dailySchedule`
  #
  # @return [Google::Apis::SheetsV4::DataSourceRefreshDailySchedule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4169
  def daily_schedule=(_arg0); end

  # True if the refresh schedule is enabled, or false otherwise.
  # Corresponds to the JSON property `enabled`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4174
  def enabled; end

  # True if the refresh schedule is enabled, or false otherwise.
  # Corresponds to the JSON property `enabled`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4174
  def enabled=(_arg0); end

  # True if the refresh schedule is enabled, or false otherwise.
  # Corresponds to the JSON property `enabled`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4174
  def enabled?; end

  # A monthly schedule for data to refresh on specific days in the month in a
  # given time interval.
  # Corresponds to the JSON property `monthlySchedule`
  #
  # @return [Google::Apis::SheetsV4::DataSourceRefreshMonthlySchedule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4181
  def monthly_schedule; end

  # A monthly schedule for data to refresh on specific days in the month in a
  # given time interval.
  # Corresponds to the JSON property `monthlySchedule`
  #
  # @return [Google::Apis::SheetsV4::DataSourceRefreshMonthlySchedule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4181
  def monthly_schedule=(_arg0); end

  # Represents a time interval, encoded as a Timestamp start (inclusive) and a
  # Timestamp end (exclusive). The start must be less than or equal to the end.
  # When the start equals the end, the interval is empty (matches no time). When
  # both start and end are unspecified, the interval matches any time.
  # Corresponds to the JSON property `nextRun`
  #
  # @return [Google::Apis::SheetsV4::Interval]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4189
  def next_run; end

  # Represents a time interval, encoded as a Timestamp start (inclusive) and a
  # Timestamp end (exclusive). The start must be less than or equal to the end.
  # When the start equals the end, the interval is empty (matches no time). When
  # both start and end are unspecified, the interval matches any time.
  # Corresponds to the JSON property `nextRun`
  #
  # @return [Google::Apis::SheetsV4::Interval]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4189
  def next_run=(_arg0); end

  # The scope of the refresh. Must be ALL_DATA_SOURCES.
  # Corresponds to the JSON property `refreshScope`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4194
  def refresh_scope; end

  # The scope of the refresh. Must be ALL_DATA_SOURCES.
  # Corresponds to the JSON property `refreshScope`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4194
  def refresh_scope=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4207
  def update!(**args); end

  # A weekly schedule for data to refresh on specific days in a given time
  # interval.
  # Corresponds to the JSON property `weeklySchedule`
  #
  # @return [Google::Apis::SheetsV4::DataSourceRefreshWeeklySchedule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4200
  def weekly_schedule; end

  # A weekly schedule for data to refresh on specific days in a given time
  # interval.
  # Corresponds to the JSON property `weeklySchedule`
  #
  # @return [Google::Apis::SheetsV4::DataSourceRefreshWeeklySchedule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4200
  def weekly_schedule=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#608
class Google::Apis::SheetsV4::DataSourceRefreshSchedule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A weekly schedule for data to refresh on specific days in a given time
# interval.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4219
class Google::Apis::SheetsV4::DataSourceRefreshWeeklySchedule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceRefreshWeeklySchedule] a new instance of DataSourceRefreshWeeklySchedule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4234
  def initialize(**args); end

  # Days of the week to refresh. At least one day must be specified.
  # Corresponds to the JSON property `daysOfWeek`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4225
  def days_of_week; end

  # Days of the week to refresh. At least one day must be specified.
  # Corresponds to the JSON property `daysOfWeek`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4225
  def days_of_week=(_arg0); end

  # Represents a time of day. The date and time zone are either not significant or
  # are specified elsewhere. An API may choose to allow leap seconds. Related
  # types are google.type.Date and `google.protobuf.Timestamp`.
  # Corresponds to the JSON property `startTime`
  #
  # @return [Google::Apis::SheetsV4::TimeOfDay]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4232
  def start_time; end

  # Represents a time of day. The date and time zone are either not significant or
  # are specified elsewhere. An API may choose to allow leap seconds. Related
  # types are google.type.Date and `google.protobuf.Timestamp`.
  # Corresponds to the JSON property `startTime`
  #
  # @return [Google::Apis::SheetsV4::TimeOfDay]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4232
  def start_time=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4239
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#614
class Google::Apis::SheetsV4::DataSourceRefreshWeeklySchedule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A range along a single dimension on a DATA_SOURCE sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4246
class Google::Apis::SheetsV4::DataSourceSheetDimensionRange
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceSheetDimensionRange] a new instance of DataSourceSheetDimensionRange
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4259
  def initialize(**args); end

  # The columns on the data source sheet.
  # Corresponds to the JSON property `columnReferences`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceColumnReference>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4252
  def column_references; end

  # The columns on the data source sheet.
  # Corresponds to the JSON property `columnReferences`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceColumnReference>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4252
  def column_references=(_arg0); end

  # The ID of the data source sheet the range is on.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4257
  def sheet_id; end

  # The ID of the data source sheet the range is on.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4257
  def sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4264
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#620
class Google::Apis::SheetsV4::DataSourceSheetDimensionRange::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Additional properties of a DATA_SOURCE sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4271
class Google::Apis::SheetsV4::DataSourceSheetProperties
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceSheetProperties] a new instance of DataSourceSheetProperties
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4297
  def initialize(**args); end

  # The columns displayed on the sheet, corresponding to the values in RowData.
  # Corresponds to the JSON property `columns`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceColumn>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4277
  def columns; end

  # The columns displayed on the sheet, corresponding to the values in RowData.
  # Corresponds to the JSON property `columns`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceColumn>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4277
  def columns=(_arg0); end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4290
  def data_execution_status; end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4290
  def data_execution_status=(_arg0); end

  # ID of the DataSource the sheet is connected to.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4295
  def data_source_id; end

  # ID of the DataSource the sheet is connected to.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4295
  def data_source_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4302
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#626
class Google::Apis::SheetsV4::DataSourceSheetProperties::Representation < ::Google::Apis::Core::JsonRepresentation; end

# This specifies the details of the data source. For example, for BigQuery, this
# specifies information about the BigQuery source.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4311
class Google::Apis::SheetsV4::DataSourceSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceSpec] a new instance of DataSourceSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4329
  def initialize(**args); end

  # The specification of a BigQuery data source that's connected to a sheet.
  # Corresponds to the JSON property `bigQuery`
  #
  # @return [Google::Apis::SheetsV4::BigQueryDataSourceSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4317
  def big_query; end

  # The specification of a BigQuery data source that's connected to a sheet.
  # Corresponds to the JSON property `bigQuery`
  #
  # @return [Google::Apis::SheetsV4::BigQueryDataSourceSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4317
  def big_query=(_arg0); end

  # The specification of a Looker data source.
  # Corresponds to the JSON property `looker`
  #
  # @return [Google::Apis::SheetsV4::LookerDataSourceSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4322
  def looker; end

  # The specification of a Looker data source.
  # Corresponds to the JSON property `looker`
  #
  # @return [Google::Apis::SheetsV4::LookerDataSourceSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4322
  def looker=(_arg0); end

  # The parameters of the data source, used when querying the data source.
  # Corresponds to the JSON property `parameters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceParameter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4327
  def parameters; end

  # The parameters of the data source, used when querying the data source.
  # Corresponds to the JSON property `parameters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceParameter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4327
  def parameters=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4334
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#632
class Google::Apis::SheetsV4::DataSourceSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A data source table, which allows the user to import a static table of data
# from the DataSource into Sheets. This is also known as "Extract" in the Sheets
# editor.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4344
class Google::Apis::SheetsV4::DataSourceTable
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataSourceTable] a new instance of DataSourceTable
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4393
  def initialize(**args); end

  # The type to select columns for the data source table. Defaults to SELECTED.
  # Corresponds to the JSON property `columnSelectionType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4350
  def column_selection_type; end

  # The type to select columns for the data source table. Defaults to SELECTED.
  # Corresponds to the JSON property `columnSelectionType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4350
  def column_selection_type=(_arg0); end

  # Columns selected for the data source table. The column_selection_type must be
  # SELECTED.
  # Corresponds to the JSON property `columns`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceColumnReference>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4356
  def columns; end

  # Columns selected for the data source table. The column_selection_type must be
  # SELECTED.
  # Corresponds to the JSON property `columns`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceColumnReference>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4356
  def columns=(_arg0); end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4369
  def data_execution_status; end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4369
  def data_execution_status=(_arg0); end

  # The ID of the data source the data source table is associated with.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4374
  def data_source_id; end

  # The ID of the data source the data source table is associated with.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4374
  def data_source_id=(_arg0); end

  # Filter specifications in the data source table.
  # Corresponds to the JSON property `filterSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::FilterSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4379
  def filter_specs; end

  # Filter specifications in the data source table.
  # Corresponds to the JSON property `filterSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::FilterSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4379
  def filter_specs=(_arg0); end

  # The limit of rows to return. If not set, a default limit is applied. Please
  # refer to the Sheets editor for the default and max limit.
  # Corresponds to the JSON property `rowLimit`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4385
  def row_limit; end

  # The limit of rows to return. If not set, a default limit is applied. Please
  # refer to the Sheets editor for the default and max limit.
  # Corresponds to the JSON property `rowLimit`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4385
  def row_limit=(_arg0); end

  # Sort specifications in the data source table. The result of the data source
  # table is sorted based on the sort specifications in order.
  # Corresponds to the JSON property `sortSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::SortSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4391
  def sort_specs; end

  # Sort specifications in the data source table. The result of the data source
  # table is sorted based on the sort specifications in order.
  # Corresponds to the JSON property `sortSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::SortSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4391
  def sort_specs=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4398
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#638
class Google::Apis::SheetsV4::DataSourceTable::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A data validation rule.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4410
class Google::Apis::SheetsV4::DataValidationRule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DataValidationRule] a new instance of DataValidationRule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4437
  def initialize(**args); end

  # A condition that can evaluate to true or false. BooleanConditions are used by
  # conditional formatting, data validation, and the criteria in filters.
  # Corresponds to the JSON property `condition`
  #
  # @return [Google::Apis::SheetsV4::BooleanCondition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4417
  def condition; end

  # A condition that can evaluate to true or false. BooleanConditions are used by
  # conditional formatting, data validation, and the criteria in filters.
  # Corresponds to the JSON property `condition`
  #
  # @return [Google::Apis::SheetsV4::BooleanCondition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4417
  def condition=(_arg0); end

  # A message to show the user when adding data to the cell.
  # Corresponds to the JSON property `inputMessage`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4422
  def input_message; end

  # A message to show the user when adding data to the cell.
  # Corresponds to the JSON property `inputMessage`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4422
  def input_message=(_arg0); end

  # True if the UI should be customized based on the kind of condition. If true, "
  # List" conditions will show a dropdown.
  # Corresponds to the JSON property `showCustomUi`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4428
  def show_custom_ui; end

  # True if the UI should be customized based on the kind of condition. If true, "
  # List" conditions will show a dropdown.
  # Corresponds to the JSON property `showCustomUi`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4428
  def show_custom_ui=(_arg0); end

  # True if the UI should be customized based on the kind of condition. If true, "
  # List" conditions will show a dropdown.
  # Corresponds to the JSON property `showCustomUi`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4428
  def show_custom_ui?; end

  # True if invalid data should be rejected.
  # Corresponds to the JSON property `strict`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4434
  def strict; end

  # True if invalid data should be rejected.
  # Corresponds to the JSON property `strict`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4434
  def strict=(_arg0); end

  # True if invalid data should be rejected.
  # Corresponds to the JSON property `strict`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4434
  def strict?; end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4442
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#644
class Google::Apis::SheetsV4::DataValidationRule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Allows you to organize the date-time values in a source data column into
# buckets based on selected parts of their date or time values. For example,
# consider a pivot table showing sales transactions by date: +----------+--------
# ------+ | Date | SUM of Sales | +----------+--------------+ | 1/1/2017 | $621.
# 14 | | 2/3/2017 | $708.84 | | 5/8/2017 | $326.84 | ... +----------+------------
# --+ Applying a date-time group rule with a DateTimeRuleType of YEAR_MONTH
# results in the following pivot table. +--------------+--------------+ |
# Grouped Date | SUM of Sales | +--------------+--------------+ | 2017-Jan | $53,
# 731.78 | | 2017-Feb | $83,475.32 | | 2017-Mar | $94,385.05 | ... +-------------
# -+--------------+
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4460
class Google::Apis::SheetsV4::DateTimeRule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DateTimeRule] a new instance of DateTimeRule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4468
  def initialize(**args); end

  # The type of date-time grouping to apply.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4466
  def type; end

  # The type of date-time grouping to apply.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4466
  def type=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4473
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#650
class Google::Apis::SheetsV4::DateTimeRule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Removes the banded range with the given ID from the spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4479
class Google::Apis::SheetsV4::DeleteBandingRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteBandingRequest] a new instance of DeleteBandingRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4487
  def initialize(**args); end

  # The ID of the banded range to delete.
  # Corresponds to the JSON property `bandedRangeId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4485
  def banded_range_id; end

  # The ID of the banded range to delete.
  # Corresponds to the JSON property `bandedRangeId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4485
  def banded_range_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4492
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#656
class Google::Apis::SheetsV4::DeleteBandingRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Deletes a conditional format rule at the given index. All subsequent rules'
# indexes are decremented.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4499
class Google::Apis::SheetsV4::DeleteConditionalFormatRuleRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteConditionalFormatRuleRequest] a new instance of DeleteConditionalFormatRuleRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4512
  def initialize(**args); end

  # The zero-based index of the rule to be deleted.
  # Corresponds to the JSON property `index`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4505
  def index; end

  # The zero-based index of the rule to be deleted.
  # Corresponds to the JSON property `index`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4505
  def index=(_arg0); end

  # The sheet the rule is being deleted from.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4510
  def sheet_id; end

  # The sheet the rule is being deleted from.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4510
  def sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4517
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#662
class Google::Apis::SheetsV4::DeleteConditionalFormatRuleRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of deleting a conditional format rule.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4524
class Google::Apis::SheetsV4::DeleteConditionalFormatRuleResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteConditionalFormatRuleResponse] a new instance of DeleteConditionalFormatRuleResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4532
  def initialize(**args); end

  # A rule describing a conditional format.
  # Corresponds to the JSON property `rule`
  #
  # @return [Google::Apis::SheetsV4::ConditionalFormatRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4530
  def rule; end

  # A rule describing a conditional format.
  # Corresponds to the JSON property `rule`
  #
  # @return [Google::Apis::SheetsV4::ConditionalFormatRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4530
  def rule=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4537
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#668
class Google::Apis::SheetsV4::DeleteConditionalFormatRuleResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Deletes a data source. The request also deletes the associated data source
# sheet, and unlinks all associated data source objects.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4544
class Google::Apis::SheetsV4::DeleteDataSourceRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteDataSourceRequest] a new instance of DeleteDataSourceRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4552
  def initialize(**args); end

  # The ID of the data source to delete.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4550
  def data_source_id; end

  # The ID of the data source to delete.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4550
  def data_source_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4557
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#674
class Google::Apis::SheetsV4::DeleteDataSourceRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A request to delete developer metadata.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4563
class Google::Apis::SheetsV4::DeleteDeveloperMetadataRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteDeveloperMetadataRequest] a new instance of DeleteDeveloperMetadataRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4571
  def initialize(**args); end

  # Filter that describes what data should be selected or returned from a request.
  # Corresponds to the JSON property `dataFilter`
  #
  # @return [Google::Apis::SheetsV4::DataFilter]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4569
  def data_filter; end

  # Filter that describes what data should be selected or returned from a request.
  # Corresponds to the JSON property `dataFilter`
  #
  # @return [Google::Apis::SheetsV4::DataFilter]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4569
  def data_filter=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4576
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#680
class Google::Apis::SheetsV4::DeleteDeveloperMetadataRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response from deleting developer metadata.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4582
class Google::Apis::SheetsV4::DeleteDeveloperMetadataResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteDeveloperMetadataResponse] a new instance of DeleteDeveloperMetadataResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4590
  def initialize(**args); end

  # The metadata that was deleted.
  # Corresponds to the JSON property `deletedDeveloperMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4588
  def deleted_developer_metadata; end

  # The metadata that was deleted.
  # Corresponds to the JSON property `deletedDeveloperMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4588
  def deleted_developer_metadata=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4595
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#686
class Google::Apis::SheetsV4::DeleteDeveloperMetadataResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Deletes a group over the specified range by decrementing the depth of the
# dimensions in the range. For example, assume the sheet has a depth-1 group
# over B:E and a depth-2 group over C:D. Deleting a group over D:E leaves the
# sheet with a depth-1 group over B:D and a depth-2 group over C:C.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4604
class Google::Apis::SheetsV4::DeleteDimensionGroupRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteDimensionGroupRequest] a new instance of DeleteDimensionGroupRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4614
  def initialize(**args); end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4612
  def range; end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4612
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4619
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#692
class Google::Apis::SheetsV4::DeleteDimensionGroupRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of deleting a group.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4625
class Google::Apis::SheetsV4::DeleteDimensionGroupResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteDimensionGroupResponse] a new instance of DeleteDimensionGroupResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4633
  def initialize(**args); end

  # All groups of a dimension after deleting a group from that dimension.
  # Corresponds to the JSON property `dimensionGroups`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4631
  def dimension_groups; end

  # All groups of a dimension after deleting a group from that dimension.
  # Corresponds to the JSON property `dimensionGroups`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4631
  def dimension_groups=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4638
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#698
class Google::Apis::SheetsV4::DeleteDimensionGroupResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Deletes the dimensions from the sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4644
class Google::Apis::SheetsV4::DeleteDimensionRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteDimensionRequest] a new instance of DeleteDimensionRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4654
  def initialize(**args); end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4652
  def range; end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4652
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4659
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#704
class Google::Apis::SheetsV4::DeleteDimensionRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Removes rows within this range that contain values in the specified columns
# that are duplicates of values in any previous row. Rows with identical values
# but different letter cases, formatting, or formulas are considered to be
# duplicates. This request also removes duplicate rows hidden from view (for
# example, due to a filter). When removing duplicates, the first instance of
# each duplicate row scanning from the top downwards is kept in the resulting
# range. Content outside of the specified range isn't removed, and rows
# considered duplicates do not have to be adjacent to each other in the range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4672
class Google::Apis::SheetsV4::DeleteDuplicatesRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteDuplicatesRequest] a new instance of DeleteDuplicatesRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4698
  def initialize(**args); end

  # The columns in the range to analyze for duplicate values. If no columns are
  # selected then all columns are analyzed for duplicates.
  # Corresponds to the JSON property `comparisonColumns`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4679
  def comparison_columns; end

  # The columns in the range to analyze for duplicate values. If no columns are
  # selected then all columns are analyzed for duplicates.
  # Corresponds to the JSON property `comparisonColumns`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4679
  def comparison_columns=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4696
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4696
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4703
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#710
class Google::Apis::SheetsV4::DeleteDuplicatesRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of removing duplicates in a range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4710
class Google::Apis::SheetsV4::DeleteDuplicatesResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteDuplicatesResponse] a new instance of DeleteDuplicatesResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4718
  def initialize(**args); end

  # The number of duplicate rows removed.
  # Corresponds to the JSON property `duplicatesRemovedCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4716
  def duplicates_removed_count; end

  # The number of duplicate rows removed.
  # Corresponds to the JSON property `duplicatesRemovedCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4716
  def duplicates_removed_count=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4723
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#716
class Google::Apis::SheetsV4::DeleteDuplicatesResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Deletes the embedded object with the given ID.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4729
class Google::Apis::SheetsV4::DeleteEmbeddedObjectRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteEmbeddedObjectRequest] a new instance of DeleteEmbeddedObjectRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4737
  def initialize(**args); end

  # The ID of the embedded object to delete.
  # Corresponds to the JSON property `objectId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4735
  def object_id_prop; end

  # The ID of the embedded object to delete.
  # Corresponds to the JSON property `objectId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4735
  def object_id_prop=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4742
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#722
class Google::Apis::SheetsV4::DeleteEmbeddedObjectRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Deletes a particular filter view.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4748
class Google::Apis::SheetsV4::DeleteFilterViewRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteFilterViewRequest] a new instance of DeleteFilterViewRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4756
  def initialize(**args); end

  # The ID of the filter to delete.
  # Corresponds to the JSON property `filterId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4754
  def filter_id; end

  # The ID of the filter to delete.
  # Corresponds to the JSON property `filterId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4754
  def filter_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4761
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#728
class Google::Apis::SheetsV4::DeleteFilterViewRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Removes the named range with the given ID from the spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4767
class Google::Apis::SheetsV4::DeleteNamedRangeRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteNamedRangeRequest] a new instance of DeleteNamedRangeRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4775
  def initialize(**args); end

  # The ID of the named range to delete.
  # Corresponds to the JSON property `namedRangeId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4773
  def named_range_id; end

  # The ID of the named range to delete.
  # Corresponds to the JSON property `namedRangeId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4773
  def named_range_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4780
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#734
class Google::Apis::SheetsV4::DeleteNamedRangeRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Deletes the protected range with the given ID.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4786
class Google::Apis::SheetsV4::DeleteProtectedRangeRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteProtectedRangeRequest] a new instance of DeleteProtectedRangeRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4794
  def initialize(**args); end

  # The ID of the protected range to delete.
  # Corresponds to the JSON property `protectedRangeId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4792
  def protected_range_id; end

  # The ID of the protected range to delete.
  # Corresponds to the JSON property `protectedRangeId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4792
  def protected_range_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4799
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#740
class Google::Apis::SheetsV4::DeleteProtectedRangeRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Deletes a range of cells, shifting other cells into the deleted area.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4805
class Google::Apis::SheetsV4::DeleteRangeRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteRangeRequest] a new instance of DeleteRangeRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4832
  def initialize(**args); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4823
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4823
  def range=(_arg0); end

  # The dimension from which deleted cells will be replaced with. If ROWS,
  # existing cells will be shifted upward to replace the deleted cells. If COLUMNS,
  # existing cells will be shifted left to replace the deleted cells.
  # Corresponds to the JSON property `shiftDimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4830
  def shift_dimension; end

  # The dimension from which deleted cells will be replaced with. If ROWS,
  # existing cells will be shifted upward to replace the deleted cells. If COLUMNS,
  # existing cells will be shifted left to replace the deleted cells.
  # Corresponds to the JSON property `shiftDimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4830
  def shift_dimension=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4837
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#746
class Google::Apis::SheetsV4::DeleteRangeRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Deletes the requested sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4844
class Google::Apis::SheetsV4::DeleteSheetRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeleteSheetRequest] a new instance of DeleteSheetRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4853
  def initialize(**args); end

  # The ID of the sheet to delete. If the sheet is of DATA_SOURCE type, the
  # associated DataSource is also deleted.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4851
  def sheet_id; end

  # The ID of the sheet to delete. If the sheet is of DATA_SOURCE type, the
  # associated DataSource is also deleted.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4851
  def sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4858
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#752
class Google::Apis::SheetsV4::DeleteSheetRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Developer metadata associated with a location or object in a spreadsheet.
# Developer metadata may be used to associate arbitrary data with various parts
# of a spreadsheet and will remain associated at those locations as they move
# around and the spreadsheet is edited. For example, if developer metadata is
# associated with row 5 and another row is then subsequently inserted above row
# 5, that original metadata will still be associated with the row it was first
# associated with (what is now row 6). If the associated object is deleted its
# metadata is deleted too.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4871
class Google::Apis::SheetsV4::DeveloperMetadata
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeveloperMetadata] a new instance of DeveloperMetadata
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4903
  def initialize(**args); end

  # A location where metadata may be associated in a spreadsheet.
  # Corresponds to the JSON property `location`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadataLocation]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4877
  def location; end

  # A location where metadata may be associated in a spreadsheet.
  # Corresponds to the JSON property `location`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadataLocation]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4877
  def location=(_arg0); end

  # The spreadsheet-scoped unique ID that identifies the metadata. IDs may be
  # specified when metadata is created, otherwise one will be randomly generated
  # and assigned. Must be positive.
  # Corresponds to the JSON property `metadataId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4884
  def metadata_id; end

  # The spreadsheet-scoped unique ID that identifies the metadata. IDs may be
  # specified when metadata is created, otherwise one will be randomly generated
  # and assigned. Must be positive.
  # Corresponds to the JSON property `metadataId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4884
  def metadata_id=(_arg0); end

  # The metadata key. There may be multiple metadata in a spreadsheet with the
  # same key. Developer metadata must always have a key specified.
  # Corresponds to the JSON property `metadataKey`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4890
  def metadata_key; end

  # The metadata key. There may be multiple metadata in a spreadsheet with the
  # same key. Developer metadata must always have a key specified.
  # Corresponds to the JSON property `metadataKey`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4890
  def metadata_key=(_arg0); end

  # Data associated with the metadata's key.
  # Corresponds to the JSON property `metadataValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4895
  def metadata_value; end

  # Data associated with the metadata's key.
  # Corresponds to the JSON property `metadataValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4895
  def metadata_value=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4908
  def update!(**args); end

  # The metadata visibility. Developer metadata must always have a visibility
  # specified.
  # Corresponds to the JSON property `visibility`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4901
  def visibility; end

  # The metadata visibility. Developer metadata must always have a visibility
  # specified.
  # Corresponds to the JSON property `visibility`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4901
  def visibility=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#758
class Google::Apis::SheetsV4::DeveloperMetadata::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A location where metadata may be associated in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4918
class Google::Apis::SheetsV4::DeveloperMetadataLocation
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeveloperMetadataLocation] a new instance of DeveloperMetadataLocation
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4944
  def initialize(**args); end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `dimensionRange`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4926
  def dimension_range; end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `dimensionRange`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4926
  def dimension_range=(_arg0); end

  # The type of location this object represents. This field is read-only.
  # Corresponds to the JSON property `locationType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4931
  def location_type; end

  # The type of location this object represents. This field is read-only.
  # Corresponds to the JSON property `locationType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4931
  def location_type=(_arg0); end

  # The ID of the sheet when metadata is associated with an entire sheet.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4936
  def sheet_id; end

  # The ID of the sheet when metadata is associated with an entire sheet.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4936
  def sheet_id=(_arg0); end

  # True when metadata is associated with an entire spreadsheet.
  # Corresponds to the JSON property `spreadsheet`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4941
  def spreadsheet; end

  # True when metadata is associated with an entire spreadsheet.
  # Corresponds to the JSON property `spreadsheet`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4941
  def spreadsheet=(_arg0); end

  # True when metadata is associated with an entire spreadsheet.
  # Corresponds to the JSON property `spreadsheet`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4941
  def spreadsheet?; end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4949
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#764
class Google::Apis::SheetsV4::DeveloperMetadataLocation::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Selects DeveloperMetadata that matches all of the specified fields. For
# example, if only a metadata ID is specified this considers the
# DeveloperMetadata with that particular unique ID. If a metadata key is
# specified, this considers all developer metadata with that key. If a key,
# visibility, and location type are all specified, this considers all developer
# metadata with that key and visibility that are associated with a location of
# that type. In general, this selects all DeveloperMetadata that matches the
# intersection of all the specified fields; any field or combination of fields
# may be specified.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4966
class Google::Apis::SheetsV4::DeveloperMetadataLookup
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DeveloperMetadataLookup] a new instance of DeveloperMetadataLookup
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5023
  def initialize(**args); end

  # Determines how this lookup matches the location. If this field is specified as
  # EXACT, only developer metadata associated on the exact location specified is
  # matched. If this field is specified to INTERSECTING, developer metadata
  # associated on intersecting locations is also matched. If left unspecified,
  # this field assumes a default value of INTERSECTING. If this field is specified,
  # a metadataLocation must also be specified.
  # Corresponds to the JSON property `locationMatchingStrategy`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4977
  def location_matching_strategy; end

  # Determines how this lookup matches the location. If this field is specified as
  # EXACT, only developer metadata associated on the exact location specified is
  # matched. If this field is specified to INTERSECTING, developer metadata
  # associated on intersecting locations is also matched. If left unspecified,
  # this field assumes a default value of INTERSECTING. If this field is specified,
  # a metadataLocation must also be specified.
  # Corresponds to the JSON property `locationMatchingStrategy`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4977
  def location_matching_strategy=(_arg0); end

  # Limits the selected developer metadata to those entries which are associated
  # with locations of the specified type. For example, when this field is
  # specified as ROW this lookup only considers developer metadata associated on
  # rows. If the field is left unspecified, all location types are considered.
  # This field cannot be specified as SPREADSHEET when the
  # locationMatchingStrategy is specified as INTERSECTING or when the
  # metadataLocation is specified as a non-spreadsheet location: spreadsheet
  # metadata cannot intersect any other developer metadata location. This field
  # also must be left unspecified when the locationMatchingStrategy is specified
  # as EXACT.
  # Corresponds to the JSON property `locationType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4991
  def location_type; end

  # Limits the selected developer metadata to those entries which are associated
  # with locations of the specified type. For example, when this field is
  # specified as ROW this lookup only considers developer metadata associated on
  # rows. If the field is left unspecified, all location types are considered.
  # This field cannot be specified as SPREADSHEET when the
  # locationMatchingStrategy is specified as INTERSECTING or when the
  # metadataLocation is specified as a non-spreadsheet location: spreadsheet
  # metadata cannot intersect any other developer metadata location. This field
  # also must be left unspecified when the locationMatchingStrategy is specified
  # as EXACT.
  # Corresponds to the JSON property `locationType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4991
  def location_type=(_arg0); end

  # Limits the selected developer metadata to that which has a matching
  # DeveloperMetadata.metadata_id.
  # Corresponds to the JSON property `metadataId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4997
  def metadata_id; end

  # Limits the selected developer metadata to that which has a matching
  # DeveloperMetadata.metadata_id.
  # Corresponds to the JSON property `metadataId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#4997
  def metadata_id=(_arg0); end

  # Limits the selected developer metadata to that which has a matching
  # DeveloperMetadata.metadata_key.
  # Corresponds to the JSON property `metadataKey`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5003
  def metadata_key; end

  # Limits the selected developer metadata to that which has a matching
  # DeveloperMetadata.metadata_key.
  # Corresponds to the JSON property `metadataKey`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5003
  def metadata_key=(_arg0); end

  # A location where metadata may be associated in a spreadsheet.
  # Corresponds to the JSON property `metadataLocation`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadataLocation]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5008
  def metadata_location; end

  # A location where metadata may be associated in a spreadsheet.
  # Corresponds to the JSON property `metadataLocation`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadataLocation]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5008
  def metadata_location=(_arg0); end

  # Limits the selected developer metadata to that which has a matching
  # DeveloperMetadata.metadata_value.
  # Corresponds to the JSON property `metadataValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5014
  def metadata_value; end

  # Limits the selected developer metadata to that which has a matching
  # DeveloperMetadata.metadata_value.
  # Corresponds to the JSON property `metadataValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5014
  def metadata_value=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5028
  def update!(**args); end

  # Limits the selected developer metadata to that which has a matching
  # DeveloperMetadata.visibility. If left unspecified, all developer metadata
  # visibile to the requesting project is considered.
  # Corresponds to the JSON property `visibility`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5021
  def visibility; end

  # Limits the selected developer metadata to that which has a matching
  # DeveloperMetadata.visibility. If left unspecified, all developer metadata
  # visibile to the requesting project is considered.
  # Corresponds to the JSON property `visibility`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5021
  def visibility=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#770
class Google::Apis::SheetsV4::DeveloperMetadataLookup::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A group over an interval of rows or columns on a sheet, which can contain or
# be contained within other groups. A group can be collapsed or expanded as a
# unit on the sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5042
class Google::Apis::SheetsV4::DimensionGroup
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DimensionGroup] a new instance of DimensionGroup
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5069
  def initialize(**args); end

  # This field is true if this group is collapsed. A collapsed group remains
  # collapsed if an overlapping group at a shallower depth is expanded. A true
  # value does not imply that all dimensions within the group are hidden, since a
  # dimension's visibility can change independently from this group property.
  # However, when this property is updated, all dimensions within it are set to
  # hidden if this field is true, or set to visible if this field is false.
  # Corresponds to the JSON property `collapsed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5053
  def collapsed; end

  # This field is true if this group is collapsed. A collapsed group remains
  # collapsed if an overlapping group at a shallower depth is expanded. A true
  # value does not imply that all dimensions within the group are hidden, since a
  # dimension's visibility can change independently from this group property.
  # However, when this property is updated, all dimensions within it are set to
  # hidden if this field is true, or set to visible if this field is false.
  # Corresponds to the JSON property `collapsed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5053
  def collapsed=(_arg0); end

  # This field is true if this group is collapsed. A collapsed group remains
  # collapsed if an overlapping group at a shallower depth is expanded. A true
  # value does not imply that all dimensions within the group are hidden, since a
  # dimension's visibility can change independently from this group property.
  # However, when this property is updated, all dimensions within it are set to
  # hidden if this field is true, or set to visible if this field is false.
  # Corresponds to the JSON property `collapsed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5053
  def collapsed?; end

  # The depth of the group, representing how many groups have a range that wholly
  # contains the range of this group.
  # Corresponds to the JSON property `depth`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5060
  def depth; end

  # The depth of the group, representing how many groups have a range that wholly
  # contains the range of this group.
  # Corresponds to the JSON property `depth`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5060
  def depth=(_arg0); end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5067
  def range; end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5067
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5074
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#776
class Google::Apis::SheetsV4::DimensionGroup::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Properties about a dimension.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5082
class Google::Apis::SheetsV4::DimensionProperties
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DimensionProperties] a new instance of DimensionProperties
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5112
  def initialize(**args); end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5088
  def data_source_column_reference; end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5088
  def data_source_column_reference=(_arg0); end

  # The developer metadata associated with a single row or column.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5093
  def developer_metadata; end

  # The developer metadata associated with a single row or column.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5093
  def developer_metadata=(_arg0); end

  # True if this dimension is being filtered. This field is read-only.
  # Corresponds to the JSON property `hiddenByFilter`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5098
  def hidden_by_filter; end

  # True if this dimension is being filtered. This field is read-only.
  # Corresponds to the JSON property `hiddenByFilter`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5098
  def hidden_by_filter=(_arg0); end

  # True if this dimension is being filtered. This field is read-only.
  # Corresponds to the JSON property `hiddenByFilter`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5098
  def hidden_by_filter?; end

  # True if this dimension is explicitly hidden.
  # Corresponds to the JSON property `hiddenByUser`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5104
  def hidden_by_user; end

  # True if this dimension is explicitly hidden.
  # Corresponds to the JSON property `hiddenByUser`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5104
  def hidden_by_user=(_arg0); end

  # True if this dimension is explicitly hidden.
  # Corresponds to the JSON property `hiddenByUser`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5104
  def hidden_by_user?; end

  # The height (if a row) or width (if a column) of the dimension in pixels.
  # Corresponds to the JSON property `pixelSize`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5110
  def pixel_size; end

  # The height (if a row) or width (if a column) of the dimension in pixels.
  # Corresponds to the JSON property `pixelSize`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5110
  def pixel_size=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5117
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#782
class Google::Apis::SheetsV4::DimensionProperties::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A range along a single dimension on a sheet. All indexes are zero-based.
# Indexes are half open: the start index is inclusive and the end index is
# exclusive. Missing indexes indicate the range is unbounded on that side.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5129
class Google::Apis::SheetsV4::DimensionRange
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DimensionRange] a new instance of DimensionRange
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5152
  def initialize(**args); end

  # The dimension of the span.
  # Corresponds to the JSON property `dimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5135
  def dimension; end

  # The dimension of the span.
  # Corresponds to the JSON property `dimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5135
  def dimension=(_arg0); end

  # The end (exclusive) of the span, or not set if unbounded.
  # Corresponds to the JSON property `endIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5140
  def end_index; end

  # The end (exclusive) of the span, or not set if unbounded.
  # Corresponds to the JSON property `endIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5140
  def end_index=(_arg0); end

  # The sheet this span is on.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5145
  def sheet_id; end

  # The sheet this span is on.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5145
  def sheet_id=(_arg0); end

  # The start (inclusive) of the span, or not set if unbounded.
  # Corresponds to the JSON property `startIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5150
  def start_index; end

  # The start (inclusive) of the span, or not set if unbounded.
  # Corresponds to the JSON property `startIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5150
  def start_index=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5157
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#788
class Google::Apis::SheetsV4::DimensionRange::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Duplicates a particular filter view.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5166
class Google::Apis::SheetsV4::DuplicateFilterViewRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DuplicateFilterViewRequest] a new instance of DuplicateFilterViewRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5174
  def initialize(**args); end

  # The ID of the filter being duplicated.
  # Corresponds to the JSON property `filterId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5172
  def filter_id; end

  # The ID of the filter being duplicated.
  # Corresponds to the JSON property `filterId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5172
  def filter_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5179
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#794
class Google::Apis::SheetsV4::DuplicateFilterViewRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of a filter view being duplicated.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5185
class Google::Apis::SheetsV4::DuplicateFilterViewResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DuplicateFilterViewResponse] a new instance of DuplicateFilterViewResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5193
  def initialize(**args); end

  # A filter view.
  # Corresponds to the JSON property `filter`
  #
  # @return [Google::Apis::SheetsV4::FilterView]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5191
  def filter; end

  # A filter view.
  # Corresponds to the JSON property `filter`
  #
  # @return [Google::Apis::SheetsV4::FilterView]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5191
  def filter=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5198
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#800
class Google::Apis::SheetsV4::DuplicateFilterViewResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Duplicates the contents of a sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5204
class Google::Apis::SheetsV4::DuplicateSheetRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DuplicateSheetRequest] a new instance of DuplicateSheetRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5232
  def initialize(**args); end

  # The zero-based index where the new sheet should be inserted. The index of all
  # sheets after this are incremented.
  # Corresponds to the JSON property `insertSheetIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5211
  def insert_sheet_index; end

  # The zero-based index where the new sheet should be inserted. The index of all
  # sheets after this are incremented.
  # Corresponds to the JSON property `insertSheetIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5211
  def insert_sheet_index=(_arg0); end

  # If set, the ID of the new sheet. If not set, an ID is chosen. If set, the ID
  # must not conflict with any existing sheet ID. If set, it must be non-negative.
  # Corresponds to the JSON property `newSheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5217
  def new_sheet_id; end

  # If set, the ID of the new sheet. If not set, an ID is chosen. If set, the ID
  # must not conflict with any existing sheet ID. If set, it must be non-negative.
  # Corresponds to the JSON property `newSheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5217
  def new_sheet_id=(_arg0); end

  # The name of the new sheet. If empty, a new name is chosen for you.
  # Corresponds to the JSON property `newSheetName`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5222
  def new_sheet_name; end

  # The name of the new sheet. If empty, a new name is chosen for you.
  # Corresponds to the JSON property `newSheetName`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5222
  def new_sheet_name=(_arg0); end

  # The sheet to duplicate. If the source sheet is of DATA_SOURCE type, its
  # backing DataSource is also duplicated and associated with the new copy of the
  # sheet. No data execution is triggered, the grid data of this sheet is also
  # copied over but only available after the batch request completes.
  # Corresponds to the JSON property `sourceSheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5230
  def source_sheet_id; end

  # The sheet to duplicate. If the source sheet is of DATA_SOURCE type, its
  # backing DataSource is also duplicated and associated with the new copy of the
  # sheet. No data execution is triggered, the grid data of this sheet is also
  # copied over but only available after the batch request completes.
  # Corresponds to the JSON property `sourceSheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5230
  def source_sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5237
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#806
class Google::Apis::SheetsV4::DuplicateSheetRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of duplicating a sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5246
class Google::Apis::SheetsV4::DuplicateSheetResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [DuplicateSheetResponse] a new instance of DuplicateSheetResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5254
  def initialize(**args); end

  # Properties of a sheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5252
  def properties; end

  # Properties of a sheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5252
  def properties=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5259
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#812
class Google::Apis::SheetsV4::DuplicateSheetResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The editors of a protected range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5265
class Google::Apis::SheetsV4::Editors
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Editors] a new instance of Editors
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5285
  def initialize(**args); end

  # True if anyone in the document's domain has edit access to the protected range.
  # Domain protection is only supported on documents within a domain.
  # Corresponds to the JSON property `domainUsersCanEdit`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5272
  def domain_users_can_edit; end

  # True if anyone in the document's domain has edit access to the protected range.
  # Domain protection is only supported on documents within a domain.
  # Corresponds to the JSON property `domainUsersCanEdit`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5272
  def domain_users_can_edit=(_arg0); end

  # True if anyone in the document's domain has edit access to the protected range.
  # Domain protection is only supported on documents within a domain.
  # Corresponds to the JSON property `domainUsersCanEdit`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5272
  def domain_users_can_edit?; end

  # The email addresses of groups with edit access to the protected range.
  # Corresponds to the JSON property `groups`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5278
  def groups; end

  # The email addresses of groups with edit access to the protected range.
  # Corresponds to the JSON property `groups`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5278
  def groups=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5290
  def update!(**args); end

  # The email addresses of users with edit access to the protected range.
  # Corresponds to the JSON property `users`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5283
  def users; end

  # The email addresses of users with edit access to the protected range.
  # Corresponds to the JSON property `users`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5283
  def users=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#818
class Google::Apis::SheetsV4::Editors::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A chart embedded in a sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5298
class Google::Apis::SheetsV4::EmbeddedChart
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [EmbeddedChart] a new instance of EmbeddedChart
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5321
  def initialize(**args); end

  # A border along an embedded object.
  # Corresponds to the JSON property `border`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectBorder]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5304
  def border; end

  # A border along an embedded object.
  # Corresponds to the JSON property `border`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectBorder]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5304
  def border=(_arg0); end

  # The ID of the chart.
  # Corresponds to the JSON property `chartId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5309
  def chart_id; end

  # The ID of the chart.
  # Corresponds to the JSON property `chartId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5309
  def chart_id=(_arg0); end

  # The position of an embedded object such as a chart.
  # Corresponds to the JSON property `position`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5314
  def position; end

  # The position of an embedded object such as a chart.
  # Corresponds to the JSON property `position`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5314
  def position=(_arg0); end

  # The specifications of a chart.
  # Corresponds to the JSON property `spec`
  #
  # @return [Google::Apis::SheetsV4::ChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5319
  def spec; end

  # The specifications of a chart.
  # Corresponds to the JSON property `spec`
  #
  # @return [Google::Apis::SheetsV4::ChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5319
  def spec=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5326
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#824
class Google::Apis::SheetsV4::EmbeddedChart::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A border along an embedded object.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5335
class Google::Apis::SheetsV4::EmbeddedObjectBorder
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [EmbeddedObjectBorder] a new instance of EmbeddedObjectBorder
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5392
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5385
  def color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5385
  def color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5390
  def color_style; end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5390
  def color_style=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5397
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#830
class Google::Apis::SheetsV4::EmbeddedObjectBorder::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The position of an embedded object such as a chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5404
class Google::Apis::SheetsV4::EmbeddedObjectPosition
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [EmbeddedObjectPosition] a new instance of EmbeddedObjectPosition
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5425
  def initialize(**args); end

  # If true, the embedded object is put on a new sheet whose ID is chosen for you.
  # Used only when writing.
  # Corresponds to the JSON property `newSheet`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5411
  def new_sheet; end

  # If true, the embedded object is put on a new sheet whose ID is chosen for you.
  # Used only when writing.
  # Corresponds to the JSON property `newSheet`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5411
  def new_sheet=(_arg0); end

  # If true, the embedded object is put on a new sheet whose ID is chosen for you.
  # Used only when writing.
  # Corresponds to the JSON property `newSheet`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5411
  def new_sheet?; end

  # The location an object is overlaid on top of a grid.
  # Corresponds to the JSON property `overlayPosition`
  #
  # @return [Google::Apis::SheetsV4::OverlayPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5417
  def overlay_position; end

  # The location an object is overlaid on top of a grid.
  # Corresponds to the JSON property `overlayPosition`
  #
  # @return [Google::Apis::SheetsV4::OverlayPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5417
  def overlay_position=(_arg0); end

  # The sheet this is on. Set only if the embedded object is on its own sheet.
  # Must be non-negative.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5423
  def sheet_id; end

  # The sheet this is on. Set only if the embedded object is on its own sheet.
  # Must be non-negative.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5423
  def sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5430
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#836
class Google::Apis::SheetsV4::EmbeddedObjectPosition::Representation < ::Google::Apis::Core::JsonRepresentation; end

# An error in a cell.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5438
class Google::Apis::SheetsV4::ErrorValue
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ErrorValue] a new instance of ErrorValue
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5451
  def initialize(**args); end

  # A message with more information about the error (in the spreadsheet's locale).
  # Corresponds to the JSON property `message`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5444
  def message; end

  # A message with more information about the error (in the spreadsheet's locale).
  # Corresponds to the JSON property `message`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5444
  def message=(_arg0); end

  # The type of error.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5449
  def type; end

  # The type of error.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5449
  def type=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5456
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#842
class Google::Apis::SheetsV4::ErrorValue::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The kinds of value that a cell in a spreadsheet can have.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5463
class Google::Apis::SheetsV4::ExtendedValue
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ExtendedValue] a new instance of ExtendedValue
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5495
  def initialize(**args); end

  # Represents a boolean value.
  # Corresponds to the JSON property `boolValue`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5469
  def bool_value; end

  # Represents a boolean value.
  # Corresponds to the JSON property `boolValue`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5469
  def bool_value=(_arg0); end

  # Represents a boolean value.
  # Corresponds to the JSON property `boolValue`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5469
  def bool_value?; end

  # An error in a cell.
  # Corresponds to the JSON property `errorValue`
  #
  # @return [Google::Apis::SheetsV4::ErrorValue]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5475
  def error_value; end

  # An error in a cell.
  # Corresponds to the JSON property `errorValue`
  #
  # @return [Google::Apis::SheetsV4::ErrorValue]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5475
  def error_value=(_arg0); end

  # Represents a formula.
  # Corresponds to the JSON property `formulaValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5480
  def formula_value; end

  # Represents a formula.
  # Corresponds to the JSON property `formulaValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5480
  def formula_value=(_arg0); end

  # Represents a double value. Note: Dates, Times and DateTimes are represented as
  # doubles in SERIAL_NUMBER format.
  # Corresponds to the JSON property `numberValue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5486
  def number_value; end

  # Represents a double value. Note: Dates, Times and DateTimes are represented as
  # doubles in SERIAL_NUMBER format.
  # Corresponds to the JSON property `numberValue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5486
  def number_value=(_arg0); end

  # Represents a string value. Leading single quotes are not included. For example,
  # if the user typed `'123` into the UI, this would be represented as a `
  # stringValue` of `"123"`.
  # Corresponds to the JSON property `stringValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5493
  def string_value; end

  # Represents a string value. Leading single quotes are not included. For example,
  # if the user typed `'123` into the UI, this would be represented as a `
  # stringValue` of `"123"`.
  # Corresponds to the JSON property `stringValue`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5493
  def string_value=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5500
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#848
class Google::Apis::SheetsV4::ExtendedValue::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Criteria for showing/hiding rows in a filter or filter view.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5510
class Google::Apis::SheetsV4::FilterCriteria
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [FilterCriteria] a new instance of FilterCriteria
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5632
  def initialize(**args); end

  # A condition that can evaluate to true or false. BooleanConditions are used by
  # conditional formatting, data validation, and the criteria in filters.
  # Corresponds to the JSON property `condition`
  #
  # @return [Google::Apis::SheetsV4::BooleanCondition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5517
  def condition; end

  # A condition that can evaluate to true or false. BooleanConditions are used by
  # conditional formatting, data validation, and the criteria in filters.
  # Corresponds to the JSON property `condition`
  #
  # @return [Google::Apis::SheetsV4::BooleanCondition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5517
  def condition=(_arg0); end

  # Values that should be hidden.
  # Corresponds to the JSON property `hiddenValues`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5522
  def hidden_values; end

  # Values that should be hidden.
  # Corresponds to the JSON property `hiddenValues`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5522
  def hidden_values=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5637
  def update!(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `visibleBackgroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5571
  def visible_background_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `visibleBackgroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5571
  def visible_background_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `visibleBackgroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5576
  def visible_background_color_style; end

  # A color value.
  # Corresponds to the JSON property `visibleBackgroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5576
  def visible_background_color_style=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `visibleForegroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5625
  def visible_foreground_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `visibleForegroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5625
  def visible_foreground_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `visibleForegroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5630
  def visible_foreground_color_style; end

  # A color value.
  # Corresponds to the JSON property `visibleForegroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5630
  def visible_foreground_color_style=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#854
class Google::Apis::SheetsV4::FilterCriteria::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The filter criteria associated with a specific column.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5648
class Google::Apis::SheetsV4::FilterSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [FilterSpec] a new instance of FilterSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5666
  def initialize(**args); end

  # The zero-based column index.
  # Corresponds to the JSON property `columnIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5654
  def column_index; end

  # The zero-based column index.
  # Corresponds to the JSON property `columnIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5654
  def column_index=(_arg0); end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5659
  def data_source_column_reference; end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5659
  def data_source_column_reference=(_arg0); end

  # Criteria for showing/hiding rows in a filter or filter view.
  # Corresponds to the JSON property `filterCriteria`
  #
  # @return [Google::Apis::SheetsV4::FilterCriteria]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5664
  def filter_criteria; end

  # Criteria for showing/hiding rows in a filter or filter view.
  # Corresponds to the JSON property `filterCriteria`
  #
  # @return [Google::Apis::SheetsV4::FilterCriteria]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5664
  def filter_criteria=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5671
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#860
class Google::Apis::SheetsV4::FilterSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A filter view.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5679
class Google::Apis::SheetsV4::FilterView
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [FilterView] a new instance of FilterView
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5735
  def initialize(**args); end

  # The criteria for showing/hiding values per column. The map's key is the column
  # index, and the value is the criteria for that column. This field is deprecated
  # in favor of filter_specs.
  # Corresponds to the JSON property `criteria`
  #
  # @return [Hash<String,Google::Apis::SheetsV4::FilterCriteria>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5687
  def criteria; end

  # The criteria for showing/hiding values per column. The map's key is the column
  # index, and the value is the criteria for that column. This field is deprecated
  # in favor of filter_specs.
  # Corresponds to the JSON property `criteria`
  #
  # @return [Hash<String,Google::Apis::SheetsV4::FilterCriteria>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5687
  def criteria=(_arg0); end

  # The filter criteria for showing/hiding values per column. Both criteria and
  # filter_specs are populated in responses. If both fields are specified in an
  # update request, this field takes precedence.
  # Corresponds to the JSON property `filterSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::FilterSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5694
  def filter_specs; end

  # The filter criteria for showing/hiding values per column. Both criteria and
  # filter_specs are populated in responses. If both fields are specified in an
  # update request, this field takes precedence.
  # Corresponds to the JSON property `filterSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::FilterSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5694
  def filter_specs=(_arg0); end

  # The ID of the filter view.
  # Corresponds to the JSON property `filterViewId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5699
  def filter_view_id; end

  # The ID of the filter view.
  # Corresponds to the JSON property `filterViewId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5699
  def filter_view_id=(_arg0); end

  # The named range this filter view is backed by, if any. When writing, only one
  # of range or named_range_id may be set.
  # Corresponds to the JSON property `namedRangeId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5705
  def named_range_id; end

  # The named range this filter view is backed by, if any. When writing, only one
  # of range or named_range_id may be set.
  # Corresponds to the JSON property `namedRangeId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5705
  def named_range_id=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5722
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5722
  def range=(_arg0); end

  # The sort order per column. Later specifications are used when values are equal
  # in the earlier specifications.
  # Corresponds to the JSON property `sortSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::SortSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5728
  def sort_specs; end

  # The sort order per column. Later specifications are used when values are equal
  # in the earlier specifications.
  # Corresponds to the JSON property `sortSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::SortSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5728
  def sort_specs=(_arg0); end

  # The name of the filter view.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5733
  def title; end

  # The name of the filter view.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5733
  def title=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5740
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#866
class Google::Apis::SheetsV4::FilterView::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Finds and replaces data in cells over a range, sheet, or all sheets.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5752
class Google::Apis::SheetsV4::FindReplaceRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [FindReplaceRequest] a new instance of FindReplaceRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5824
  def initialize(**args); end

  # True to find/replace over all sheets.
  # Corresponds to the JSON property `allSheets`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5758
  def all_sheets; end

  # True to find/replace over all sheets.
  # Corresponds to the JSON property `allSheets`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5758
  def all_sheets=(_arg0); end

  # True to find/replace over all sheets.
  # Corresponds to the JSON property `allSheets`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5758
  def all_sheets?; end

  # The value to search.
  # Corresponds to the JSON property `find`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5764
  def find; end

  # The value to search.
  # Corresponds to the JSON property `find`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5764
  def find=(_arg0); end

  # True if the search should include cells with formulas. False to skip cells
  # with formulas.
  # Corresponds to the JSON property `includeFormulas`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5770
  def include_formulas; end

  # True if the search should include cells with formulas. False to skip cells
  # with formulas.
  # Corresponds to the JSON property `includeFormulas`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5770
  def include_formulas=(_arg0); end

  # True if the search should include cells with formulas. False to skip cells
  # with formulas.
  # Corresponds to the JSON property `includeFormulas`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5770
  def include_formulas?; end

  # True if the search is case sensitive.
  # Corresponds to the JSON property `matchCase`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5776
  def match_case; end

  # True if the search is case sensitive.
  # Corresponds to the JSON property `matchCase`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5776
  def match_case=(_arg0); end

  # True if the search is case sensitive.
  # Corresponds to the JSON property `matchCase`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5776
  def match_case?; end

  # True if the find value should match the entire cell.
  # Corresponds to the JSON property `matchEntireCell`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5782
  def match_entire_cell; end

  # True if the find value should match the entire cell.
  # Corresponds to the JSON property `matchEntireCell`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5782
  def match_entire_cell=(_arg0); end

  # True if the find value should match the entire cell.
  # Corresponds to the JSON property `matchEntireCell`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5782
  def match_entire_cell?; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5800
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5800
  def range=(_arg0); end

  # The value to use as the replacement.
  # Corresponds to the JSON property `replacement`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5805
  def replacement; end

  # The value to use as the replacement.
  # Corresponds to the JSON property `replacement`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5805
  def replacement=(_arg0); end

  # True if the find value is a regex. The regular expression and replacement
  # should follow Java regex rules at https://docs.oracle.com/javase/8/docs/api/
  # java/util/regex/Pattern.html. The replacement string is allowed to refer to
  # capturing groups. For example, if one cell has the contents `"Google Sheets"`
  # and another has `"Google Docs"`, then searching for `"o.* (.*)"` with a
  # replacement of `"$1 Rocks"` would change the contents of the cells to `"
  # GSheets Rocks"` and `"GDocs Rocks"` respectively.
  # Corresponds to the JSON property `searchByRegex`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5816
  def search_by_regex; end

  # True if the find value is a regex. The regular expression and replacement
  # should follow Java regex rules at https://docs.oracle.com/javase/8/docs/api/
  # java/util/regex/Pattern.html. The replacement string is allowed to refer to
  # capturing groups. For example, if one cell has the contents `"Google Sheets"`
  # and another has `"Google Docs"`, then searching for `"o.* (.*)"` with a
  # replacement of `"$1 Rocks"` would change the contents of the cells to `"
  # GSheets Rocks"` and `"GDocs Rocks"` respectively.
  # Corresponds to the JSON property `searchByRegex`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5816
  def search_by_regex=(_arg0); end

  # True if the find value is a regex. The regular expression and replacement
  # should follow Java regex rules at https://docs.oracle.com/javase/8/docs/api/
  # java/util/regex/Pattern.html. The replacement string is allowed to refer to
  # capturing groups. For example, if one cell has the contents `"Google Sheets"`
  # and another has `"Google Docs"`, then searching for `"o.* (.*)"` with a
  # replacement of `"$1 Rocks"` would change the contents of the cells to `"
  # GSheets Rocks"` and `"GDocs Rocks"` respectively.
  # Corresponds to the JSON property `searchByRegex`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5816
  def search_by_regex?; end

  # The sheet to find/replace over.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5822
  def sheet_id; end

  # The sheet to find/replace over.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5822
  def sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5829
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#872
class Google::Apis::SheetsV4::FindReplaceRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of the find/replace.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5843
class Google::Apis::SheetsV4::FindReplaceResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [FindReplaceResponse] a new instance of FindReplaceResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5873
  def initialize(**args); end

  # The number of formula cells changed.
  # Corresponds to the JSON property `formulasChanged`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5849
  def formulas_changed; end

  # The number of formula cells changed.
  # Corresponds to the JSON property `formulasChanged`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5849
  def formulas_changed=(_arg0); end

  # The number of occurrences (possibly multiple within a cell) changed. For
  # example, if replacing `"e"` with `"o"` in `"Google Sheets"`, this would be `"3"
  # ` because `"Google Sheets"` -> `"Googlo Shoots"`.
  # Corresponds to the JSON property `occurrencesChanged`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5856
  def occurrences_changed; end

  # The number of occurrences (possibly multiple within a cell) changed. For
  # example, if replacing `"e"` with `"o"` in `"Google Sheets"`, this would be `"3"
  # ` because `"Google Sheets"` -> `"Googlo Shoots"`.
  # Corresponds to the JSON property `occurrencesChanged`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5856
  def occurrences_changed=(_arg0); end

  # The number of rows changed.
  # Corresponds to the JSON property `rowsChanged`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5861
  def rows_changed; end

  # The number of rows changed.
  # Corresponds to the JSON property `rowsChanged`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5861
  def rows_changed=(_arg0); end

  # The number of sheets changed.
  # Corresponds to the JSON property `sheetsChanged`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5866
  def sheets_changed; end

  # The number of sheets changed.
  # Corresponds to the JSON property `sheetsChanged`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5866
  def sheets_changed=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5878
  def update!(**args); end

  # The number of non-formula cells changed.
  # Corresponds to the JSON property `valuesChanged`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5871
  def values_changed; end

  # The number of non-formula cells changed.
  # Corresponds to the JSON property `valuesChanged`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5871
  def values_changed=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#878
class Google::Apis::SheetsV4::FindReplaceResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Version of the google-apis-sheets_v4 gem
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/gem_version.rb#19
Google::Apis::SheetsV4::GEM_VERSION = T.let(T.unsafe(nil), String)

# Version of the code generator used to generate this client
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/gem_version.rb#22
Google::Apis::SheetsV4::GENERATOR_VERSION = T.let(T.unsafe(nil), String)

# The request for retrieving a Spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5888
class Google::Apis::SheetsV4::GetSpreadsheetByDataFilterRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [GetSpreadsheetByDataFilterRequest] a new instance of GetSpreadsheetByDataFilterRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5903
  def initialize(**args); end

  # The DataFilters used to select which ranges to retrieve from the spreadsheet.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5894
  def data_filters; end

  # The DataFilters used to select which ranges to retrieve from the spreadsheet.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5894
  def data_filters=(_arg0); end

  # True if grid data should be returned. This parameter is ignored if a field
  # mask was set in the request.
  # Corresponds to the JSON property `includeGridData`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5900
  def include_grid_data; end

  # True if grid data should be returned. This parameter is ignored if a field
  # mask was set in the request.
  # Corresponds to the JSON property `includeGridData`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5900
  def include_grid_data=(_arg0); end

  # True if grid data should be returned. This parameter is ignored if a field
  # mask was set in the request.
  # Corresponds to the JSON property `includeGridData`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5900
  def include_grid_data?; end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5908
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#884
class Google::Apis::SheetsV4::GetSpreadsheetByDataFilterRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A rule that applies a gradient color scale format, based on the interpolation
# points listed. The format of a cell will vary based on its contents as
# compared to the values of the interpolation points.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5917
class Google::Apis::SheetsV4::GradientRule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [GradientRule] a new instance of GradientRule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5938
  def initialize(**args); end

  # A single interpolation point on a gradient conditional format. These pin the
  # gradient color scale according to the color, type and value chosen.
  # Corresponds to the JSON property `maxpoint`
  #
  # @return [Google::Apis::SheetsV4::InterpolationPoint]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5924
  def maxpoint; end

  # A single interpolation point on a gradient conditional format. These pin the
  # gradient color scale according to the color, type and value chosen.
  # Corresponds to the JSON property `maxpoint`
  #
  # @return [Google::Apis::SheetsV4::InterpolationPoint]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5924
  def maxpoint=(_arg0); end

  # A single interpolation point on a gradient conditional format. These pin the
  # gradient color scale according to the color, type and value chosen.
  # Corresponds to the JSON property `midpoint`
  #
  # @return [Google::Apis::SheetsV4::InterpolationPoint]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5930
  def midpoint; end

  # A single interpolation point on a gradient conditional format. These pin the
  # gradient color scale according to the color, type and value chosen.
  # Corresponds to the JSON property `midpoint`
  #
  # @return [Google::Apis::SheetsV4::InterpolationPoint]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5930
  def midpoint=(_arg0); end

  # A single interpolation point on a gradient conditional format. These pin the
  # gradient color scale according to the color, type and value chosen.
  # Corresponds to the JSON property `minpoint`
  #
  # @return [Google::Apis::SheetsV4::InterpolationPoint]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5936
  def minpoint; end

  # A single interpolation point on a gradient conditional format. These pin the
  # gradient color scale according to the color, type and value chosen.
  # Corresponds to the JSON property `minpoint`
  #
  # @return [Google::Apis::SheetsV4::InterpolationPoint]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5936
  def minpoint=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5943
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#890
class Google::Apis::SheetsV4::GradientRule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A coordinate in a sheet. All indexes are zero-based.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5951
class Google::Apis::SheetsV4::GridCoordinate
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [GridCoordinate] a new instance of GridCoordinate
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5969
  def initialize(**args); end

  # The column index of the coordinate.
  # Corresponds to the JSON property `columnIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5957
  def column_index; end

  # The column index of the coordinate.
  # Corresponds to the JSON property `columnIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5957
  def column_index=(_arg0); end

  # The row index of the coordinate.
  # Corresponds to the JSON property `rowIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5962
  def row_index; end

  # The row index of the coordinate.
  # Corresponds to the JSON property `rowIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5962
  def row_index=(_arg0); end

  # The sheet this coordinate is on.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5967
  def sheet_id; end

  # The sheet this coordinate is on.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5967
  def sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5974
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#896
class Google::Apis::SheetsV4::GridCoordinate::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Data in the grid, as well as metadata about the dimensions.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5982
class Google::Apis::SheetsV4::GridData
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [GridData] a new instance of GridData
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6013
  def initialize(**args); end

  # Metadata about the requested columns in the grid, starting with the column in
  # start_column.
  # Corresponds to the JSON property `columnMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionProperties>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5989
  def column_metadata; end

  # Metadata about the requested columns in the grid, starting with the column in
  # start_column.
  # Corresponds to the JSON property `columnMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionProperties>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5989
  def column_metadata=(_arg0); end

  # The data in the grid, one entry per row, starting with the row in startRow.
  # The values in RowData will correspond to columns starting at start_column.
  # Corresponds to the JSON property `rowData`
  #
  # @return [Array<Google::Apis::SheetsV4::RowData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5995
  def row_data; end

  # The data in the grid, one entry per row, starting with the row in startRow.
  # The values in RowData will correspond to columns starting at start_column.
  # Corresponds to the JSON property `rowData`
  #
  # @return [Array<Google::Apis::SheetsV4::RowData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#5995
  def row_data=(_arg0); end

  # Metadata about the requested rows in the grid, starting with the row in
  # start_row.
  # Corresponds to the JSON property `rowMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionProperties>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6001
  def row_metadata; end

  # Metadata about the requested rows in the grid, starting with the row in
  # start_row.
  # Corresponds to the JSON property `rowMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionProperties>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6001
  def row_metadata=(_arg0); end

  # The first column this GridData refers to, zero-based.
  # Corresponds to the JSON property `startColumn`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6006
  def start_column; end

  # The first column this GridData refers to, zero-based.
  # Corresponds to the JSON property `startColumn`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6006
  def start_column=(_arg0); end

  # The first row this GridData refers to, zero-based.
  # Corresponds to the JSON property `startRow`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6011
  def start_row; end

  # The first row this GridData refers to, zero-based.
  # Corresponds to the JSON property `startRow`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6011
  def start_row=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6018
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#902
class Google::Apis::SheetsV4::GridData::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Properties of a grid.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6028
class Google::Apis::SheetsV4::GridProperties
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [GridProperties] a new instance of GridProperties
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6069
  def initialize(**args); end

  # The number of columns in the grid.
  # Corresponds to the JSON property `columnCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6034
  def column_count; end

  # The number of columns in the grid.
  # Corresponds to the JSON property `columnCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6034
  def column_count=(_arg0); end

  # True if the column grouping control toggle is shown after the group.
  # Corresponds to the JSON property `columnGroupControlAfter`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6039
  def column_group_control_after; end

  # True if the column grouping control toggle is shown after the group.
  # Corresponds to the JSON property `columnGroupControlAfter`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6039
  def column_group_control_after=(_arg0); end

  # True if the column grouping control toggle is shown after the group.
  # Corresponds to the JSON property `columnGroupControlAfter`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6039
  def column_group_control_after?; end

  # The number of columns that are frozen in the grid.
  # Corresponds to the JSON property `frozenColumnCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6045
  def frozen_column_count; end

  # The number of columns that are frozen in the grid.
  # Corresponds to the JSON property `frozenColumnCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6045
  def frozen_column_count=(_arg0); end

  # The number of rows that are frozen in the grid.
  # Corresponds to the JSON property `frozenRowCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6050
  def frozen_row_count; end

  # The number of rows that are frozen in the grid.
  # Corresponds to the JSON property `frozenRowCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6050
  def frozen_row_count=(_arg0); end

  # True if the grid isn't showing gridlines in the UI.
  # Corresponds to the JSON property `hideGridlines`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6055
  def hide_gridlines; end

  # True if the grid isn't showing gridlines in the UI.
  # Corresponds to the JSON property `hideGridlines`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6055
  def hide_gridlines=(_arg0); end

  # True if the grid isn't showing gridlines in the UI.
  # Corresponds to the JSON property `hideGridlines`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6055
  def hide_gridlines?; end

  # The number of rows in the grid.
  # Corresponds to the JSON property `rowCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6061
  def row_count; end

  # The number of rows in the grid.
  # Corresponds to the JSON property `rowCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6061
  def row_count=(_arg0); end

  # True if the row grouping control toggle is shown after the group.
  # Corresponds to the JSON property `rowGroupControlAfter`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6066
  def row_group_control_after; end

  # True if the row grouping control toggle is shown after the group.
  # Corresponds to the JSON property `rowGroupControlAfter`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6066
  def row_group_control_after=(_arg0); end

  # True if the row grouping control toggle is shown after the group.
  # Corresponds to the JSON property `rowGroupControlAfter`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6066
  def row_group_control_after?; end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6074
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#908
class Google::Apis::SheetsV4::GridProperties::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
# the start index is inclusive and the end index is exclusive -- [start_index,
# end_index). Missing indexes indicate the range is unbounded on that side. For
# example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
# 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
# end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
# end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
# sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
# sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
# 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
# equal to the end index. If the start index equals the end index, then the
# range is empty. Empty ranges are typically not meaningful and are usually
# rendered in the UI as `#REF!`.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6098
class Google::Apis::SheetsV4::GridRange
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [GridRange] a new instance of GridRange
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6126
  def initialize(**args); end

  # The end column (exclusive) of the range, or not set if unbounded.
  # Corresponds to the JSON property `endColumnIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6104
  def end_column_index; end

  # The end column (exclusive) of the range, or not set if unbounded.
  # Corresponds to the JSON property `endColumnIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6104
  def end_column_index=(_arg0); end

  # The end row (exclusive) of the range, or not set if unbounded.
  # Corresponds to the JSON property `endRowIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6109
  def end_row_index; end

  # The end row (exclusive) of the range, or not set if unbounded.
  # Corresponds to the JSON property `endRowIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6109
  def end_row_index=(_arg0); end

  # The sheet this range is on.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6114
  def sheet_id; end

  # The sheet this range is on.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6114
  def sheet_id=(_arg0); end

  # The start column (inclusive) of the range, or not set if unbounded.
  # Corresponds to the JSON property `startColumnIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6119
  def start_column_index; end

  # The start column (inclusive) of the range, or not set if unbounded.
  # Corresponds to the JSON property `startColumnIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6119
  def start_column_index=(_arg0); end

  # The start row (inclusive) of the range, or not set if unbounded.
  # Corresponds to the JSON property `startRowIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6124
  def start_row_index; end

  # The start row (inclusive) of the range, or not set if unbounded.
  # Corresponds to the JSON property `startRowIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6124
  def start_row_index=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6131
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#914
class Google::Apis::SheetsV4::GridRange::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A histogram chart. A histogram chart groups data items into bins, displaying
# each bin as a column of stacked items. Histograms are used to display the
# distribution of a dataset. Each column of items represents a range into which
# those items fall. The number of bins can be chosen automatically or specified
# explicitly.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6145
class Google::Apis::SheetsV4::HistogramChartSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [HistogramChartSpec] a new instance of HistogramChartSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6184
  def initialize(**args); end

  # By default the bucket size (the range of values stacked in a single column) is
  # chosen automatically, but it may be overridden here. E.g., A bucket size of 1.
  # 5 results in buckets from 0 - 1.5, 1.5 - 3.0, etc. Cannot be negative. This
  # field is optional.
  # Corresponds to the JSON property `bucketSize`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6154
  def bucket_size; end

  # By default the bucket size (the range of values stacked in a single column) is
  # chosen automatically, but it may be overridden here. E.g., A bucket size of 1.
  # 5 results in buckets from 0 - 1.5, 1.5 - 3.0, etc. Cannot be negative. This
  # field is optional.
  # Corresponds to the JSON property `bucketSize`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6154
  def bucket_size=(_arg0); end

  # The position of the chart legend.
  # Corresponds to the JSON property `legendPosition`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6159
  def legend_position; end

  # The position of the chart legend.
  # Corresponds to the JSON property `legendPosition`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6159
  def legend_position=(_arg0); end

  # The outlier percentile is used to ensure that outliers do not adversely affect
  # the calculation of bucket sizes. For example, setting an outlier percentile of
  # 0.05 indicates that the top and bottom 5% of values when calculating buckets.
  # The values are still included in the chart, they will be added to the first or
  # last buckets instead of their own buckets. Must be between 0.0 and 0.5.
  # Corresponds to the JSON property `outlierPercentile`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6168
  def outlier_percentile; end

  # The outlier percentile is used to ensure that outliers do not adversely affect
  # the calculation of bucket sizes. For example, setting an outlier percentile of
  # 0.05 indicates that the top and bottom 5% of values when calculating buckets.
  # The values are still included in the chart, they will be added to the first or
  # last buckets instead of their own buckets. Must be between 0.0 and 0.5.
  # Corresponds to the JSON property `outlierPercentile`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6168
  def outlier_percentile=(_arg0); end

  # The series for a histogram may be either a single series of values to be
  # bucketed or multiple series, each of the same length, containing the name of
  # the series followed by the values to be bucketed for that series.
  # Corresponds to the JSON property `series`
  #
  # @return [Array<Google::Apis::SheetsV4::HistogramSeries>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6175
  def series; end

  # The series for a histogram may be either a single series of values to be
  # bucketed or multiple series, each of the same length, containing the name of
  # the series followed by the values to be bucketed for that series.
  # Corresponds to the JSON property `series`
  #
  # @return [Array<Google::Apis::SheetsV4::HistogramSeries>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6175
  def series=(_arg0); end

  # Whether horizontal divider lines should be displayed between items in each
  # column.
  # Corresponds to the JSON property `showItemDividers`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6181
  def show_item_dividers; end

  # Whether horizontal divider lines should be displayed between items in each
  # column.
  # Corresponds to the JSON property `showItemDividers`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6181
  def show_item_dividers=(_arg0); end

  # Whether horizontal divider lines should be displayed between items in each
  # column.
  # Corresponds to the JSON property `showItemDividers`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6181
  def show_item_dividers?; end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6189
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#920
class Google::Apis::SheetsV4::HistogramChartSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Allows you to organize the numeric values in a source data column into buckets
# of a constant size. All values from HistogramRule.start to HistogramRule.end
# are placed into groups of size HistogramRule.interval. In addition, all values
# below HistogramRule.start are placed in one group, and all values above
# HistogramRule.end are placed in another. Only HistogramRule.interval is
# required, though if HistogramRule.start and HistogramRule.end are both
# provided, HistogramRule.start must be less than HistogramRule.end. For example,
# a pivot table showing average purchase amount by age that has 50+ rows: +-----
# +-------------------+ | Age | AVERAGE of Amount | +-----+-------------------+ |
# 16 | $27.13 | | 17 | $5.24 | | 18 | $20.15 | ... +-----+-------------------+
# could be turned into a pivot table that looks like the one below by applying a
# histogram group rule with a HistogramRule.start of 25, an HistogramRule.
# interval of 20, and an HistogramRule.end of 65. +-------------+----------------
# ---+ | Grouped Age | AVERAGE of Amount | +-------------+-------------------+ |
# < 25 | $19.34 | | 25-45 | $31.43 | | 45-65 | $35.87 | | > 65 | $27.55 | +------
# -------+-------------------+ | Grand Total | $29.12 | +-------------+----------
# ---------+
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6215
class Google::Apis::SheetsV4::HistogramRule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [HistogramRule] a new instance of HistogramRule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6235
  def initialize(**args); end

  # The maximum value at which items are placed into buckets of constant size.
  # Values above end are lumped into a single bucket. This field is optional.
  # Corresponds to the JSON property `end`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6222
  def end; end

  # The maximum value at which items are placed into buckets of constant size.
  # Values above end are lumped into a single bucket. This field is optional.
  # Corresponds to the JSON property `end`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6222
  def end=(_arg0); end

  # The size of the buckets that are created. Must be positive.
  # Corresponds to the JSON property `interval`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6227
  def interval; end

  # The size of the buckets that are created. Must be positive.
  # Corresponds to the JSON property `interval`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6227
  def interval=(_arg0); end

  # The minimum value at which items are placed into buckets of constant size.
  # Values below start are lumped into a single bucket. This field is optional.
  # Corresponds to the JSON property `start`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6233
  def start; end

  # The minimum value at which items are placed into buckets of constant size.
  # Values below start are lumped into a single bucket. This field is optional.
  # Corresponds to the JSON property `start`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6233
  def start=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6240
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#926
class Google::Apis::SheetsV4::HistogramRule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A histogram series containing the series color and data.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6248
class Google::Apis::SheetsV4::HistogramSeries
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [HistogramSeries] a new instance of HistogramSeries
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6310
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `barColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6298
  def bar_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `barColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6298
  def bar_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `barColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6303
  def bar_color_style; end

  # A color value.
  # Corresponds to the JSON property `barColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6303
  def bar_color_style=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `data`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6308
  def data; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `data`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6308
  def data=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6315
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#932
class Google::Apis::SheetsV4::HistogramSeries::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Inserts rows or columns in a sheet at a particular index.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6323
class Google::Apis::SheetsV4::InsertDimensionRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [InsertDimensionRequest] a new instance of InsertDimensionRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6347
  def initialize(**args); end

  # Whether dimension properties should be extended from the dimensions before or
  # after the newly inserted dimensions. True to inherit from the dimensions
  # before (in which case the start index must be greater than 0), and false to
  # inherit from the dimensions after. For example, if row index 0 has red
  # background and row index 1 has a green background, then inserting 2 rows at
  # index 1 can inherit either the green or red background. If `inheritFromBefore`
  # is true, the two new rows will be red (because the row before the insertion
  # point was red), whereas if `inheritFromBefore` is false, the two new rows will
  # be green (because the row after the insertion point was green).
  # Corresponds to the JSON property `inheritFromBefore`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6337
  def inherit_from_before; end

  # Whether dimension properties should be extended from the dimensions before or
  # after the newly inserted dimensions. True to inherit from the dimensions
  # before (in which case the start index must be greater than 0), and false to
  # inherit from the dimensions after. For example, if row index 0 has red
  # background and row index 1 has a green background, then inserting 2 rows at
  # index 1 can inherit either the green or red background. If `inheritFromBefore`
  # is true, the two new rows will be red (because the row before the insertion
  # point was red), whereas if `inheritFromBefore` is false, the two new rows will
  # be green (because the row after the insertion point was green).
  # Corresponds to the JSON property `inheritFromBefore`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6337
  def inherit_from_before=(_arg0); end

  # Whether dimension properties should be extended from the dimensions before or
  # after the newly inserted dimensions. True to inherit from the dimensions
  # before (in which case the start index must be greater than 0), and false to
  # inherit from the dimensions after. For example, if row index 0 has red
  # background and row index 1 has a green background, then inserting 2 rows at
  # index 1 can inherit either the green or red background. If `inheritFromBefore`
  # is true, the two new rows will be red (because the row before the insertion
  # point was red), whereas if `inheritFromBefore` is false, the two new rows will
  # be green (because the row after the insertion point was green).
  # Corresponds to the JSON property `inheritFromBefore`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6337
  def inherit_from_before?; end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6345
  def range; end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6345
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6352
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#938
class Google::Apis::SheetsV4::InsertDimensionRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Inserts cells into a range, shifting the existing cells over or down.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6359
class Google::Apis::SheetsV4::InsertRangeRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [InsertRangeRequest] a new instance of InsertRangeRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6385
  def initialize(**args); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6377
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6377
  def range=(_arg0); end

  # The dimension which will be shifted when inserting cells. If ROWS, existing
  # cells will be shifted down. If COLUMNS, existing cells will be shifted right.
  # Corresponds to the JSON property `shiftDimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6383
  def shift_dimension; end

  # The dimension which will be shifted when inserting cells. If ROWS, existing
  # cells will be shifted down. If COLUMNS, existing cells will be shifted right.
  # Corresponds to the JSON property `shiftDimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6383
  def shift_dimension=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6390
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#944
class Google::Apis::SheetsV4::InsertRangeRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A single interpolation point on a gradient conditional format. These pin the
# gradient color scale according to the color, type and value chosen.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6398
class Google::Apis::SheetsV4::InterpolationPoint
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [InterpolationPoint] a new instance of InterpolationPoint
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6466
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6448
  def color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6448
  def color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6453
  def color_style; end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6453
  def color_style=(_arg0); end

  # How the value should be interpreted.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6458
  def type; end

  # How the value should be interpreted.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6458
  def type=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6471
  def update!(**args); end

  # The value this interpolation point uses. May be a formula. Unused if type is
  # MIN or MAX.
  # Corresponds to the JSON property `value`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6464
  def value; end

  # The value this interpolation point uses. May be a formula. Unused if type is
  # MIN or MAX.
  # Corresponds to the JSON property `value`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6464
  def value=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#950
class Google::Apis::SheetsV4::InterpolationPoint::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Represents a time interval, encoded as a Timestamp start (inclusive) and a
# Timestamp end (exclusive). The start must be less than or equal to the end.
# When the start equals the end, the interval is empty (matches no time). When
# both start and end are unspecified, the interval matches any time.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6483
class Google::Apis::SheetsV4::Interval
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Interval] a new instance of Interval
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6498
  def initialize(**args); end

  # Optional. Exclusive end of the interval. If specified, a Timestamp matching
  # this interval will have to be before the end.
  # Corresponds to the JSON property `endTime`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6490
  def end_time; end

  # Optional. Exclusive end of the interval. If specified, a Timestamp matching
  # this interval will have to be before the end.
  # Corresponds to the JSON property `endTime`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6490
  def end_time=(_arg0); end

  # Optional. Inclusive start of the interval. If specified, a Timestamp matching
  # this interval will have to be the same or after the start.
  # Corresponds to the JSON property `startTime`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6496
  def start_time; end

  # Optional. Inclusive start of the interval. If specified, a Timestamp matching
  # this interval will have to be the same or after the start.
  # Corresponds to the JSON property `startTime`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6496
  def start_time=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6503
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#956
class Google::Apis::SheetsV4::Interval::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Settings to control how circular dependencies are resolved with iterative
# calculation.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6511
class Google::Apis::SheetsV4::IterativeCalculationSettings
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [IterativeCalculationSettings] a new instance of IterativeCalculationSettings
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6526
  def initialize(**args); end

  # When iterative calculation is enabled and successive results differ by less
  # than this threshold value, the calculation rounds stop.
  # Corresponds to the JSON property `convergenceThreshold`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6518
  def convergence_threshold; end

  # When iterative calculation is enabled and successive results differ by less
  # than this threshold value, the calculation rounds stop.
  # Corresponds to the JSON property `convergenceThreshold`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6518
  def convergence_threshold=(_arg0); end

  # When iterative calculation is enabled, the maximum number of calculation
  # rounds to perform.
  # Corresponds to the JSON property `maxIterations`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6524
  def max_iterations; end

  # When iterative calculation is enabled, the maximum number of calculation
  # rounds to perform.
  # Corresponds to the JSON property `maxIterations`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6524
  def max_iterations=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6531
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#962
class Google::Apis::SheetsV4::IterativeCalculationSettings::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Formatting options for key value.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6538
class Google::Apis::SheetsV4::KeyValueFormat
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [KeyValueFormat] a new instance of KeyValueFormat
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6552
  def initialize(**args); end

  # Position settings for text.
  # Corresponds to the JSON property `position`
  #
  # @return [Google::Apis::SheetsV4::TextPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6544
  def position; end

  # Position settings for text.
  # Corresponds to the JSON property `position`
  #
  # @return [Google::Apis::SheetsV4::TextPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6544
  def position=(_arg0); end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6550
  def text_format; end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6550
  def text_format=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6557
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#968
class Google::Apis::SheetsV4::KeyValueFormat::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Properties that describe the style of a line.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6564
class Google::Apis::SheetsV4::LineStyle
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [LineStyle] a new instance of LineStyle
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6577
  def initialize(**args); end

  # The dash type of the line.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6570
  def type; end

  # The dash type of the line.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6570
  def type=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6582
  def update!(**args); end

  # The thickness of the line, in px.
  # Corresponds to the JSON property `width`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6575
  def width; end

  # The thickness of the line, in px.
  # Corresponds to the JSON property `width`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6575
  def width=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#974
class Google::Apis::SheetsV4::LineStyle::Representation < ::Google::Apis::Core::JsonRepresentation; end

# An external or local reference.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6589
class Google::Apis::SheetsV4::Link
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Link] a new instance of Link
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6597
  def initialize(**args); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6602
  def update!(**args); end

  # The link identifier.
  # Corresponds to the JSON property `uri`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6595
  def uri; end

  # The link identifier.
  # Corresponds to the JSON property `uri`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6595
  def uri=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#980
class Google::Apis::SheetsV4::Link::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The specification of a Looker data source.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6608
class Google::Apis::SheetsV4::LookerDataSourceSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [LookerDataSourceSpec] a new instance of LookerDataSourceSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6626
  def initialize(**args); end

  # Name of a Looker model explore.
  # Corresponds to the JSON property `explore`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6614
  def explore; end

  # Name of a Looker model explore.
  # Corresponds to the JSON property `explore`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6614
  def explore=(_arg0); end

  # A Looker instance URL.
  # Corresponds to the JSON property `instanceUri`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6619
  def instance_uri; end

  # A Looker instance URL.
  # Corresponds to the JSON property `instanceUri`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6619
  def instance_uri=(_arg0); end

  # Name of a Looker model.
  # Corresponds to the JSON property `model`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6624
  def model; end

  # Name of a Looker model.
  # Corresponds to the JSON property `model`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6624
  def model=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6631
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#986
class Google::Apis::SheetsV4::LookerDataSourceSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Allows you to manually organize the values in a source data column into
# buckets with names of your choosing. For example, a pivot table that
# aggregates population by state: +-------+-------------------+ | State | SUM of
# Population | +-------+-------------------+ | AK | 0.7 | | AL | 4.8 | | AR | 2.
# 9 | ... +-------+-------------------+ could be turned into a pivot table that
# aggregates population by time zone by providing a list of groups (for example,
# groupName = 'Central', items = ['AL', 'AR', 'IA', ...]) to a manual group rule.
# Note that a similar effect could be achieved by adding a time zone column to
# the source data and adjusting the pivot table. +-----------+-------------------
# + | Time Zone | SUM of Population | +-----------+-------------------+ |
# Central | 106.3 | | Eastern | 151.9 | | Mountain | 17.4 | ... +-----------+----
# ---------------+
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6650
class Google::Apis::SheetsV4::ManualRule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ManualRule] a new instance of ManualRule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6659
  def initialize(**args); end

  # The list of group names and the corresponding items from the source data that
  # map to each group name.
  # Corresponds to the JSON property `groups`
  #
  # @return [Array<Google::Apis::SheetsV4::ManualRuleGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6657
  def groups; end

  # The list of group names and the corresponding items from the source data that
  # map to each group name.
  # Corresponds to the JSON property `groups`
  #
  # @return [Array<Google::Apis::SheetsV4::ManualRuleGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6657
  def groups=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6664
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#992
class Google::Apis::SheetsV4::ManualRule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A group name and a list of items from the source data that should be placed in
# the group with this name.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6671
class Google::Apis::SheetsV4::ManualRuleGroup
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ManualRuleGroup] a new instance of ManualRuleGroup
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6687
  def initialize(**args); end

  # The kinds of value that a cell in a spreadsheet can have.
  # Corresponds to the JSON property `groupName`
  #
  # @return [Google::Apis::SheetsV4::ExtendedValue]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6677
  def group_name; end

  # The kinds of value that a cell in a spreadsheet can have.
  # Corresponds to the JSON property `groupName`
  #
  # @return [Google::Apis::SheetsV4::ExtendedValue]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6677
  def group_name=(_arg0); end

  # The items in the source data that should be placed into this group. Each item
  # may be a string, number, or boolean. Items may appear in at most one group
  # within a given ManualRule. Items that do not appear in any group will appear
  # on their own.
  # Corresponds to the JSON property `items`
  #
  # @return [Array<Google::Apis::SheetsV4::ExtendedValue>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6685
  def items; end

  # The items in the source data that should be placed into this group. Each item
  # may be a string, number, or boolean. Items may appear in at most one group
  # within a given ManualRule. Items that do not appear in any group will appear
  # on their own.
  # Corresponds to the JSON property `items`
  #
  # @return [Array<Google::Apis::SheetsV4::ExtendedValue>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6685
  def items=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6692
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#998
class Google::Apis::SheetsV4::ManualRuleGroup::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A developer metadata entry and the data filters specified in the original
# request that matched it.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6700
class Google::Apis::SheetsV4::MatchedDeveloperMetadata
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [MatchedDeveloperMetadata] a new instance of MatchedDeveloperMetadata
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6720
  def initialize(**args); end

  # All filters matching the returned developer metadata.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6706
  def data_filters; end

  # All filters matching the returned developer metadata.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6706
  def data_filters=(_arg0); end

  # Developer metadata associated with a location or object in a spreadsheet.
  # Developer metadata may be used to associate arbitrary data with various parts
  # of a spreadsheet and will remain associated at those locations as they move
  # around and the spreadsheet is edited. For example, if developer metadata is
  # associated with row 5 and another row is then subsequently inserted above row
  # 5, that original metadata will still be associated with the row it was first
  # associated with (what is now row 6). If the associated object is deleted its
  # metadata is deleted too.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadata]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6718
  def developer_metadata; end

  # Developer metadata associated with a location or object in a spreadsheet.
  # Developer metadata may be used to associate arbitrary data with various parts
  # of a spreadsheet and will remain associated at those locations as they move
  # around and the spreadsheet is edited. For example, if developer metadata is
  # associated with row 5 and another row is then subsequently inserted above row
  # 5, that original metadata will still be associated with the row it was first
  # associated with (what is now row 6). If the associated object is deleted its
  # metadata is deleted too.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadata]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6718
  def developer_metadata=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6725
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1004
class Google::Apis::SheetsV4::MatchedDeveloperMetadata::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A value range that was matched by one or more data filers.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6732
class Google::Apis::SheetsV4::MatchedValueRange
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [MatchedValueRange] a new instance of MatchedValueRange
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6745
  def initialize(**args); end

  # The DataFilters from the request that matched the range of values.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6738
  def data_filters; end

  # The DataFilters from the request that matched the range of values.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6738
  def data_filters=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6750
  def update!(**args); end

  # Data within a range of the spreadsheet.
  # Corresponds to the JSON property `valueRange`
  #
  # @return [Google::Apis::SheetsV4::ValueRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6743
  def value_range; end

  # Data within a range of the spreadsheet.
  # Corresponds to the JSON property `valueRange`
  #
  # @return [Google::Apis::SheetsV4::ValueRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6743
  def value_range=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1010
class Google::Apis::SheetsV4::MatchedValueRange::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Merges all cells in the range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6757
class Google::Apis::SheetsV4::MergeCellsRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [MergeCellsRequest] a new instance of MergeCellsRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6782
  def initialize(**args); end

  # How the cells should be merged.
  # Corresponds to the JSON property `mergeType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6763
  def merge_type; end

  # How the cells should be merged.
  # Corresponds to the JSON property `mergeType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6763
  def merge_type=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6780
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6780
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6787
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1016
class Google::Apis::SheetsV4::MergeCellsRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Moves one or more rows or columns.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6794
class Google::Apis::SheetsV4::MoveDimensionRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [MoveDimensionRequest] a new instance of MoveDimensionRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6817
  def initialize(**args); end

  # The zero-based start index of where to move the source data to, based on the
  # coordinates *before* the source data is removed from the grid. Existing data
  # will be shifted down or right (depending on the dimension) to make room for
  # the moved dimensions. The source dimensions are removed from the grid, so the
  # the data may end up in a different index than specified. For example, given `
  # A1..A5` of `0, 1, 2, 3, 4` and wanting to move `"1"` and `"2"` to between `"3"`
  # and `"4"`, the source would be `ROWS [1..3)`,and the destination index would
  # be `"4"` (the zero-based index of row 5). The end result would be `A1..A5` of `
  # 0, 3, 1, 2, 4`.
  # Corresponds to the JSON property `destinationIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6808
  def destination_index; end

  # The zero-based start index of where to move the source data to, based on the
  # coordinates *before* the source data is removed from the grid. Existing data
  # will be shifted down or right (depending on the dimension) to make room for
  # the moved dimensions. The source dimensions are removed from the grid, so the
  # the data may end up in a different index than specified. For example, given `
  # A1..A5` of `0, 1, 2, 3, 4` and wanting to move `"1"` and `"2"` to between `"3"`
  # and `"4"`, the source would be `ROWS [1..3)`,and the destination index would
  # be `"4"` (the zero-based index of row 5). The end result would be `A1..A5` of `
  # 0, 3, 1, 2, 4`.
  # Corresponds to the JSON property `destinationIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6808
  def destination_index=(_arg0); end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6815
  def source; end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6815
  def source=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6822
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1022
class Google::Apis::SheetsV4::MoveDimensionRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A named range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6829
class Google::Apis::SheetsV4::NamedRange
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [NamedRange] a new instance of NamedRange
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6859
  def initialize(**args); end

  # The name of the named range.
  # Corresponds to the JSON property `name`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6835
  def name; end

  # The name of the named range.
  # Corresponds to the JSON property `name`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6835
  def name=(_arg0); end

  # The ID of the named range.
  # Corresponds to the JSON property `namedRangeId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6840
  def named_range_id; end

  # The ID of the named range.
  # Corresponds to the JSON property `namedRangeId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6840
  def named_range_id=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6857
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6857
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6864
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1028
class Google::Apis::SheetsV4::NamedRange::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The number format of a cell.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6872
class Google::Apis::SheetsV4::NumberFormat
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [NumberFormat] a new instance of NumberFormat
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6888
  def initialize(**args); end

  # Pattern string used for formatting. If not set, a default pattern based on the
  # user's locale will be used if necessary for the given type. See the [Date and
  # Number Formats guide](/sheets/api/guides/formats) for more information about
  # the supported patterns.
  # Corresponds to the JSON property `pattern`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6881
  def pattern; end

  # Pattern string used for formatting. If not set, a default pattern based on the
  # user's locale will be used if necessary for the given type. See the [Date and
  # Number Formats guide](/sheets/api/guides/formats) for more information about
  # the supported patterns.
  # Corresponds to the JSON property `pattern`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6881
  def pattern=(_arg0); end

  # The type of the number format. When writing, this field must be set.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6886
  def type; end

  # The type of the number format. When writing, this field must be set.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6886
  def type=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6893
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1034
class Google::Apis::SheetsV4::NumberFormat::Representation < ::Google::Apis::Core::JsonRepresentation; end

# An org chart. Org charts require a unique set of labels in labels and may
# optionally include parent_labels and tooltips. parent_labels contain, for each
# node, the label identifying the parent node. tooltips contain, for each node,
# an optional tooltip. For example, to describe an OrgChart with Alice as the
# CEO, Bob as the President (reporting to Alice) and Cathy as VP of Sales (also
# reporting to Alice), have labels contain "Alice", "Bob", "Cathy",
# parent_labels contain "", "Alice", "Alice" and tooltips contain "CEO", "
# President", "VP Sales".
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6907
class Google::Apis::SheetsV4::OrgChartSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [OrgChartSpec] a new instance of OrgChartSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7038
  def initialize(**args); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `labels`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6913
  def labels; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `labels`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6913
  def labels=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `nodeColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6962
  def node_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `nodeColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6962
  def node_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `nodeColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6967
  def node_color_style; end

  # A color value.
  # Corresponds to the JSON property `nodeColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6967
  def node_color_style=(_arg0); end

  # The size of the org chart nodes.
  # Corresponds to the JSON property `nodeSize`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6972
  def node_size; end

  # The size of the org chart nodes.
  # Corresponds to the JSON property `nodeSize`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6972
  def node_size=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `parentLabels`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6977
  def parent_labels; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `parentLabels`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#6977
  def parent_labels=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `selectedNodeColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7026
  def selected_node_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `selectedNodeColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7026
  def selected_node_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `selectedNodeColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7031
  def selected_node_color_style; end

  # A color value.
  # Corresponds to the JSON property `selectedNodeColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7031
  def selected_node_color_style=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `tooltips`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7036
  def tooltips; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `tooltips`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7036
  def tooltips=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7043
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1040
class Google::Apis::SheetsV4::OrgChartSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The location an object is overlaid on top of a grid.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7056
class Google::Apis::SheetsV4::OverlayPosition
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [OverlayPosition] a new instance of OverlayPosition
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7085
  def initialize(**args); end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `anchorCell`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7062
  def anchor_cell; end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `anchorCell`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7062
  def anchor_cell=(_arg0); end

  # The height of the object, in pixels. Defaults to 371.
  # Corresponds to the JSON property `heightPixels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7067
  def height_pixels; end

  # The height of the object, in pixels. Defaults to 371.
  # Corresponds to the JSON property `heightPixels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7067
  def height_pixels=(_arg0); end

  # The horizontal offset, in pixels, that the object is offset from the anchor
  # cell.
  # Corresponds to the JSON property `offsetXPixels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7073
  def offset_x_pixels; end

  # The horizontal offset, in pixels, that the object is offset from the anchor
  # cell.
  # Corresponds to the JSON property `offsetXPixels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7073
  def offset_x_pixels=(_arg0); end

  # The vertical offset, in pixels, that the object is offset from the anchor cell.
  # Corresponds to the JSON property `offsetYPixels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7078
  def offset_y_pixels; end

  # The vertical offset, in pixels, that the object is offset from the anchor cell.
  # Corresponds to the JSON property `offsetYPixels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7078
  def offset_y_pixels=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7090
  def update!(**args); end

  # The width of the object, in pixels. Defaults to 600.
  # Corresponds to the JSON property `widthPixels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7083
  def width_pixels; end

  # The width of the object, in pixels. Defaults to 600.
  # Corresponds to the JSON property `widthPixels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7083
  def width_pixels=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1046
class Google::Apis::SheetsV4::OverlayPosition::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The amount of padding around the cell, in pixels. When updating padding, every
# field must be specified.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7101
class Google::Apis::SheetsV4::Padding
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Padding] a new instance of Padding
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7124
  def initialize(**args); end

  # The bottom padding of the cell.
  # Corresponds to the JSON property `bottom`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7107
  def bottom; end

  # The bottom padding of the cell.
  # Corresponds to the JSON property `bottom`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7107
  def bottom=(_arg0); end

  # The left padding of the cell.
  # Corresponds to the JSON property `left`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7112
  def left; end

  # The left padding of the cell.
  # Corresponds to the JSON property `left`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7112
  def left=(_arg0); end

  # The right padding of the cell.
  # Corresponds to the JSON property `right`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7117
  def right; end

  # The right padding of the cell.
  # Corresponds to the JSON property `right`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7117
  def right=(_arg0); end

  # The top padding of the cell.
  # Corresponds to the JSON property `top`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7122
  def top; end

  # The top padding of the cell.
  # Corresponds to the JSON property `top`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7122
  def top=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7129
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1052
class Google::Apis::SheetsV4::Padding::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Inserts data into the spreadsheet starting at the specified coordinate.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7138
class Google::Apis::SheetsV4::PasteDataRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PasteDataRequest] a new instance of PasteDataRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7167
  def initialize(**args); end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `coordinate`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7144
  def coordinate; end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `coordinate`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7144
  def coordinate=(_arg0); end

  # The data to insert.
  # Corresponds to the JSON property `data`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7149
  def data; end

  # The data to insert.
  # Corresponds to the JSON property `data`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7149
  def data=(_arg0); end

  # The delimiter in the data.
  # Corresponds to the JSON property `delimiter`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7154
  def delimiter; end

  # The delimiter in the data.
  # Corresponds to the JSON property `delimiter`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7154
  def delimiter=(_arg0); end

  # True if the data is HTML.
  # Corresponds to the JSON property `html`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7159
  def html; end

  # True if the data is HTML.
  # Corresponds to the JSON property `html`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7159
  def html=(_arg0); end

  # True if the data is HTML.
  # Corresponds to the JSON property `html`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7159
  def html?; end

  # How the data should be pasted.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7165
  def type; end

  # How the data should be pasted.
  # Corresponds to the JSON property `type`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7165
  def type=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7172
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1058
class Google::Apis::SheetsV4::PasteDataRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A pie chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7182
class Google::Apis::SheetsV4::PieChartSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PieChartSpec] a new instance of PieChartSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7211
  def initialize(**args); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `domain`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7188
  def domain; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `domain`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7188
  def domain=(_arg0); end

  # Where the legend of the pie chart should be drawn.
  # Corresponds to the JSON property `legendPosition`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7193
  def legend_position; end

  # Where the legend of the pie chart should be drawn.
  # Corresponds to the JSON property `legendPosition`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7193
  def legend_position=(_arg0); end

  # The size of the hole in the pie chart.
  # Corresponds to the JSON property `pieHole`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7198
  def pie_hole; end

  # The size of the hole in the pie chart.
  # Corresponds to the JSON property `pieHole`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7198
  def pie_hole=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `series`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7203
  def series; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `series`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7203
  def series=(_arg0); end

  # True if the pie is three dimensional.
  # Corresponds to the JSON property `threeDimensional`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7208
  def three_dimensional; end

  # True if the pie is three dimensional.
  # Corresponds to the JSON property `threeDimensional`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7208
  def three_dimensional=(_arg0); end

  # True if the pie is three dimensional.
  # Corresponds to the JSON property `threeDimensional`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7208
  def three_dimensional?; end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7216
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1064
class Google::Apis::SheetsV4::PieChartSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Criteria for showing/hiding rows in a pivot table.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7226
class Google::Apis::SheetsV4::PivotFilterCriteria
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PivotFilterCriteria] a new instance of PivotFilterCriteria
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7248
  def initialize(**args); end

  # A condition that can evaluate to true or false. BooleanConditions are used by
  # conditional formatting, data validation, and the criteria in filters.
  # Corresponds to the JSON property `condition`
  #
  # @return [Google::Apis::SheetsV4::BooleanCondition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7233
  def condition; end

  # A condition that can evaluate to true or false. BooleanConditions are used by
  # conditional formatting, data validation, and the criteria in filters.
  # Corresponds to the JSON property `condition`
  #
  # @return [Google::Apis::SheetsV4::BooleanCondition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7233
  def condition=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7253
  def update!(**args); end

  # Whether values are visible by default. If true, the visible_values are ignored,
  # all values that meet condition (if specified) are shown. If false, values
  # that are both in visible_values and meet condition are shown.
  # Corresponds to the JSON property `visibleByDefault`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7240
  def visible_by_default; end

  # Whether values are visible by default. If true, the visible_values are ignored,
  # all values that meet condition (if specified) are shown. If false, values
  # that are both in visible_values and meet condition are shown.
  # Corresponds to the JSON property `visibleByDefault`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7240
  def visible_by_default=(_arg0); end

  # Whether values are visible by default. If true, the visible_values are ignored,
  # all values that meet condition (if specified) are shown. If false, values
  # that are both in visible_values and meet condition are shown.
  # Corresponds to the JSON property `visibleByDefault`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7240
  def visible_by_default?; end

  # Values that should be included. Values not listed here are excluded.
  # Corresponds to the JSON property `visibleValues`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7246
  def visible_values; end

  # Values that should be included. Values not listed here are excluded.
  # Corresponds to the JSON property `visibleValues`
  #
  # @return [Array<String>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7246
  def visible_values=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1070
class Google::Apis::SheetsV4::PivotFilterCriteria::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The pivot table filter criteria associated with a specific source column
# offset.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7262
class Google::Apis::SheetsV4::PivotFilterSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PivotFilterSpec] a new instance of PivotFilterSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7280
  def initialize(**args); end

  # The zero-based column offset of the source range.
  # Corresponds to the JSON property `columnOffsetIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7268
  def column_offset_index; end

  # The zero-based column offset of the source range.
  # Corresponds to the JSON property `columnOffsetIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7268
  def column_offset_index=(_arg0); end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7273
  def data_source_column_reference; end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7273
  def data_source_column_reference=(_arg0); end

  # Criteria for showing/hiding rows in a pivot table.
  # Corresponds to the JSON property `filterCriteria`
  #
  # @return [Google::Apis::SheetsV4::PivotFilterCriteria]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7278
  def filter_criteria; end

  # Criteria for showing/hiding rows in a pivot table.
  # Corresponds to the JSON property `filterCriteria`
  #
  # @return [Google::Apis::SheetsV4::PivotFilterCriteria]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7278
  def filter_criteria=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7285
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1076
class Google::Apis::SheetsV4::PivotFilterSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A single grouping (either row or column) in a pivot table.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7293
class Google::Apis::SheetsV4::PivotGroup
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PivotGroup] a new instance of PivotGroup
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7370
  def initialize(**args); end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7299
  def data_source_column_reference; end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7299
  def data_source_column_reference=(_arg0); end

  # The count limit on rows or columns in the pivot group.
  # Corresponds to the JSON property `groupLimit`
  #
  # @return [Google::Apis::SheetsV4::PivotGroupLimit]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7304
  def group_limit; end

  # The count limit on rows or columns in the pivot group.
  # Corresponds to the JSON property `groupLimit`
  #
  # @return [Google::Apis::SheetsV4::PivotGroupLimit]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7304
  def group_limit=(_arg0); end

  # An optional setting on a PivotGroup that defines buckets for the values in the
  # source data column rather than breaking out each individual value. Only one
  # PivotGroup with a group rule may be added for each column in the source data,
  # though on any given column you may add both a PivotGroup that has a rule and a
  # PivotGroup that does not.
  # Corresponds to the JSON property `groupRule`
  #
  # @return [Google::Apis::SheetsV4::PivotGroupRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7313
  def group_rule; end

  # An optional setting on a PivotGroup that defines buckets for the values in the
  # source data column rather than breaking out each individual value. Only one
  # PivotGroup with a group rule may be added for each column in the source data,
  # though on any given column you may add both a PivotGroup that has a rule and a
  # PivotGroup that does not.
  # Corresponds to the JSON property `groupRule`
  #
  # @return [Google::Apis::SheetsV4::PivotGroupRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7313
  def group_rule=(_arg0); end

  # The labels to use for the row/column groups which can be customized. For
  # example, in the following pivot table, the row label is `Region` (which could
  # be renamed to `State`) and the column label is `Product` (which could be
  # renamed `Item`). Pivot tables created before December 2017 do not have header
  # labels. If you'd like to add header labels to an existing pivot table, please
  # delete the existing pivot table and then create a new pivot table with same
  # parameters. +--------------+---------+-------+ | SUM of Units | Product | | |
  # Region | Pen | Paper | +--------------+---------+-------+ | New York | 345 |
  # 98 | | Oregon | 234 | 123 | | Tennessee | 531 | 415 | +--------------+---------
  # +-------+ | Grand Total | 1110 | 636 | +--------------+---------+-------+
  # Corresponds to the JSON property `label`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7327
  def label; end

  # The labels to use for the row/column groups which can be customized. For
  # example, in the following pivot table, the row label is `Region` (which could
  # be renamed to `State`) and the column label is `Product` (which could be
  # renamed `Item`). Pivot tables created before December 2017 do not have header
  # labels. If you'd like to add header labels to an existing pivot table, please
  # delete the existing pivot table and then create a new pivot table with same
  # parameters. +--------------+---------+-------+ | SUM of Units | Product | | |
  # Region | Pen | Paper | +--------------+---------+-------+ | New York | 345 |
  # 98 | | Oregon | 234 | 123 | | Tennessee | 531 | 415 | +--------------+---------
  # +-------+ | Grand Total | 1110 | 636 | +--------------+---------+-------+
  # Corresponds to the JSON property `label`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7327
  def label=(_arg0); end

  # True if the headings in this pivot group should be repeated. This is only
  # valid for row groupings and is ignored by columns. By default, we minimize
  # repetition of headings by not showing higher level headings where they are the
  # same. For example, even though the third row below corresponds to "Q1 Mar", "
  # Q1" is not shown because it is redundant with previous rows. Setting
  # repeat_headings to true would cause "Q1" to be repeated for "Feb" and "Mar". +-
  # -------------+ | Q1 | Jan | | | Feb | | | Mar | +--------+-----+ | Q1 Total | +
  # --------------+
  # Corresponds to the JSON property `repeatHeadings`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7339
  def repeat_headings; end

  # True if the headings in this pivot group should be repeated. This is only
  # valid for row groupings and is ignored by columns. By default, we minimize
  # repetition of headings by not showing higher level headings where they are the
  # same. For example, even though the third row below corresponds to "Q1 Mar", "
  # Q1" is not shown because it is redundant with previous rows. Setting
  # repeat_headings to true would cause "Q1" to be repeated for "Feb" and "Mar". +-
  # -------------+ | Q1 | Jan | | | Feb | | | Mar | +--------+-----+ | Q1 Total | +
  # --------------+
  # Corresponds to the JSON property `repeatHeadings`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7339
  def repeat_headings=(_arg0); end

  # True if the headings in this pivot group should be repeated. This is only
  # valid for row groupings and is ignored by columns. By default, we minimize
  # repetition of headings by not showing higher level headings where they are the
  # same. For example, even though the third row below corresponds to "Q1 Mar", "
  # Q1" is not shown because it is redundant with previous rows. Setting
  # repeat_headings to true would cause "Q1" to be repeated for "Feb" and "Mar". +-
  # -------------+ | Q1 | Jan | | | Feb | | | Mar | +--------+-----+ | Q1 Total | +
  # --------------+
  # Corresponds to the JSON property `repeatHeadings`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7339
  def repeat_headings?; end

  # True if the pivot table should include the totals for this grouping.
  # Corresponds to the JSON property `showTotals`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7345
  def show_totals; end

  # True if the pivot table should include the totals for this grouping.
  # Corresponds to the JSON property `showTotals`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7345
  def show_totals=(_arg0); end

  # True if the pivot table should include the totals for this grouping.
  # Corresponds to the JSON property `showTotals`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7345
  def show_totals?; end

  # The order the values in this group should be sorted.
  # Corresponds to the JSON property `sortOrder`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7351
  def sort_order; end

  # The order the values in this group should be sorted.
  # Corresponds to the JSON property `sortOrder`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7351
  def sort_order=(_arg0); end

  # The column offset of the source range that this grouping is based on. For
  # example, if the source was `C10:E15`, a `sourceColumnOffset` of `0` means this
  # group refers to column `C`, whereas the offset `1` would refer to column `D`.
  # Corresponds to the JSON property `sourceColumnOffset`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7358
  def source_column_offset; end

  # The column offset of the source range that this grouping is based on. For
  # example, if the source was `C10:E15`, a `sourceColumnOffset` of `0` means this
  # group refers to column `C`, whereas the offset `1` would refer to column `D`.
  # Corresponds to the JSON property `sourceColumnOffset`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7358
  def source_column_offset=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7375
  def update!(**args); end

  # Information about which values in a pivot group should be used for sorting.
  # Corresponds to the JSON property `valueBucket`
  #
  # @return [Google::Apis::SheetsV4::PivotGroupSortValueBucket]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7363
  def value_bucket; end

  # Information about which values in a pivot group should be used for sorting.
  # Corresponds to the JSON property `valueBucket`
  #
  # @return [Google::Apis::SheetsV4::PivotGroupSortValueBucket]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7363
  def value_bucket=(_arg0); end

  # Metadata about values in the grouping.
  # Corresponds to the JSON property `valueMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::PivotGroupValueMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7368
  def value_metadata; end

  # Metadata about values in the grouping.
  # Corresponds to the JSON property `valueMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::PivotGroupValueMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7368
  def value_metadata=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1082
class Google::Apis::SheetsV4::PivotGroup::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The count limit on rows or columns in the pivot group.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7390
class Google::Apis::SheetsV4::PivotGroupLimit
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PivotGroupLimit] a new instance of PivotGroupLimit
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7408
  def initialize(**args); end

  # The order in which the group limit is applied to the pivot table. Pivot group
  # limits are applied from lower to higher order number. Order numbers are
  # normalized to consecutive integers from 0. For write request, to fully
  # customize the applying orders, all pivot group limits should have this field
  # set with an unique number. Otherwise, the order is determined by the index in
  # the PivotTable.rows list and then the PivotTable.columns list.
  # Corresponds to the JSON property `applyOrder`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7401
  def apply_order; end

  # The order in which the group limit is applied to the pivot table. Pivot group
  # limits are applied from lower to higher order number. Order numbers are
  # normalized to consecutive integers from 0. For write request, to fully
  # customize the applying orders, all pivot group limits should have this field
  # set with an unique number. Otherwise, the order is determined by the index in
  # the PivotTable.rows list and then the PivotTable.columns list.
  # Corresponds to the JSON property `applyOrder`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7401
  def apply_order=(_arg0); end

  # The count limit.
  # Corresponds to the JSON property `countLimit`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7406
  def count_limit; end

  # The count limit.
  # Corresponds to the JSON property `countLimit`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7406
  def count_limit=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7413
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1088
class Google::Apis::SheetsV4::PivotGroupLimit::Representation < ::Google::Apis::Core::JsonRepresentation; end

# An optional setting on a PivotGroup that defines buckets for the values in the
# source data column rather than breaking out each individual value. Only one
# PivotGroup with a group rule may be added for each column in the source data,
# though on any given column you may add both a PivotGroup that has a rule and a
# PivotGroup that does not.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7424
class Google::Apis::SheetsV4::PivotGroupRule
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PivotGroupRule] a new instance of PivotGroupRule
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7478
  def initialize(**args); end

  # Allows you to organize the date-time values in a source data column into
  # buckets based on selected parts of their date or time values. For example,
  # consider a pivot table showing sales transactions by date: +----------+--------
  # ------+ | Date | SUM of Sales | +----------+--------------+ | 1/1/2017 | $621.
  # 14 | | 2/3/2017 | $708.84 | | 5/8/2017 | $326.84 | ... +----------+------------
  # --+ Applying a date-time group rule with a DateTimeRuleType of YEAR_MONTH
  # results in the following pivot table. +--------------+--------------+ |
  # Grouped Date | SUM of Sales | +--------------+--------------+ | 2017-Jan | $53,
  # 731.78 | | 2017-Feb | $83,475.32 | | 2017-Mar | $94,385.05 | ... +-------------
  # -+--------------+
  # Corresponds to the JSON property `dateTimeRule`
  #
  # @return [Google::Apis::SheetsV4::DateTimeRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7439
  def date_time_rule; end

  # Allows you to organize the date-time values in a source data column into
  # buckets based on selected parts of their date or time values. For example,
  # consider a pivot table showing sales transactions by date: +----------+--------
  # ------+ | Date | SUM of Sales | +----------+--------------+ | 1/1/2017 | $621.
  # 14 | | 2/3/2017 | $708.84 | | 5/8/2017 | $326.84 | ... +----------+------------
  # --+ Applying a date-time group rule with a DateTimeRuleType of YEAR_MONTH
  # results in the following pivot table. +--------------+--------------+ |
  # Grouped Date | SUM of Sales | +--------------+--------------+ | 2017-Jan | $53,
  # 731.78 | | 2017-Feb | $83,475.32 | | 2017-Mar | $94,385.05 | ... +-------------
  # -+--------------+
  # Corresponds to the JSON property `dateTimeRule`
  #
  # @return [Google::Apis::SheetsV4::DateTimeRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7439
  def date_time_rule=(_arg0); end

  # Allows you to organize the numeric values in a source data column into buckets
  # of a constant size. All values from HistogramRule.start to HistogramRule.end
  # are placed into groups of size HistogramRule.interval. In addition, all values
  # below HistogramRule.start are placed in one group, and all values above
  # HistogramRule.end are placed in another. Only HistogramRule.interval is
  # required, though if HistogramRule.start and HistogramRule.end are both
  # provided, HistogramRule.start must be less than HistogramRule.end. For example,
  # a pivot table showing average purchase amount by age that has 50+ rows: +-----
  # +-------------------+ | Age | AVERAGE of Amount | +-----+-------------------+ |
  # 16 | $27.13 | | 17 | $5.24 | | 18 | $20.15 | ... +-----+-------------------+
  # could be turned into a pivot table that looks like the one below by applying a
  # histogram group rule with a HistogramRule.start of 25, an HistogramRule.
  # interval of 20, and an HistogramRule.end of 65. +-------------+----------------
  # ---+ | Grouped Age | AVERAGE of Amount | +-------------+-------------------+ |
  # < 25 | $19.34 | | 25-45 | $31.43 | | 45-65 | $35.87 | | > 65 | $27.55 | +------
  # -------+-------------------+ | Grand Total | $29.12 | +-------------+----------
  # ---------+
  # Corresponds to the JSON property `histogramRule`
  #
  # @return [Google::Apis::SheetsV4::HistogramRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7460
  def histogram_rule; end

  # Allows you to organize the numeric values in a source data column into buckets
  # of a constant size. All values from HistogramRule.start to HistogramRule.end
  # are placed into groups of size HistogramRule.interval. In addition, all values
  # below HistogramRule.start are placed in one group, and all values above
  # HistogramRule.end are placed in another. Only HistogramRule.interval is
  # required, though if HistogramRule.start and HistogramRule.end are both
  # provided, HistogramRule.start must be less than HistogramRule.end. For example,
  # a pivot table showing average purchase amount by age that has 50+ rows: +-----
  # +-------------------+ | Age | AVERAGE of Amount | +-----+-------------------+ |
  # 16 | $27.13 | | 17 | $5.24 | | 18 | $20.15 | ... +-----+-------------------+
  # could be turned into a pivot table that looks like the one below by applying a
  # histogram group rule with a HistogramRule.start of 25, an HistogramRule.
  # interval of 20, and an HistogramRule.end of 65. +-------------+----------------
  # ---+ | Grouped Age | AVERAGE of Amount | +-------------+-------------------+ |
  # < 25 | $19.34 | | 25-45 | $31.43 | | 45-65 | $35.87 | | > 65 | $27.55 | +------
  # -------+-------------------+ | Grand Total | $29.12 | +-------------+----------
  # ---------+
  # Corresponds to the JSON property `histogramRule`
  #
  # @return [Google::Apis::SheetsV4::HistogramRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7460
  def histogram_rule=(_arg0); end

  # Allows you to manually organize the values in a source data column into
  # buckets with names of your choosing. For example, a pivot table that
  # aggregates population by state: +-------+-------------------+ | State | SUM of
  # Population | +-------+-------------------+ | AK | 0.7 | | AL | 4.8 | | AR | 2.
  # 9 | ... +-------+-------------------+ could be turned into a pivot table that
  # aggregates population by time zone by providing a list of groups (for example,
  # groupName = 'Central', items = ['AL', 'AR', 'IA', ...]) to a manual group rule.
  # Note that a similar effect could be achieved by adding a time zone column to
  # the source data and adjusting the pivot table. +-----------+-------------------
  # + | Time Zone | SUM of Population | +-----------+-------------------+ |
  # Central | 106.3 | | Eastern | 151.9 | | Mountain | 17.4 | ... +-----------+----
  # ---------------+
  # Corresponds to the JSON property `manualRule`
  #
  # @return [Google::Apis::SheetsV4::ManualRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7476
  def manual_rule; end

  # Allows you to manually organize the values in a source data column into
  # buckets with names of your choosing. For example, a pivot table that
  # aggregates population by state: +-------+-------------------+ | State | SUM of
  # Population | +-------+-------------------+ | AK | 0.7 | | AL | 4.8 | | AR | 2.
  # 9 | ... +-------+-------------------+ could be turned into a pivot table that
  # aggregates population by time zone by providing a list of groups (for example,
  # groupName = 'Central', items = ['AL', 'AR', 'IA', ...]) to a manual group rule.
  # Note that a similar effect could be achieved by adding a time zone column to
  # the source data and adjusting the pivot table. +-----------+-------------------
  # + | Time Zone | SUM of Population | +-----------+-------------------+ |
  # Central | 106.3 | | Eastern | 151.9 | | Mountain | 17.4 | ... +-----------+----
  # ---------------+
  # Corresponds to the JSON property `manualRule`
  #
  # @return [Google::Apis::SheetsV4::ManualRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7476
  def manual_rule=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7483
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1094
class Google::Apis::SheetsV4::PivotGroupRule::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Information about which values in a pivot group should be used for sorting.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7491
class Google::Apis::SheetsV4::PivotGroupSortValueBucket
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PivotGroupSortValueBucket] a new instance of PivotGroupSortValueBucket
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7511
  def initialize(**args); end

  # Determines the bucket from which values are chosen to sort. For example, in a
  # pivot table with one row group & two column groups, the row group can list up
  # to two values. The first value corresponds to a value within the first column
  # group, and the second value corresponds to a value in the second column group.
  # If no values are listed, this would indicate that the row should be sorted
  # according to the "Grand Total" over the column groups. If a single value is
  # listed, this would correspond to using the "Total" of that bucket.
  # Corresponds to the JSON property `buckets`
  #
  # @return [Array<Google::Apis::SheetsV4::ExtendedValue>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7503
  def buckets; end

  # Determines the bucket from which values are chosen to sort. For example, in a
  # pivot table with one row group & two column groups, the row group can list up
  # to two values. The first value corresponds to a value within the first column
  # group, and the second value corresponds to a value in the second column group.
  # If no values are listed, this would indicate that the row should be sorted
  # according to the "Grand Total" over the column groups. If a single value is
  # listed, this would correspond to using the "Total" of that bucket.
  # Corresponds to the JSON property `buckets`
  #
  # @return [Array<Google::Apis::SheetsV4::ExtendedValue>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7503
  def buckets=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7516
  def update!(**args); end

  # The offset in the PivotTable.values list which the values in this grouping
  # should be sorted by.
  # Corresponds to the JSON property `valuesIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7509
  def values_index; end

  # The offset in the PivotTable.values list which the values in this grouping
  # should be sorted by.
  # Corresponds to the JSON property `valuesIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7509
  def values_index=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1100
class Google::Apis::SheetsV4::PivotGroupSortValueBucket::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Metadata about a value in a pivot grouping.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7523
class Google::Apis::SheetsV4::PivotGroupValueMetadata
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PivotGroupValueMetadata] a new instance of PivotGroupValueMetadata
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7537
  def initialize(**args); end

  # True if the data corresponding to the value is collapsed.
  # Corresponds to the JSON property `collapsed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7529
  def collapsed; end

  # True if the data corresponding to the value is collapsed.
  # Corresponds to the JSON property `collapsed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7529
  def collapsed=(_arg0); end

  # True if the data corresponding to the value is collapsed.
  # Corresponds to the JSON property `collapsed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7529
  def collapsed?; end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7542
  def update!(**args); end

  # The kinds of value that a cell in a spreadsheet can have.
  # Corresponds to the JSON property `value`
  #
  # @return [Google::Apis::SheetsV4::ExtendedValue]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7535
  def value; end

  # The kinds of value that a cell in a spreadsheet can have.
  # Corresponds to the JSON property `value`
  #
  # @return [Google::Apis::SheetsV4::ExtendedValue]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7535
  def value=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1106
class Google::Apis::SheetsV4::PivotGroupValueMetadata::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A pivot table.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7549
class Google::Apis::SheetsV4::PivotTable
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PivotTable] a new instance of PivotTable
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7625
  def initialize(**args); end

  # Each column grouping in the pivot table.
  # Corresponds to the JSON property `columns`
  #
  # @return [Array<Google::Apis::SheetsV4::PivotGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7555
  def columns; end

  # Each column grouping in the pivot table.
  # Corresponds to the JSON property `columns`
  #
  # @return [Array<Google::Apis::SheetsV4::PivotGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7555
  def columns=(_arg0); end

  # An optional mapping of filters per source column offset. The filters are
  # applied before aggregating data into the pivot table. The map's key is the
  # column offset of the source range that you want to filter, and the value is
  # the criteria for that column. For example, if the source was `C10:E15`, a key
  # of `0` will have the filter for column `C`, whereas the key `1` is for column `
  # D`. This field is deprecated in favor of filter_specs.
  # Corresponds to the JSON property `criteria`
  #
  # @return [Hash<String,Google::Apis::SheetsV4::PivotFilterCriteria>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7565
  def criteria; end

  # An optional mapping of filters per source column offset. The filters are
  # applied before aggregating data into the pivot table. The map's key is the
  # column offset of the source range that you want to filter, and the value is
  # the criteria for that column. For example, if the source was `C10:E15`, a key
  # of `0` will have the filter for column `C`, whereas the key `1` is for column `
  # D`. This field is deprecated in favor of filter_specs.
  # Corresponds to the JSON property `criteria`
  #
  # @return [Hash<String,Google::Apis::SheetsV4::PivotFilterCriteria>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7565
  def criteria=(_arg0); end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7578
  def data_execution_status; end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7578
  def data_execution_status=(_arg0); end

  # The ID of the data source the pivot table is reading data from.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7583
  def data_source_id; end

  # The ID of the data source the pivot table is reading data from.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7583
  def data_source_id=(_arg0); end

  # The filters applied to the source columns before aggregating data for the
  # pivot table. Both criteria and filter_specs are populated in responses. If
  # both fields are specified in an update request, this field takes precedence.
  # Corresponds to the JSON property `filterSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::PivotFilterSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7590
  def filter_specs; end

  # The filters applied to the source columns before aggregating data for the
  # pivot table. Both criteria and filter_specs are populated in responses. If
  # both fields are specified in an update request, this field takes precedence.
  # Corresponds to the JSON property `filterSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::PivotFilterSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7590
  def filter_specs=(_arg0); end

  # Each row grouping in the pivot table.
  # Corresponds to the JSON property `rows`
  #
  # @return [Array<Google::Apis::SheetsV4::PivotGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7595
  def rows; end

  # Each row grouping in the pivot table.
  # Corresponds to the JSON property `rows`
  #
  # @return [Array<Google::Apis::SheetsV4::PivotGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7595
  def rows=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7612
  def source; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7612
  def source=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7630
  def update!(**args); end

  # Whether values should be listed horizontally (as columns) or vertically (as
  # rows).
  # Corresponds to the JSON property `valueLayout`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7618
  def value_layout; end

  # Whether values should be listed horizontally (as columns) or vertically (as
  # rows).
  # Corresponds to the JSON property `valueLayout`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7618
  def value_layout=(_arg0); end

  # A list of values to include in the pivot table.
  # Corresponds to the JSON property `values`
  #
  # @return [Array<Google::Apis::SheetsV4::PivotValue>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7623
  def values; end

  # A list of values to include in the pivot table.
  # Corresponds to the JSON property `values`
  #
  # @return [Array<Google::Apis::SheetsV4::PivotValue>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7623
  def values=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1112
class Google::Apis::SheetsV4::PivotTable::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The definition of how a value in a pivot table should be calculated.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7644
class Google::Apis::SheetsV4::PivotValue
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PivotValue] a new instance of PivotValue
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7686
  def initialize(**args); end

  # If specified, indicates that pivot values should be displayed as the result of
  # a calculation with another pivot value. For example, if
  # calculated_display_type is specified as PERCENT_OF_GRAND_TOTAL, all the pivot
  # values are displayed as the percentage of the grand total. In the Sheets
  # editor, this is referred to as "Show As" in the value section of a pivot table.
  # Corresponds to the JSON property `calculatedDisplayType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7654
  def calculated_display_type; end

  # If specified, indicates that pivot values should be displayed as the result of
  # a calculation with another pivot value. For example, if
  # calculated_display_type is specified as PERCENT_OF_GRAND_TOTAL, all the pivot
  # values are displayed as the percentage of the grand total. In the Sheets
  # editor, this is referred to as "Show As" in the value section of a pivot table.
  # Corresponds to the JSON property `calculatedDisplayType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7654
  def calculated_display_type=(_arg0); end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7659
  def data_source_column_reference; end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7659
  def data_source_column_reference=(_arg0); end

  # A custom formula to calculate the value. The formula must start with an `=`
  # character.
  # Corresponds to the JSON property `formula`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7665
  def formula; end

  # A custom formula to calculate the value. The formula must start with an `=`
  # character.
  # Corresponds to the JSON property `formula`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7665
  def formula=(_arg0); end

  # A name to use for the value.
  # Corresponds to the JSON property `name`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7670
  def name; end

  # A name to use for the value.
  # Corresponds to the JSON property `name`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7670
  def name=(_arg0); end

  # The column offset of the source range that this value reads from. For example,
  # if the source was `C10:E15`, a `sourceColumnOffset` of `0` means this value
  # refers to column `C`, whereas the offset `1` would refer to column `D`.
  # Corresponds to the JSON property `sourceColumnOffset`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7677
  def source_column_offset; end

  # The column offset of the source range that this value reads from. For example,
  # if the source was `C10:E15`, a `sourceColumnOffset` of `0` means this value
  # refers to column `C`, whereas the offset `1` would refer to column `D`.
  # Corresponds to the JSON property `sourceColumnOffset`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7677
  def source_column_offset=(_arg0); end

  # A function to summarize the value. If formula is set, the only supported
  # values are SUM and CUSTOM. If sourceColumnOffset is set, then `CUSTOM` is not
  # supported.
  # Corresponds to the JSON property `summarizeFunction`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7684
  def summarize_function; end

  # A function to summarize the value. If formula is set, the only supported
  # values are SUM and CUSTOM. If sourceColumnOffset is set, then `CUSTOM` is not
  # supported.
  # Corresponds to the JSON property `summarizeFunction`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7684
  def summarize_function=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7691
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1118
class Google::Apis::SheetsV4::PivotValue::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The style of a point on the chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7702
class Google::Apis::SheetsV4::PointStyle
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [PointStyle] a new instance of PointStyle
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7715
  def initialize(**args); end

  # The point shape. If empty or unspecified, a default shape is used.
  # Corresponds to the JSON property `shape`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7708
  def shape; end

  # The point shape. If empty or unspecified, a default shape is used.
  # Corresponds to the JSON property `shape`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7708
  def shape=(_arg0); end

  # The point size. If empty, a default size is used.
  # Corresponds to the JSON property `size`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7713
  def size; end

  # The point size. If empty, a default size is used.
  # Corresponds to the JSON property `size`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7713
  def size=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7720
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1124
class Google::Apis::SheetsV4::PointStyle::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A protected range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7727
class Google::Apis::SheetsV4::ProtectedRange
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ProtectedRange] a new instance of ProtectedRange
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7793
  def initialize(**args); end

  # The description of this protected range.
  # Corresponds to the JSON property `description`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7733
  def description; end

  # The description of this protected range.
  # Corresponds to the JSON property `description`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7733
  def description=(_arg0); end

  # The editors of a protected range.
  # Corresponds to the JSON property `editors`
  #
  # @return [Google::Apis::SheetsV4::Editors]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7738
  def editors; end

  # The editors of a protected range.
  # Corresponds to the JSON property `editors`
  #
  # @return [Google::Apis::SheetsV4::Editors]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7738
  def editors=(_arg0); end

  # The named range this protected range is backed by, if any. When writing, only
  # one of range or named_range_id may be set.
  # Corresponds to the JSON property `namedRangeId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7744
  def named_range_id; end

  # The named range this protected range is backed by, if any. When writing, only
  # one of range or named_range_id may be set.
  # Corresponds to the JSON property `namedRangeId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7744
  def named_range_id=(_arg0); end

  # The ID of the protected range. This field is read-only.
  # Corresponds to the JSON property `protectedRangeId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7749
  def protected_range_id; end

  # The ID of the protected range. This field is read-only.
  # Corresponds to the JSON property `protectedRangeId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7749
  def protected_range_id=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7766
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7766
  def range=(_arg0); end

  # True if the user who requested this protected range can edit the protected
  # area. This field is read-only.
  # Corresponds to the JSON property `requestingUserCanEdit`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7772
  def requesting_user_can_edit; end

  # True if the user who requested this protected range can edit the protected
  # area. This field is read-only.
  # Corresponds to the JSON property `requestingUserCanEdit`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7772
  def requesting_user_can_edit=(_arg0); end

  # True if the user who requested this protected range can edit the protected
  # area. This field is read-only.
  # Corresponds to the JSON property `requestingUserCanEdit`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7772
  def requesting_user_can_edit?; end

  # The list of unprotected ranges within a protected sheet. Unprotected ranges
  # are only supported on protected sheets.
  # Corresponds to the JSON property `unprotectedRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::GridRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7779
  def unprotected_ranges; end

  # The list of unprotected ranges within a protected sheet. Unprotected ranges
  # are only supported on protected sheets.
  # Corresponds to the JSON property `unprotectedRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::GridRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7779
  def unprotected_ranges=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7798
  def update!(**args); end

  # True if this protected range will show a warning when editing. Warning-based
  # protection means that every user can edit data in the protected range, except
  # editing will prompt a warning asking the user to confirm the edit. When
  # writing: if this field is true, then editors are ignored. Additionally, if
  # this field is changed from true to false and the `editors` field is not set (
  # nor included in the field mask), then the editors will be set to all the
  # editors in the document.
  # Corresponds to the JSON property `warningOnly`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7790
  def warning_only; end

  # True if this protected range will show a warning when editing. Warning-based
  # protection means that every user can edit data in the protected range, except
  # editing will prompt a warning asking the user to confirm the edit. When
  # writing: if this field is true, then editors are ignored. Additionally, if
  # this field is changed from true to false and the `editors` field is not set (
  # nor included in the field mask), then the editors will be set to all the
  # editors in the document.
  # Corresponds to the JSON property `warningOnly`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7790
  def warning_only=(_arg0); end

  # True if this protected range will show a warning when editing. Warning-based
  # protection means that every user can edit data in the protected range, except
  # editing will prompt a warning asking the user to confirm the edit. When
  # writing: if this field is true, then editors are ignored. Additionally, if
  # this field is changed from true to false and the `editors` field is not set (
  # nor included in the field mask), then the editors will be set to all the
  # editors in the document.
  # Corresponds to the JSON property `warningOnly`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7790
  def warning_only?; end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1130
class Google::Apis::SheetsV4::ProtectedRange::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Revision of the discovery document this client was generated from
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/gem_version.rb#25
Google::Apis::SheetsV4::REVISION = T.let(T.unsafe(nil), String)

# Randomizes the order of the rows in a range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7811
class Google::Apis::SheetsV4::RandomizeRangeRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [RandomizeRangeRequest] a new instance of RandomizeRangeRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7831
  def initialize(**args); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7829
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7829
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7836
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1136
class Google::Apis::SheetsV4::RandomizeRangeRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The status of a refresh cancellation. You can send a cancel request to
# explicitly cancel one or multiple data source object refreshes.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7843
class Google::Apis::SheetsV4::RefreshCancellationStatus
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [RefreshCancellationStatus] a new instance of RefreshCancellationStatus
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7856
  def initialize(**args); end

  # The error code.
  # Corresponds to the JSON property `errorCode`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7849
  def error_code; end

  # The error code.
  # Corresponds to the JSON property `errorCode`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7849
  def error_code=(_arg0); end

  # The state of a call to cancel a refresh in Sheets.
  # Corresponds to the JSON property `state`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7854
  def state; end

  # The state of a call to cancel a refresh in Sheets.
  # Corresponds to the JSON property `state`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7854
  def state=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7861
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1142
class Google::Apis::SheetsV4::RefreshCancellationStatus::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The execution status of refreshing one data source object.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7868
class Google::Apis::SheetsV4::RefreshDataSourceObjectExecutionStatus
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [RefreshDataSourceObjectExecutionStatus] a new instance of RefreshDataSourceObjectExecutionStatus
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7889
  def initialize(**args); end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7882
  def data_execution_status; end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7882
  def data_execution_status=(_arg0); end

  # Reference to a data source object.
  # Corresponds to the JSON property `reference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceObjectReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7887
  def reference; end

  # Reference to a data source object.
  # Corresponds to the JSON property `reference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceObjectReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7887
  def reference=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7894
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1148
class Google::Apis::SheetsV4::RefreshDataSourceObjectExecutionStatus::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Refreshes one or multiple data source objects in the spreadsheet by the
# specified references. The request requires an additional `bigquery.readonly`
# OAuth scope if you are refreshing a BigQuery data source. If there are
# multiple refresh requests referencing the same data source objects in one
# batch, only the last refresh request is processed, and all those requests will
# have the same response accordingly.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7906
class Google::Apis::SheetsV4::RefreshDataSourceRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [RefreshDataSourceRequest] a new instance of RefreshDataSourceRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7934
  def initialize(**args); end

  # Reference to a DataSource. If specified, refreshes all associated data source
  # objects for the data source.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7913
  def data_source_id; end

  # Reference to a DataSource. If specified, refreshes all associated data source
  # objects for the data source.
  # Corresponds to the JSON property `dataSourceId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7913
  def data_source_id=(_arg0); end

  # Refreshes the data source objects regardless of the current state. If not set
  # and a referenced data source object was in error state, the refresh will fail
  # immediately.
  # Corresponds to the JSON property `force`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7920
  def force; end

  # Refreshes the data source objects regardless of the current state. If not set
  # and a referenced data source object was in error state, the refresh will fail
  # immediately.
  # Corresponds to the JSON property `force`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7920
  def force=(_arg0); end

  # Refreshes the data source objects regardless of the current state. If not set
  # and a referenced data source object was in error state, the refresh will fail
  # immediately.
  # Corresponds to the JSON property `force`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7920
  def force?; end

  # Refreshes all existing data source objects in the spreadsheet.
  # Corresponds to the JSON property `isAll`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7926
  def is_all; end

  # Refreshes all existing data source objects in the spreadsheet.
  # Corresponds to the JSON property `isAll`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7926
  def is_all=(_arg0); end

  # Refreshes all existing data source objects in the spreadsheet.
  # Corresponds to the JSON property `isAll`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7926
  def is_all?; end

  # A list of references to data source objects.
  # Corresponds to the JSON property `references`
  #
  # @return [Google::Apis::SheetsV4::DataSourceObjectReferences]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7932
  def references; end

  # A list of references to data source objects.
  # Corresponds to the JSON property `references`
  #
  # @return [Google::Apis::SheetsV4::DataSourceObjectReferences]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7932
  def references=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7939
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1154
class Google::Apis::SheetsV4::RefreshDataSourceRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response from refreshing one or multiple data source objects.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7948
class Google::Apis::SheetsV4::RefreshDataSourceResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [RefreshDataSourceResponse] a new instance of RefreshDataSourceResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7958
  def initialize(**args); end

  # All the refresh status for the data source object references specified in the
  # request. If is_all is specified, the field contains only those in failure
  # status.
  # Corresponds to the JSON property `statuses`
  #
  # @return [Array<Google::Apis::SheetsV4::RefreshDataSourceObjectExecutionStatus>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7956
  def statuses; end

  # All the refresh status for the data source object references specified in the
  # request. If is_all is specified, the field contains only those in failure
  # status.
  # Corresponds to the JSON property `statuses`
  #
  # @return [Array<Google::Apis::SheetsV4::RefreshDataSourceObjectExecutionStatus>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7956
  def statuses=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7963
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1160
class Google::Apis::SheetsV4::RefreshDataSourceResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates all cells in the range to the values in the given Cell object. Only
# the fields listed in the fields field are updated; others are unchanged. If
# writing a cell with a formula, the formula's ranges will automatically
# increment for each field in the range. For example, if writing a cell with
# formula `=A1` into range B2:C4, B2 would be `=A1`, B3 would be `=A2`, B4 would
# be `=A3`, C2 would be `=B1`, C3 would be `=B2`, C4 would be `=B3`. To keep the
# formula's ranges static, use the `$` indicator. For example, use the formula `=
# $A$1` to prevent both the row and the column from incrementing.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7976
class Google::Apis::SheetsV4::RepeatCellRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [RepeatCellRequest] a new instance of RepeatCellRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8008
  def initialize(**args); end

  # Data about a specific cell.
  # Corresponds to the JSON property `cell`
  #
  # @return [Google::Apis::SheetsV4::CellData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7982
  def cell; end

  # Data about a specific cell.
  # Corresponds to the JSON property `cell`
  #
  # @return [Google::Apis::SheetsV4::CellData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7982
  def cell=(_arg0); end

  # The fields that should be updated. At least one field must be specified. The
  # root `cell` is implied and should not be specified. A single `"*"` can be used
  # as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7989
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `cell` is implied and should not be specified. A single `"*"` can be used
  # as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#7989
  def fields=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8006
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8006
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8013
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1166
class Google::Apis::SheetsV4::RepeatCellRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A single kind of update to apply to a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8021
class Google::Apis::SheetsV4::Request
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Request] a new instance of Request
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8425
  def initialize(**args); end

  # Adds a new banded range to the spreadsheet.
  # Corresponds to the JSON property `addBanding`
  #
  # @return [Google::Apis::SheetsV4::AddBandingRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8027
  def add_banding; end

  # Adds a new banded range to the spreadsheet.
  # Corresponds to the JSON property `addBanding`
  #
  # @return [Google::Apis::SheetsV4::AddBandingRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8027
  def add_banding=(_arg0); end

  # Adds a chart to a sheet in the spreadsheet.
  # Corresponds to the JSON property `addChart`
  #
  # @return [Google::Apis::SheetsV4::AddChartRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8032
  def add_chart; end

  # Adds a chart to a sheet in the spreadsheet.
  # Corresponds to the JSON property `addChart`
  #
  # @return [Google::Apis::SheetsV4::AddChartRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8032
  def add_chart=(_arg0); end

  # Adds a new conditional format rule at the given index. All subsequent rules'
  # indexes are incremented.
  # Corresponds to the JSON property `addConditionalFormatRule`
  #
  # @return [Google::Apis::SheetsV4::AddConditionalFormatRuleRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8038
  def add_conditional_format_rule; end

  # Adds a new conditional format rule at the given index. All subsequent rules'
  # indexes are incremented.
  # Corresponds to the JSON property `addConditionalFormatRule`
  #
  # @return [Google::Apis::SheetsV4::AddConditionalFormatRuleRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8038
  def add_conditional_format_rule=(_arg0); end

  # Adds a data source. After the data source is added successfully, an associated
  # DATA_SOURCE sheet is created and an execution is triggered to refresh the
  # sheet to read data from the data source. The request requires an additional `
  # bigquery.readonly` OAuth scope if you are adding a BigQuery data source.
  # Corresponds to the JSON property `addDataSource`
  #
  # @return [Google::Apis::SheetsV4::AddDataSourceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8046
  def add_data_source; end

  # Adds a data source. After the data source is added successfully, an associated
  # DATA_SOURCE sheet is created and an execution is triggered to refresh the
  # sheet to read data from the data source. The request requires an additional `
  # bigquery.readonly` OAuth scope if you are adding a BigQuery data source.
  # Corresponds to the JSON property `addDataSource`
  #
  # @return [Google::Apis::SheetsV4::AddDataSourceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8046
  def add_data_source=(_arg0); end

  # Creates a group over the specified range. If the requested range is a superset
  # of the range of an existing group G, then the depth of G is incremented and
  # this new group G' has the depth of that group. For example, a group [C:D,
  # depth 1] + [B:E] results in groups [B:E, depth 1] and [C:D, depth 2]. If the
  # requested range is a subset of the range of an existing group G, then the
  # depth of the new group G' becomes one greater than the depth of G. For example,
  # a group [B:E, depth 1] + [C:D] results in groups [B:E, depth 1] and [C:D,
  # depth 2]. If the requested range starts before and ends within, or starts
  # within and ends after, the range of an existing group G, then the range of the
  # existing group G becomes the union of the ranges, and the new group G' has
  # depth one greater than the depth of G and range as the intersection of the
  # ranges. For example, a group [B:D, depth 1] + [C:E] results in groups [B:E,
  # depth 1] and [C:D, depth 2].
  # Corresponds to the JSON property `addDimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::AddDimensionGroupRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8063
  def add_dimension_group; end

  # Creates a group over the specified range. If the requested range is a superset
  # of the range of an existing group G, then the depth of G is incremented and
  # this new group G' has the depth of that group. For example, a group [C:D,
  # depth 1] + [B:E] results in groups [B:E, depth 1] and [C:D, depth 2]. If the
  # requested range is a subset of the range of an existing group G, then the
  # depth of the new group G' becomes one greater than the depth of G. For example,
  # a group [B:E, depth 1] + [C:D] results in groups [B:E, depth 1] and [C:D,
  # depth 2]. If the requested range starts before and ends within, or starts
  # within and ends after, the range of an existing group G, then the range of the
  # existing group G becomes the union of the ranges, and the new group G' has
  # depth one greater than the depth of G and range as the intersection of the
  # ranges. For example, a group [B:D, depth 1] + [C:E] results in groups [B:E,
  # depth 1] and [C:D, depth 2].
  # Corresponds to the JSON property `addDimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::AddDimensionGroupRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8063
  def add_dimension_group=(_arg0); end

  # Adds a filter view.
  # Corresponds to the JSON property `addFilterView`
  #
  # @return [Google::Apis::SheetsV4::AddFilterViewRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8068
  def add_filter_view; end

  # Adds a filter view.
  # Corresponds to the JSON property `addFilterView`
  #
  # @return [Google::Apis::SheetsV4::AddFilterViewRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8068
  def add_filter_view=(_arg0); end

  # Adds a named range to the spreadsheet.
  # Corresponds to the JSON property `addNamedRange`
  #
  # @return [Google::Apis::SheetsV4::AddNamedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8073
  def add_named_range; end

  # Adds a named range to the spreadsheet.
  # Corresponds to the JSON property `addNamedRange`
  #
  # @return [Google::Apis::SheetsV4::AddNamedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8073
  def add_named_range=(_arg0); end

  # Adds a new protected range.
  # Corresponds to the JSON property `addProtectedRange`
  #
  # @return [Google::Apis::SheetsV4::AddProtectedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8078
  def add_protected_range; end

  # Adds a new protected range.
  # Corresponds to the JSON property `addProtectedRange`
  #
  # @return [Google::Apis::SheetsV4::AddProtectedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8078
  def add_protected_range=(_arg0); end

  # Adds a new sheet. When a sheet is added at a given index, all subsequent
  # sheets' indexes are incremented. To add an object sheet, use AddChartRequest
  # instead and specify EmbeddedObjectPosition.sheetId or EmbeddedObjectPosition.
  # newSheet.
  # Corresponds to the JSON property `addSheet`
  #
  # @return [Google::Apis::SheetsV4::AddSheetRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8086
  def add_sheet; end

  # Adds a new sheet. When a sheet is added at a given index, all subsequent
  # sheets' indexes are incremented. To add an object sheet, use AddChartRequest
  # instead and specify EmbeddedObjectPosition.sheetId or EmbeddedObjectPosition.
  # newSheet.
  # Corresponds to the JSON property `addSheet`
  #
  # @return [Google::Apis::SheetsV4::AddSheetRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8086
  def add_sheet=(_arg0); end

  # Adds a slicer to a sheet in the spreadsheet.
  # Corresponds to the JSON property `addSlicer`
  #
  # @return [Google::Apis::SheetsV4::AddSlicerRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8091
  def add_slicer; end

  # Adds a slicer to a sheet in the spreadsheet.
  # Corresponds to the JSON property `addSlicer`
  #
  # @return [Google::Apis::SheetsV4::AddSlicerRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8091
  def add_slicer=(_arg0); end

  # Adds new cells after the last row with data in a sheet, inserting new rows
  # into the sheet if necessary.
  # Corresponds to the JSON property `appendCells`
  #
  # @return [Google::Apis::SheetsV4::AppendCellsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8097
  def append_cells; end

  # Adds new cells after the last row with data in a sheet, inserting new rows
  # into the sheet if necessary.
  # Corresponds to the JSON property `appendCells`
  #
  # @return [Google::Apis::SheetsV4::AppendCellsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8097
  def append_cells=(_arg0); end

  # Appends rows or columns to the end of a sheet.
  # Corresponds to the JSON property `appendDimension`
  #
  # @return [Google::Apis::SheetsV4::AppendDimensionRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8102
  def append_dimension; end

  # Appends rows or columns to the end of a sheet.
  # Corresponds to the JSON property `appendDimension`
  #
  # @return [Google::Apis::SheetsV4::AppendDimensionRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8102
  def append_dimension=(_arg0); end

  # Fills in more data based on existing data.
  # Corresponds to the JSON property `autoFill`
  #
  # @return [Google::Apis::SheetsV4::AutoFillRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8107
  def auto_fill; end

  # Fills in more data based on existing data.
  # Corresponds to the JSON property `autoFill`
  #
  # @return [Google::Apis::SheetsV4::AutoFillRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8107
  def auto_fill=(_arg0); end

  # Automatically resizes one or more dimensions based on the contents of the
  # cells in that dimension.
  # Corresponds to the JSON property `autoResizeDimensions`
  #
  # @return [Google::Apis::SheetsV4::AutoResizeDimensionsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8113
  def auto_resize_dimensions; end

  # Automatically resizes one or more dimensions based on the contents of the
  # cells in that dimension.
  # Corresponds to the JSON property `autoResizeDimensions`
  #
  # @return [Google::Apis::SheetsV4::AutoResizeDimensionsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8113
  def auto_resize_dimensions=(_arg0); end

  # Cancels one or multiple refreshes of data source objects in the spreadsheet by
  # the specified references. The request requires an additional `bigquery.
  # readonly` OAuth scope if you are cancelling a refresh on a BigQuery data
  # source.
  # Corresponds to the JSON property `cancelDataSourceRefresh`
  #
  # @return [Google::Apis::SheetsV4::CancelDataSourceRefreshRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8121
  def cancel_data_source_refresh; end

  # Cancels one or multiple refreshes of data source objects in the spreadsheet by
  # the specified references. The request requires an additional `bigquery.
  # readonly` OAuth scope if you are cancelling a refresh on a BigQuery data
  # source.
  # Corresponds to the JSON property `cancelDataSourceRefresh`
  #
  # @return [Google::Apis::SheetsV4::CancelDataSourceRefreshRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8121
  def cancel_data_source_refresh=(_arg0); end

  # Clears the basic filter, if any exists on the sheet.
  # Corresponds to the JSON property `clearBasicFilter`
  #
  # @return [Google::Apis::SheetsV4::ClearBasicFilterRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8126
  def clear_basic_filter; end

  # Clears the basic filter, if any exists on the sheet.
  # Corresponds to the JSON property `clearBasicFilter`
  #
  # @return [Google::Apis::SheetsV4::ClearBasicFilterRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8126
  def clear_basic_filter=(_arg0); end

  # Copies data from the source to the destination.
  # Corresponds to the JSON property `copyPaste`
  #
  # @return [Google::Apis::SheetsV4::CopyPasteRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8131
  def copy_paste; end

  # Copies data from the source to the destination.
  # Corresponds to the JSON property `copyPaste`
  #
  # @return [Google::Apis::SheetsV4::CopyPasteRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8131
  def copy_paste=(_arg0); end

  # A request to create developer metadata.
  # Corresponds to the JSON property `createDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::CreateDeveloperMetadataRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8136
  def create_developer_metadata; end

  # A request to create developer metadata.
  # Corresponds to the JSON property `createDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::CreateDeveloperMetadataRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8136
  def create_developer_metadata=(_arg0); end

  # Moves data from the source to the destination.
  # Corresponds to the JSON property `cutPaste`
  #
  # @return [Google::Apis::SheetsV4::CutPasteRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8141
  def cut_paste; end

  # Moves data from the source to the destination.
  # Corresponds to the JSON property `cutPaste`
  #
  # @return [Google::Apis::SheetsV4::CutPasteRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8141
  def cut_paste=(_arg0); end

  # Removes the banded range with the given ID from the spreadsheet.
  # Corresponds to the JSON property `deleteBanding`
  #
  # @return [Google::Apis::SheetsV4::DeleteBandingRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8146
  def delete_banding; end

  # Removes the banded range with the given ID from the spreadsheet.
  # Corresponds to the JSON property `deleteBanding`
  #
  # @return [Google::Apis::SheetsV4::DeleteBandingRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8146
  def delete_banding=(_arg0); end

  # Deletes a conditional format rule at the given index. All subsequent rules'
  # indexes are decremented.
  # Corresponds to the JSON property `deleteConditionalFormatRule`
  #
  # @return [Google::Apis::SheetsV4::DeleteConditionalFormatRuleRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8152
  def delete_conditional_format_rule; end

  # Deletes a conditional format rule at the given index. All subsequent rules'
  # indexes are decremented.
  # Corresponds to the JSON property `deleteConditionalFormatRule`
  #
  # @return [Google::Apis::SheetsV4::DeleteConditionalFormatRuleRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8152
  def delete_conditional_format_rule=(_arg0); end

  # Deletes a data source. The request also deletes the associated data source
  # sheet, and unlinks all associated data source objects.
  # Corresponds to the JSON property `deleteDataSource`
  #
  # @return [Google::Apis::SheetsV4::DeleteDataSourceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8158
  def delete_data_source; end

  # Deletes a data source. The request also deletes the associated data source
  # sheet, and unlinks all associated data source objects.
  # Corresponds to the JSON property `deleteDataSource`
  #
  # @return [Google::Apis::SheetsV4::DeleteDataSourceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8158
  def delete_data_source=(_arg0); end

  # A request to delete developer metadata.
  # Corresponds to the JSON property `deleteDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeleteDeveloperMetadataRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8163
  def delete_developer_metadata; end

  # A request to delete developer metadata.
  # Corresponds to the JSON property `deleteDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeleteDeveloperMetadataRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8163
  def delete_developer_metadata=(_arg0); end

  # Deletes the dimensions from the sheet.
  # Corresponds to the JSON property `deleteDimension`
  #
  # @return [Google::Apis::SheetsV4::DeleteDimensionRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8168
  def delete_dimension; end

  # Deletes the dimensions from the sheet.
  # Corresponds to the JSON property `deleteDimension`
  #
  # @return [Google::Apis::SheetsV4::DeleteDimensionRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8168
  def delete_dimension=(_arg0); end

  # Deletes a group over the specified range by decrementing the depth of the
  # dimensions in the range. For example, assume the sheet has a depth-1 group
  # over B:E and a depth-2 group over C:D. Deleting a group over D:E leaves the
  # sheet with a depth-1 group over B:D and a depth-2 group over C:C.
  # Corresponds to the JSON property `deleteDimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::DeleteDimensionGroupRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8176
  def delete_dimension_group; end

  # Deletes a group over the specified range by decrementing the depth of the
  # dimensions in the range. For example, assume the sheet has a depth-1 group
  # over B:E and a depth-2 group over C:D. Deleting a group over D:E leaves the
  # sheet with a depth-1 group over B:D and a depth-2 group over C:C.
  # Corresponds to the JSON property `deleteDimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::DeleteDimensionGroupRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8176
  def delete_dimension_group=(_arg0); end

  # Removes rows within this range that contain values in the specified columns
  # that are duplicates of values in any previous row. Rows with identical values
  # but different letter cases, formatting, or formulas are considered to be
  # duplicates. This request also removes duplicate rows hidden from view (for
  # example, due to a filter). When removing duplicates, the first instance of
  # each duplicate row scanning from the top downwards is kept in the resulting
  # range. Content outside of the specified range isn't removed, and rows
  # considered duplicates do not have to be adjacent to each other in the range.
  # Corresponds to the JSON property `deleteDuplicates`
  #
  # @return [Google::Apis::SheetsV4::DeleteDuplicatesRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8188
  def delete_duplicates; end

  # Removes rows within this range that contain values in the specified columns
  # that are duplicates of values in any previous row. Rows with identical values
  # but different letter cases, formatting, or formulas are considered to be
  # duplicates. This request also removes duplicate rows hidden from view (for
  # example, due to a filter). When removing duplicates, the first instance of
  # each duplicate row scanning from the top downwards is kept in the resulting
  # range. Content outside of the specified range isn't removed, and rows
  # considered duplicates do not have to be adjacent to each other in the range.
  # Corresponds to the JSON property `deleteDuplicates`
  #
  # @return [Google::Apis::SheetsV4::DeleteDuplicatesRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8188
  def delete_duplicates=(_arg0); end

  # Deletes the embedded object with the given ID.
  # Corresponds to the JSON property `deleteEmbeddedObject`
  #
  # @return [Google::Apis::SheetsV4::DeleteEmbeddedObjectRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8193
  def delete_embedded_object; end

  # Deletes the embedded object with the given ID.
  # Corresponds to the JSON property `deleteEmbeddedObject`
  #
  # @return [Google::Apis::SheetsV4::DeleteEmbeddedObjectRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8193
  def delete_embedded_object=(_arg0); end

  # Deletes a particular filter view.
  # Corresponds to the JSON property `deleteFilterView`
  #
  # @return [Google::Apis::SheetsV4::DeleteFilterViewRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8198
  def delete_filter_view; end

  # Deletes a particular filter view.
  # Corresponds to the JSON property `deleteFilterView`
  #
  # @return [Google::Apis::SheetsV4::DeleteFilterViewRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8198
  def delete_filter_view=(_arg0); end

  # Removes the named range with the given ID from the spreadsheet.
  # Corresponds to the JSON property `deleteNamedRange`
  #
  # @return [Google::Apis::SheetsV4::DeleteNamedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8203
  def delete_named_range; end

  # Removes the named range with the given ID from the spreadsheet.
  # Corresponds to the JSON property `deleteNamedRange`
  #
  # @return [Google::Apis::SheetsV4::DeleteNamedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8203
  def delete_named_range=(_arg0); end

  # Deletes the protected range with the given ID.
  # Corresponds to the JSON property `deleteProtectedRange`
  #
  # @return [Google::Apis::SheetsV4::DeleteProtectedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8208
  def delete_protected_range; end

  # Deletes the protected range with the given ID.
  # Corresponds to the JSON property `deleteProtectedRange`
  #
  # @return [Google::Apis::SheetsV4::DeleteProtectedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8208
  def delete_protected_range=(_arg0); end

  # Deletes a range of cells, shifting other cells into the deleted area.
  # Corresponds to the JSON property `deleteRange`
  #
  # @return [Google::Apis::SheetsV4::DeleteRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8213
  def delete_range; end

  # Deletes a range of cells, shifting other cells into the deleted area.
  # Corresponds to the JSON property `deleteRange`
  #
  # @return [Google::Apis::SheetsV4::DeleteRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8213
  def delete_range=(_arg0); end

  # Deletes the requested sheet.
  # Corresponds to the JSON property `deleteSheet`
  #
  # @return [Google::Apis::SheetsV4::DeleteSheetRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8218
  def delete_sheet; end

  # Deletes the requested sheet.
  # Corresponds to the JSON property `deleteSheet`
  #
  # @return [Google::Apis::SheetsV4::DeleteSheetRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8218
  def delete_sheet=(_arg0); end

  # Duplicates a particular filter view.
  # Corresponds to the JSON property `duplicateFilterView`
  #
  # @return [Google::Apis::SheetsV4::DuplicateFilterViewRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8223
  def duplicate_filter_view; end

  # Duplicates a particular filter view.
  # Corresponds to the JSON property `duplicateFilterView`
  #
  # @return [Google::Apis::SheetsV4::DuplicateFilterViewRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8223
  def duplicate_filter_view=(_arg0); end

  # Duplicates the contents of a sheet.
  # Corresponds to the JSON property `duplicateSheet`
  #
  # @return [Google::Apis::SheetsV4::DuplicateSheetRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8228
  def duplicate_sheet; end

  # Duplicates the contents of a sheet.
  # Corresponds to the JSON property `duplicateSheet`
  #
  # @return [Google::Apis::SheetsV4::DuplicateSheetRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8228
  def duplicate_sheet=(_arg0); end

  # Finds and replaces data in cells over a range, sheet, or all sheets.
  # Corresponds to the JSON property `findReplace`
  #
  # @return [Google::Apis::SheetsV4::FindReplaceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8233
  def find_replace; end

  # Finds and replaces data in cells over a range, sheet, or all sheets.
  # Corresponds to the JSON property `findReplace`
  #
  # @return [Google::Apis::SheetsV4::FindReplaceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8233
  def find_replace=(_arg0); end

  # Inserts rows or columns in a sheet at a particular index.
  # Corresponds to the JSON property `insertDimension`
  #
  # @return [Google::Apis::SheetsV4::InsertDimensionRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8238
  def insert_dimension; end

  # Inserts rows or columns in a sheet at a particular index.
  # Corresponds to the JSON property `insertDimension`
  #
  # @return [Google::Apis::SheetsV4::InsertDimensionRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8238
  def insert_dimension=(_arg0); end

  # Inserts cells into a range, shifting the existing cells over or down.
  # Corresponds to the JSON property `insertRange`
  #
  # @return [Google::Apis::SheetsV4::InsertRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8243
  def insert_range; end

  # Inserts cells into a range, shifting the existing cells over or down.
  # Corresponds to the JSON property `insertRange`
  #
  # @return [Google::Apis::SheetsV4::InsertRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8243
  def insert_range=(_arg0); end

  # Merges all cells in the range.
  # Corresponds to the JSON property `mergeCells`
  #
  # @return [Google::Apis::SheetsV4::MergeCellsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8248
  def merge_cells; end

  # Merges all cells in the range.
  # Corresponds to the JSON property `mergeCells`
  #
  # @return [Google::Apis::SheetsV4::MergeCellsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8248
  def merge_cells=(_arg0); end

  # Moves one or more rows or columns.
  # Corresponds to the JSON property `moveDimension`
  #
  # @return [Google::Apis::SheetsV4::MoveDimensionRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8253
  def move_dimension; end

  # Moves one or more rows or columns.
  # Corresponds to the JSON property `moveDimension`
  #
  # @return [Google::Apis::SheetsV4::MoveDimensionRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8253
  def move_dimension=(_arg0); end

  # Inserts data into the spreadsheet starting at the specified coordinate.
  # Corresponds to the JSON property `pasteData`
  #
  # @return [Google::Apis::SheetsV4::PasteDataRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8258
  def paste_data; end

  # Inserts data into the spreadsheet starting at the specified coordinate.
  # Corresponds to the JSON property `pasteData`
  #
  # @return [Google::Apis::SheetsV4::PasteDataRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8258
  def paste_data=(_arg0); end

  # Randomizes the order of the rows in a range.
  # Corresponds to the JSON property `randomizeRange`
  #
  # @return [Google::Apis::SheetsV4::RandomizeRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8263
  def randomize_range; end

  # Randomizes the order of the rows in a range.
  # Corresponds to the JSON property `randomizeRange`
  #
  # @return [Google::Apis::SheetsV4::RandomizeRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8263
  def randomize_range=(_arg0); end

  # Refreshes one or multiple data source objects in the spreadsheet by the
  # specified references. The request requires an additional `bigquery.readonly`
  # OAuth scope if you are refreshing a BigQuery data source. If there are
  # multiple refresh requests referencing the same data source objects in one
  # batch, only the last refresh request is processed, and all those requests will
  # have the same response accordingly.
  # Corresponds to the JSON property `refreshDataSource`
  #
  # @return [Google::Apis::SheetsV4::RefreshDataSourceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8273
  def refresh_data_source; end

  # Refreshes one or multiple data source objects in the spreadsheet by the
  # specified references. The request requires an additional `bigquery.readonly`
  # OAuth scope if you are refreshing a BigQuery data source. If there are
  # multiple refresh requests referencing the same data source objects in one
  # batch, only the last refresh request is processed, and all those requests will
  # have the same response accordingly.
  # Corresponds to the JSON property `refreshDataSource`
  #
  # @return [Google::Apis::SheetsV4::RefreshDataSourceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8273
  def refresh_data_source=(_arg0); end

  # Updates all cells in the range to the values in the given Cell object. Only
  # the fields listed in the fields field are updated; others are unchanged. If
  # writing a cell with a formula, the formula's ranges will automatically
  # increment for each field in the range. For example, if writing a cell with
  # formula `=A1` into range B2:C4, B2 would be `=A1`, B3 would be `=A2`, B4 would
  # be `=A3`, C2 would be `=B1`, C3 would be `=B2`, C4 would be `=B3`. To keep the
  # formula's ranges static, use the `$` indicator. For example, use the formula `=
  # $A$1` to prevent both the row and the column from incrementing.
  # Corresponds to the JSON property `repeatCell`
  #
  # @return [Google::Apis::SheetsV4::RepeatCellRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8285
  def repeat_cell; end

  # Updates all cells in the range to the values in the given Cell object. Only
  # the fields listed in the fields field are updated; others are unchanged. If
  # writing a cell with a formula, the formula's ranges will automatically
  # increment for each field in the range. For example, if writing a cell with
  # formula `=A1` into range B2:C4, B2 would be `=A1`, B3 would be `=A2`, B4 would
  # be `=A3`, C2 would be `=B1`, C3 would be `=B2`, C4 would be `=B3`. To keep the
  # formula's ranges static, use the `$` indicator. For example, use the formula `=
  # $A$1` to prevent both the row and the column from incrementing.
  # Corresponds to the JSON property `repeatCell`
  #
  # @return [Google::Apis::SheetsV4::RepeatCellRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8285
  def repeat_cell=(_arg0); end

  # Sets the basic filter associated with a sheet.
  # Corresponds to the JSON property `setBasicFilter`
  #
  # @return [Google::Apis::SheetsV4::SetBasicFilterRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8290
  def set_basic_filter; end

  # Sets the basic filter associated with a sheet.
  # Corresponds to the JSON property `setBasicFilter`
  #
  # @return [Google::Apis::SheetsV4::SetBasicFilterRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8290
  def set_basic_filter=(_arg0); end

  # Sets a data validation rule to every cell in the range. To clear validation in
  # a range, call this with no rule specified.
  # Corresponds to the JSON property `setDataValidation`
  #
  # @return [Google::Apis::SheetsV4::SetDataValidationRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8296
  def set_data_validation; end

  # Sets a data validation rule to every cell in the range. To clear validation in
  # a range, call this with no rule specified.
  # Corresponds to the JSON property `setDataValidation`
  #
  # @return [Google::Apis::SheetsV4::SetDataValidationRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8296
  def set_data_validation=(_arg0); end

  # Sorts data in rows based on a sort order per column.
  # Corresponds to the JSON property `sortRange`
  #
  # @return [Google::Apis::SheetsV4::SortRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8301
  def sort_range; end

  # Sorts data in rows based on a sort order per column.
  # Corresponds to the JSON property `sortRange`
  #
  # @return [Google::Apis::SheetsV4::SortRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8301
  def sort_range=(_arg0); end

  # Splits a column of text into multiple columns, based on a delimiter in each
  # cell.
  # Corresponds to the JSON property `textToColumns`
  #
  # @return [Google::Apis::SheetsV4::TextToColumnsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8307
  def text_to_columns; end

  # Splits a column of text into multiple columns, based on a delimiter in each
  # cell.
  # Corresponds to the JSON property `textToColumns`
  #
  # @return [Google::Apis::SheetsV4::TextToColumnsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8307
  def text_to_columns=(_arg0); end

  # Trims the whitespace (such as spaces, tabs, or new lines) in every cell in the
  # specified range. This request removes all whitespace from the start and end of
  # each cell's text, and reduces any subsequence of remaining whitespace
  # characters to a single space. If the resulting trimmed text starts with a '+'
  # or '=' character, the text remains as a string value and isn't interpreted as
  # a formula.
  # Corresponds to the JSON property `trimWhitespace`
  #
  # @return [Google::Apis::SheetsV4::TrimWhitespaceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8317
  def trim_whitespace; end

  # Trims the whitespace (such as spaces, tabs, or new lines) in every cell in the
  # specified range. This request removes all whitespace from the start and end of
  # each cell's text, and reduces any subsequence of remaining whitespace
  # characters to a single space. If the resulting trimmed text starts with a '+'
  # or '=' character, the text remains as a string value and isn't interpreted as
  # a formula.
  # Corresponds to the JSON property `trimWhitespace`
  #
  # @return [Google::Apis::SheetsV4::TrimWhitespaceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8317
  def trim_whitespace=(_arg0); end

  # Unmerges cells in the given range.
  # Corresponds to the JSON property `unmergeCells`
  #
  # @return [Google::Apis::SheetsV4::UnmergeCellsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8322
  def unmerge_cells; end

  # Unmerges cells in the given range.
  # Corresponds to the JSON property `unmergeCells`
  #
  # @return [Google::Apis::SheetsV4::UnmergeCellsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8322
  def unmerge_cells=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8430
  def update!(**args); end

  # Updates properties of the supplied banded range.
  # Corresponds to the JSON property `updateBanding`
  #
  # @return [Google::Apis::SheetsV4::UpdateBandingRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8327
  def update_banding; end

  # Updates properties of the supplied banded range.
  # Corresponds to the JSON property `updateBanding`
  #
  # @return [Google::Apis::SheetsV4::UpdateBandingRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8327
  def update_banding=(_arg0); end

  # Updates the borders of a range. If a field is not set in the request, that
  # means the border remains as-is. For example, with two subsequent
  # UpdateBordersRequest: 1. range: A1:A5 `` top: RED, bottom: WHITE `` 2. range:
  # A1:A5 `` left: BLUE `` That would result in A1:A5 having a borders of `` top:
  # RED, bottom: WHITE, left: BLUE ``. If you want to clear a border, explicitly
  # set the style to NONE.
  # Corresponds to the JSON property `updateBorders`
  #
  # @return [Google::Apis::SheetsV4::UpdateBordersRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8337
  def update_borders; end

  # Updates the borders of a range. If a field is not set in the request, that
  # means the border remains as-is. For example, with two subsequent
  # UpdateBordersRequest: 1. range: A1:A5 `` top: RED, bottom: WHITE `` 2. range:
  # A1:A5 `` left: BLUE `` That would result in A1:A5 having a borders of `` top:
  # RED, bottom: WHITE, left: BLUE ``. If you want to clear a border, explicitly
  # set the style to NONE.
  # Corresponds to the JSON property `updateBorders`
  #
  # @return [Google::Apis::SheetsV4::UpdateBordersRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8337
  def update_borders=(_arg0); end

  # Updates all cells in a range with new data.
  # Corresponds to the JSON property `updateCells`
  #
  # @return [Google::Apis::SheetsV4::UpdateCellsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8342
  def update_cells; end

  # Updates all cells in a range with new data.
  # Corresponds to the JSON property `updateCells`
  #
  # @return [Google::Apis::SheetsV4::UpdateCellsRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8342
  def update_cells=(_arg0); end

  # Updates a chart's specifications. (This does not move or resize a chart. To
  # move or resize a chart, use UpdateEmbeddedObjectPositionRequest.)
  # Corresponds to the JSON property `updateChartSpec`
  #
  # @return [Google::Apis::SheetsV4::UpdateChartSpecRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8348
  def update_chart_spec; end

  # Updates a chart's specifications. (This does not move or resize a chart. To
  # move or resize a chart, use UpdateEmbeddedObjectPositionRequest.)
  # Corresponds to the JSON property `updateChartSpec`
  #
  # @return [Google::Apis::SheetsV4::UpdateChartSpecRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8348
  def update_chart_spec=(_arg0); end

  # Updates a conditional format rule at the given index, or moves a conditional
  # format rule to another index.
  # Corresponds to the JSON property `updateConditionalFormatRule`
  #
  # @return [Google::Apis::SheetsV4::UpdateConditionalFormatRuleRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8354
  def update_conditional_format_rule; end

  # Updates a conditional format rule at the given index, or moves a conditional
  # format rule to another index.
  # Corresponds to the JSON property `updateConditionalFormatRule`
  #
  # @return [Google::Apis::SheetsV4::UpdateConditionalFormatRuleRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8354
  def update_conditional_format_rule=(_arg0); end

  # Updates a data source. After the data source is updated successfully, an
  # execution is triggered to refresh the associated DATA_SOURCE sheet to read
  # data from the updated data source. The request requires an additional `
  # bigquery.readonly` OAuth scope if you are updating a BigQuery data source.
  # Corresponds to the JSON property `updateDataSource`
  #
  # @return [Google::Apis::SheetsV4::UpdateDataSourceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8362
  def update_data_source; end

  # Updates a data source. After the data source is updated successfully, an
  # execution is triggered to refresh the associated DATA_SOURCE sheet to read
  # data from the updated data source. The request requires an additional `
  # bigquery.readonly` OAuth scope if you are updating a BigQuery data source.
  # Corresponds to the JSON property `updateDataSource`
  #
  # @return [Google::Apis::SheetsV4::UpdateDataSourceRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8362
  def update_data_source=(_arg0); end

  # A request to update properties of developer metadata. Updates the properties
  # of the developer metadata selected by the filters to the values provided in
  # the DeveloperMetadata resource. Callers must specify the properties they wish
  # to update in the fields parameter, as well as specify at least one DataFilter
  # matching the metadata they wish to update.
  # Corresponds to the JSON property `updateDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::UpdateDeveloperMetadataRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8371
  def update_developer_metadata; end

  # A request to update properties of developer metadata. Updates the properties
  # of the developer metadata selected by the filters to the values provided in
  # the DeveloperMetadata resource. Callers must specify the properties they wish
  # to update in the fields parameter, as well as specify at least one DataFilter
  # matching the metadata they wish to update.
  # Corresponds to the JSON property `updateDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::UpdateDeveloperMetadataRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8371
  def update_developer_metadata=(_arg0); end

  # Updates the state of the specified group.
  # Corresponds to the JSON property `updateDimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::UpdateDimensionGroupRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8376
  def update_dimension_group; end

  # Updates the state of the specified group.
  # Corresponds to the JSON property `updateDimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::UpdateDimensionGroupRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8376
  def update_dimension_group=(_arg0); end

  # Updates properties of dimensions within the specified range.
  # Corresponds to the JSON property `updateDimensionProperties`
  #
  # @return [Google::Apis::SheetsV4::UpdateDimensionPropertiesRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8381
  def update_dimension_properties; end

  # Updates properties of dimensions within the specified range.
  # Corresponds to the JSON property `updateDimensionProperties`
  #
  # @return [Google::Apis::SheetsV4::UpdateDimensionPropertiesRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8381
  def update_dimension_properties=(_arg0); end

  # Updates an embedded object's border property.
  # Corresponds to the JSON property `updateEmbeddedObjectBorder`
  #
  # @return [Google::Apis::SheetsV4::UpdateEmbeddedObjectBorderRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8386
  def update_embedded_object_border; end

  # Updates an embedded object's border property.
  # Corresponds to the JSON property `updateEmbeddedObjectBorder`
  #
  # @return [Google::Apis::SheetsV4::UpdateEmbeddedObjectBorderRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8386
  def update_embedded_object_border=(_arg0); end

  # Update an embedded object's position (such as a moving or resizing a chart or
  # image).
  # Corresponds to the JSON property `updateEmbeddedObjectPosition`
  #
  # @return [Google::Apis::SheetsV4::UpdateEmbeddedObjectPositionRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8392
  def update_embedded_object_position; end

  # Update an embedded object's position (such as a moving or resizing a chart or
  # image).
  # Corresponds to the JSON property `updateEmbeddedObjectPosition`
  #
  # @return [Google::Apis::SheetsV4::UpdateEmbeddedObjectPositionRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8392
  def update_embedded_object_position=(_arg0); end

  # Updates properties of the filter view.
  # Corresponds to the JSON property `updateFilterView`
  #
  # @return [Google::Apis::SheetsV4::UpdateFilterViewRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8397
  def update_filter_view; end

  # Updates properties of the filter view.
  # Corresponds to the JSON property `updateFilterView`
  #
  # @return [Google::Apis::SheetsV4::UpdateFilterViewRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8397
  def update_filter_view=(_arg0); end

  # Updates properties of the named range with the specified namedRangeId.
  # Corresponds to the JSON property `updateNamedRange`
  #
  # @return [Google::Apis::SheetsV4::UpdateNamedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8402
  def update_named_range; end

  # Updates properties of the named range with the specified namedRangeId.
  # Corresponds to the JSON property `updateNamedRange`
  #
  # @return [Google::Apis::SheetsV4::UpdateNamedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8402
  def update_named_range=(_arg0); end

  # Updates an existing protected range with the specified protectedRangeId.
  # Corresponds to the JSON property `updateProtectedRange`
  #
  # @return [Google::Apis::SheetsV4::UpdateProtectedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8407
  def update_protected_range; end

  # Updates an existing protected range with the specified protectedRangeId.
  # Corresponds to the JSON property `updateProtectedRange`
  #
  # @return [Google::Apis::SheetsV4::UpdateProtectedRangeRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8407
  def update_protected_range=(_arg0); end

  # Updates properties of the sheet with the specified sheetId.
  # Corresponds to the JSON property `updateSheetProperties`
  #
  # @return [Google::Apis::SheetsV4::UpdateSheetPropertiesRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8412
  def update_sheet_properties; end

  # Updates properties of the sheet with the specified sheetId.
  # Corresponds to the JSON property `updateSheetProperties`
  #
  # @return [Google::Apis::SheetsV4::UpdateSheetPropertiesRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8412
  def update_sheet_properties=(_arg0); end

  # Updates a slicer's specifications. (This does not move or resize a slicer. To
  # move or resize a slicer use UpdateEmbeddedObjectPositionRequest.
  # Corresponds to the JSON property `updateSlicerSpec`
  #
  # @return [Google::Apis::SheetsV4::UpdateSlicerSpecRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8418
  def update_slicer_spec; end

  # Updates a slicer's specifications. (This does not move or resize a slicer. To
  # move or resize a slicer use UpdateEmbeddedObjectPositionRequest.
  # Corresponds to the JSON property `updateSlicerSpec`
  #
  # @return [Google::Apis::SheetsV4::UpdateSlicerSpecRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8418
  def update_slicer_spec=(_arg0); end

  # Updates properties of a spreadsheet.
  # Corresponds to the JSON property `updateSpreadsheetProperties`
  #
  # @return [Google::Apis::SheetsV4::UpdateSpreadsheetPropertiesRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8423
  def update_spreadsheet_properties; end

  # Updates properties of a spreadsheet.
  # Corresponds to the JSON property `updateSpreadsheetProperties`
  #
  # @return [Google::Apis::SheetsV4::UpdateSpreadsheetPropertiesRequest]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8423
  def update_spreadsheet_properties=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1172
class Google::Apis::SheetsV4::Request::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A single response from an update.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8501
class Google::Apis::SheetsV4::Response
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Response] a new instance of Response
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8624
  def initialize(**args); end

  # The result of adding a banded range.
  # Corresponds to the JSON property `addBanding`
  #
  # @return [Google::Apis::SheetsV4::AddBandingResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8507
  def add_banding; end

  # The result of adding a banded range.
  # Corresponds to the JSON property `addBanding`
  #
  # @return [Google::Apis::SheetsV4::AddBandingResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8507
  def add_banding=(_arg0); end

  # The result of adding a chart to a spreadsheet.
  # Corresponds to the JSON property `addChart`
  #
  # @return [Google::Apis::SheetsV4::AddChartResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8512
  def add_chart; end

  # The result of adding a chart to a spreadsheet.
  # Corresponds to the JSON property `addChart`
  #
  # @return [Google::Apis::SheetsV4::AddChartResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8512
  def add_chart=(_arg0); end

  # The result of adding a data source.
  # Corresponds to the JSON property `addDataSource`
  #
  # @return [Google::Apis::SheetsV4::AddDataSourceResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8517
  def add_data_source; end

  # The result of adding a data source.
  # Corresponds to the JSON property `addDataSource`
  #
  # @return [Google::Apis::SheetsV4::AddDataSourceResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8517
  def add_data_source=(_arg0); end

  # The result of adding a group.
  # Corresponds to the JSON property `addDimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::AddDimensionGroupResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8522
  def add_dimension_group; end

  # The result of adding a group.
  # Corresponds to the JSON property `addDimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::AddDimensionGroupResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8522
  def add_dimension_group=(_arg0); end

  # The result of adding a filter view.
  # Corresponds to the JSON property `addFilterView`
  #
  # @return [Google::Apis::SheetsV4::AddFilterViewResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8527
  def add_filter_view; end

  # The result of adding a filter view.
  # Corresponds to the JSON property `addFilterView`
  #
  # @return [Google::Apis::SheetsV4::AddFilterViewResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8527
  def add_filter_view=(_arg0); end

  # The result of adding a named range.
  # Corresponds to the JSON property `addNamedRange`
  #
  # @return [Google::Apis::SheetsV4::AddNamedRangeResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8532
  def add_named_range; end

  # The result of adding a named range.
  # Corresponds to the JSON property `addNamedRange`
  #
  # @return [Google::Apis::SheetsV4::AddNamedRangeResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8532
  def add_named_range=(_arg0); end

  # The result of adding a new protected range.
  # Corresponds to the JSON property `addProtectedRange`
  #
  # @return [Google::Apis::SheetsV4::AddProtectedRangeResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8537
  def add_protected_range; end

  # The result of adding a new protected range.
  # Corresponds to the JSON property `addProtectedRange`
  #
  # @return [Google::Apis::SheetsV4::AddProtectedRangeResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8537
  def add_protected_range=(_arg0); end

  # The result of adding a sheet.
  # Corresponds to the JSON property `addSheet`
  #
  # @return [Google::Apis::SheetsV4::AddSheetResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8542
  def add_sheet; end

  # The result of adding a sheet.
  # Corresponds to the JSON property `addSheet`
  #
  # @return [Google::Apis::SheetsV4::AddSheetResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8542
  def add_sheet=(_arg0); end

  # The result of adding a slicer to a spreadsheet.
  # Corresponds to the JSON property `addSlicer`
  #
  # @return [Google::Apis::SheetsV4::AddSlicerResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8547
  def add_slicer; end

  # The result of adding a slicer to a spreadsheet.
  # Corresponds to the JSON property `addSlicer`
  #
  # @return [Google::Apis::SheetsV4::AddSlicerResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8547
  def add_slicer=(_arg0); end

  # The response from cancelling one or multiple data source object refreshes.
  # Corresponds to the JSON property `cancelDataSourceRefresh`
  #
  # @return [Google::Apis::SheetsV4::CancelDataSourceRefreshResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8552
  def cancel_data_source_refresh; end

  # The response from cancelling one or multiple data source object refreshes.
  # Corresponds to the JSON property `cancelDataSourceRefresh`
  #
  # @return [Google::Apis::SheetsV4::CancelDataSourceRefreshResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8552
  def cancel_data_source_refresh=(_arg0); end

  # The response from creating developer metadata.
  # Corresponds to the JSON property `createDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::CreateDeveloperMetadataResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8557
  def create_developer_metadata; end

  # The response from creating developer metadata.
  # Corresponds to the JSON property `createDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::CreateDeveloperMetadataResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8557
  def create_developer_metadata=(_arg0); end

  # The result of deleting a conditional format rule.
  # Corresponds to the JSON property `deleteConditionalFormatRule`
  #
  # @return [Google::Apis::SheetsV4::DeleteConditionalFormatRuleResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8562
  def delete_conditional_format_rule; end

  # The result of deleting a conditional format rule.
  # Corresponds to the JSON property `deleteConditionalFormatRule`
  #
  # @return [Google::Apis::SheetsV4::DeleteConditionalFormatRuleResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8562
  def delete_conditional_format_rule=(_arg0); end

  # The response from deleting developer metadata.
  # Corresponds to the JSON property `deleteDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeleteDeveloperMetadataResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8567
  def delete_developer_metadata; end

  # The response from deleting developer metadata.
  # Corresponds to the JSON property `deleteDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeleteDeveloperMetadataResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8567
  def delete_developer_metadata=(_arg0); end

  # The result of deleting a group.
  # Corresponds to the JSON property `deleteDimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::DeleteDimensionGroupResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8572
  def delete_dimension_group; end

  # The result of deleting a group.
  # Corresponds to the JSON property `deleteDimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::DeleteDimensionGroupResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8572
  def delete_dimension_group=(_arg0); end

  # The result of removing duplicates in a range.
  # Corresponds to the JSON property `deleteDuplicates`
  #
  # @return [Google::Apis::SheetsV4::DeleteDuplicatesResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8577
  def delete_duplicates; end

  # The result of removing duplicates in a range.
  # Corresponds to the JSON property `deleteDuplicates`
  #
  # @return [Google::Apis::SheetsV4::DeleteDuplicatesResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8577
  def delete_duplicates=(_arg0); end

  # The result of a filter view being duplicated.
  # Corresponds to the JSON property `duplicateFilterView`
  #
  # @return [Google::Apis::SheetsV4::DuplicateFilterViewResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8582
  def duplicate_filter_view; end

  # The result of a filter view being duplicated.
  # Corresponds to the JSON property `duplicateFilterView`
  #
  # @return [Google::Apis::SheetsV4::DuplicateFilterViewResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8582
  def duplicate_filter_view=(_arg0); end

  # The result of duplicating a sheet.
  # Corresponds to the JSON property `duplicateSheet`
  #
  # @return [Google::Apis::SheetsV4::DuplicateSheetResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8587
  def duplicate_sheet; end

  # The result of duplicating a sheet.
  # Corresponds to the JSON property `duplicateSheet`
  #
  # @return [Google::Apis::SheetsV4::DuplicateSheetResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8587
  def duplicate_sheet=(_arg0); end

  # The result of the find/replace.
  # Corresponds to the JSON property `findReplace`
  #
  # @return [Google::Apis::SheetsV4::FindReplaceResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8592
  def find_replace; end

  # The result of the find/replace.
  # Corresponds to the JSON property `findReplace`
  #
  # @return [Google::Apis::SheetsV4::FindReplaceResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8592
  def find_replace=(_arg0); end

  # The response from refreshing one or multiple data source objects.
  # Corresponds to the JSON property `refreshDataSource`
  #
  # @return [Google::Apis::SheetsV4::RefreshDataSourceResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8597
  def refresh_data_source; end

  # The response from refreshing one or multiple data source objects.
  # Corresponds to the JSON property `refreshDataSource`
  #
  # @return [Google::Apis::SheetsV4::RefreshDataSourceResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8597
  def refresh_data_source=(_arg0); end

  # The result of trimming whitespace in cells.
  # Corresponds to the JSON property `trimWhitespace`
  #
  # @return [Google::Apis::SheetsV4::TrimWhitespaceResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8602
  def trim_whitespace; end

  # The result of trimming whitespace in cells.
  # Corresponds to the JSON property `trimWhitespace`
  #
  # @return [Google::Apis::SheetsV4::TrimWhitespaceResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8602
  def trim_whitespace=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8629
  def update!(**args); end

  # The result of updating a conditional format rule.
  # Corresponds to the JSON property `updateConditionalFormatRule`
  #
  # @return [Google::Apis::SheetsV4::UpdateConditionalFormatRuleResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8607
  def update_conditional_format_rule; end

  # The result of updating a conditional format rule.
  # Corresponds to the JSON property `updateConditionalFormatRule`
  #
  # @return [Google::Apis::SheetsV4::UpdateConditionalFormatRuleResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8607
  def update_conditional_format_rule=(_arg0); end

  # The response from updating data source.
  # Corresponds to the JSON property `updateDataSource`
  #
  # @return [Google::Apis::SheetsV4::UpdateDataSourceResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8612
  def update_data_source; end

  # The response from updating data source.
  # Corresponds to the JSON property `updateDataSource`
  #
  # @return [Google::Apis::SheetsV4::UpdateDataSourceResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8612
  def update_data_source=(_arg0); end

  # The response from updating developer metadata.
  # Corresponds to the JSON property `updateDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::UpdateDeveloperMetadataResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8617
  def update_developer_metadata; end

  # The response from updating developer metadata.
  # Corresponds to the JSON property `updateDeveloperMetadata`
  #
  # @return [Google::Apis::SheetsV4::UpdateDeveloperMetadataResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8617
  def update_developer_metadata=(_arg0); end

  # The result of updating an embedded object's position.
  # Corresponds to the JSON property `updateEmbeddedObjectPosition`
  #
  # @return [Google::Apis::SheetsV4::UpdateEmbeddedObjectPositionResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8622
  def update_embedded_object_position; end

  # The result of updating an embedded object's position.
  # Corresponds to the JSON property `updateEmbeddedObjectPosition`
  #
  # @return [Google::Apis::SheetsV4::UpdateEmbeddedObjectPositionResponse]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8622
  def update_embedded_object_position=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1178
class Google::Apis::SheetsV4::Response::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Data about each cell in a row.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8658
class Google::Apis::SheetsV4::RowData
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [RowData] a new instance of RowData
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8666
  def initialize(**args); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8671
  def update!(**args); end

  # The values in the row, one per column.
  # Corresponds to the JSON property `values`
  #
  # @return [Array<Google::Apis::SheetsV4::CellData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8664
  def values; end

  # The values in the row, one per column.
  # Corresponds to the JSON property `values`
  #
  # @return [Array<Google::Apis::SheetsV4::CellData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8664
  def values=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1184
class Google::Apis::SheetsV4::RowData::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A scorecard chart. Scorecard charts are used to highlight key performance
# indicators, known as KPIs, on the spreadsheet. A scorecard chart can represent
# things like total sales, average cost, or a top selling item. You can specify
# a single data value, or aggregate over a range of data. Percentage or absolute
# difference from a baseline value can be highlighted, like changes over time.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8681
class Google::Apis::SheetsV4::ScorecardChartSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ScorecardChartSpec] a new instance of ScorecardChartSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8728
  def initialize(**args); end

  # The aggregation type for key and baseline chart data in scorecard chart. This
  # field is not supported for data source charts. Use the ChartData.aggregateType
  # field of the key_value_data or baseline_value_data instead for data source
  # charts. This field is optional.
  # Corresponds to the JSON property `aggregateType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8690
  def aggregate_type; end

  # The aggregation type for key and baseline chart data in scorecard chart. This
  # field is not supported for data source charts. Use the ChartData.aggregateType
  # field of the key_value_data or baseline_value_data instead for data source
  # charts. This field is optional.
  # Corresponds to the JSON property `aggregateType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8690
  def aggregate_type=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `baselineValueData`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8695
  def baseline_value_data; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `baselineValueData`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8695
  def baseline_value_data=(_arg0); end

  # Formatting options for baseline value.
  # Corresponds to the JSON property `baselineValueFormat`
  #
  # @return [Google::Apis::SheetsV4::BaselineValueFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8700
  def baseline_value_format; end

  # Formatting options for baseline value.
  # Corresponds to the JSON property `baselineValueFormat`
  #
  # @return [Google::Apis::SheetsV4::BaselineValueFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8700
  def baseline_value_format=(_arg0); end

  # Custom number formatting options for chart attributes.
  # Corresponds to the JSON property `customFormatOptions`
  #
  # @return [Google::Apis::SheetsV4::ChartCustomNumberFormatOptions]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8705
  def custom_format_options; end

  # Custom number formatting options for chart attributes.
  # Corresponds to the JSON property `customFormatOptions`
  #
  # @return [Google::Apis::SheetsV4::ChartCustomNumberFormatOptions]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8705
  def custom_format_options=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `keyValueData`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8710
  def key_value_data; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `keyValueData`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8710
  def key_value_data=(_arg0); end

  # Formatting options for key value.
  # Corresponds to the JSON property `keyValueFormat`
  #
  # @return [Google::Apis::SheetsV4::KeyValueFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8715
  def key_value_format; end

  # Formatting options for key value.
  # Corresponds to the JSON property `keyValueFormat`
  #
  # @return [Google::Apis::SheetsV4::KeyValueFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8715
  def key_value_format=(_arg0); end

  # The number format source used in the scorecard chart. This field is optional.
  # Corresponds to the JSON property `numberFormatSource`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8720
  def number_format_source; end

  # The number format source used in the scorecard chart. This field is optional.
  # Corresponds to the JSON property `numberFormatSource`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8720
  def number_format_source=(_arg0); end

  # Value to scale scorecard key and baseline value. For example, a factor of 10
  # can be used to divide all values in the chart by 10. This field is optional.
  # Corresponds to the JSON property `scaleFactor`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8726
  def scale_factor; end

  # Value to scale scorecard key and baseline value. For example, a factor of 10
  # can be used to divide all values in the chart by 10. This field is optional.
  # Corresponds to the JSON property `scaleFactor`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8726
  def scale_factor=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8733
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1190
class Google::Apis::SheetsV4::ScorecardChartSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A request to retrieve all developer metadata matching the set of specified
# criteria.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8747
class Google::Apis::SheetsV4::SearchDeveloperMetadataRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [SearchDeveloperMetadataRequest] a new instance of SearchDeveloperMetadataRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8757
  def initialize(**args); end

  # The data filters describing the criteria used to determine which
  # DeveloperMetadata entries to return. DeveloperMetadata matching any of the
  # specified filters are included in the response.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8755
  def data_filters; end

  # The data filters describing the criteria used to determine which
  # DeveloperMetadata entries to return. DeveloperMetadata matching any of the
  # specified filters are included in the response.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8755
  def data_filters=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8762
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1196
class Google::Apis::SheetsV4::SearchDeveloperMetadataRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A reply to a developer metadata search request.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8768
class Google::Apis::SheetsV4::SearchDeveloperMetadataResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [SearchDeveloperMetadataResponse] a new instance of SearchDeveloperMetadataResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8776
  def initialize(**args); end

  # The metadata matching the criteria of the search request.
  # Corresponds to the JSON property `matchedDeveloperMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::MatchedDeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8774
  def matched_developer_metadata; end

  # The metadata matching the criteria of the search request.
  # Corresponds to the JSON property `matchedDeveloperMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::MatchedDeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8774
  def matched_developer_metadata=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8781
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1202
class Google::Apis::SheetsV4::SearchDeveloperMetadataResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Sets the basic filter associated with a sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8787
class Google::Apis::SheetsV4::SetBasicFilterRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [SetBasicFilterRequest] a new instance of SetBasicFilterRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8795
  def initialize(**args); end

  # The default filter associated with a sheet.
  # Corresponds to the JSON property `filter`
  #
  # @return [Google::Apis::SheetsV4::BasicFilter]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8793
  def filter; end

  # The default filter associated with a sheet.
  # Corresponds to the JSON property `filter`
  #
  # @return [Google::Apis::SheetsV4::BasicFilter]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8793
  def filter=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8800
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1208
class Google::Apis::SheetsV4::SetBasicFilterRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Sets a data validation rule to every cell in the range. To clear validation in
# a range, call this with no rule specified.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8807
class Google::Apis::SheetsV4::SetDataValidationRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [SetDataValidationRequest] a new instance of SetDataValidationRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8832
  def initialize(**args); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8825
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8825
  def range=(_arg0); end

  # A data validation rule.
  # Corresponds to the JSON property `rule`
  #
  # @return [Google::Apis::SheetsV4::DataValidationRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8830
  def rule; end

  # A data validation rule.
  # Corresponds to the JSON property `rule`
  #
  # @return [Google::Apis::SheetsV4::DataValidationRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8830
  def rule=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8837
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1214
class Google::Apis::SheetsV4::SetDataValidationRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A sheet in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8844
class Google::Apis::SheetsV4::Sheet
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Sheet] a new instance of Sheet
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8921
  def initialize(**args); end

  # The banded (alternating colors) ranges on this sheet.
  # Corresponds to the JSON property `bandedRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::BandedRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8850
  def banded_ranges; end

  # The banded (alternating colors) ranges on this sheet.
  # Corresponds to the JSON property `bandedRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::BandedRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8850
  def banded_ranges=(_arg0); end

  # The default filter associated with a sheet.
  # Corresponds to the JSON property `basicFilter`
  #
  # @return [Google::Apis::SheetsV4::BasicFilter]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8855
  def basic_filter; end

  # The default filter associated with a sheet.
  # Corresponds to the JSON property `basicFilter`
  #
  # @return [Google::Apis::SheetsV4::BasicFilter]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8855
  def basic_filter=(_arg0); end

  # The specifications of every chart on this sheet.
  # Corresponds to the JSON property `charts`
  #
  # @return [Array<Google::Apis::SheetsV4::EmbeddedChart>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8860
  def charts; end

  # The specifications of every chart on this sheet.
  # Corresponds to the JSON property `charts`
  #
  # @return [Array<Google::Apis::SheetsV4::EmbeddedChart>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8860
  def charts=(_arg0); end

  # All column groups on this sheet, ordered by increasing range start index, then
  # by group depth.
  # Corresponds to the JSON property `columnGroups`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8866
  def column_groups; end

  # All column groups on this sheet, ordered by increasing range start index, then
  # by group depth.
  # Corresponds to the JSON property `columnGroups`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8866
  def column_groups=(_arg0); end

  # The conditional format rules in this sheet.
  # Corresponds to the JSON property `conditionalFormats`
  #
  # @return [Array<Google::Apis::SheetsV4::ConditionalFormatRule>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8871
  def conditional_formats; end

  # The conditional format rules in this sheet.
  # Corresponds to the JSON property `conditionalFormats`
  #
  # @return [Array<Google::Apis::SheetsV4::ConditionalFormatRule>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8871
  def conditional_formats=(_arg0); end

  # Data in the grid, if this is a grid sheet. The number of GridData objects
  # returned is dependent on the number of ranges requested on this sheet. For
  # example, if this is representing `Sheet1`, and the spreadsheet was requested
  # with ranges `Sheet1!A1:C10` and `Sheet1!D15:E20`, then the first GridData will
  # have a startRow/startColumn of `0`, while the second one will have `startRow
  # 14` (zero-based row 15), and `startColumn 3` (zero-based column D). For a
  # DATA_SOURCE sheet, you can not request a specific range, the GridData contains
  # all the values.
  # Corresponds to the JSON property `data`
  #
  # @return [Array<Google::Apis::SheetsV4::GridData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8883
  def data; end

  # Data in the grid, if this is a grid sheet. The number of GridData objects
  # returned is dependent on the number of ranges requested on this sheet. For
  # example, if this is representing `Sheet1`, and the spreadsheet was requested
  # with ranges `Sheet1!A1:C10` and `Sheet1!D15:E20`, then the first GridData will
  # have a startRow/startColumn of `0`, while the second one will have `startRow
  # 14` (zero-based row 15), and `startColumn 3` (zero-based column D). For a
  # DATA_SOURCE sheet, you can not request a specific range, the GridData contains
  # all the values.
  # Corresponds to the JSON property `data`
  #
  # @return [Array<Google::Apis::SheetsV4::GridData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8883
  def data=(_arg0); end

  # The developer metadata associated with a sheet.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8888
  def developer_metadata; end

  # The developer metadata associated with a sheet.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8888
  def developer_metadata=(_arg0); end

  # The filter views in this sheet.
  # Corresponds to the JSON property `filterViews`
  #
  # @return [Array<Google::Apis::SheetsV4::FilterView>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8893
  def filter_views; end

  # The filter views in this sheet.
  # Corresponds to the JSON property `filterViews`
  #
  # @return [Array<Google::Apis::SheetsV4::FilterView>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8893
  def filter_views=(_arg0); end

  # The ranges that are merged together.
  # Corresponds to the JSON property `merges`
  #
  # @return [Array<Google::Apis::SheetsV4::GridRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8898
  def merges; end

  # The ranges that are merged together.
  # Corresponds to the JSON property `merges`
  #
  # @return [Array<Google::Apis::SheetsV4::GridRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8898
  def merges=(_arg0); end

  # Properties of a sheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8903
  def properties; end

  # Properties of a sheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8903
  def properties=(_arg0); end

  # The protected ranges in this sheet.
  # Corresponds to the JSON property `protectedRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::ProtectedRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8908
  def protected_ranges; end

  # The protected ranges in this sheet.
  # Corresponds to the JSON property `protectedRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::ProtectedRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8908
  def protected_ranges=(_arg0); end

  # All row groups on this sheet, ordered by increasing range start index, then by
  # group depth.
  # Corresponds to the JSON property `rowGroups`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8914
  def row_groups; end

  # All row groups on this sheet, ordered by increasing range start index, then by
  # group depth.
  # Corresponds to the JSON property `rowGroups`
  #
  # @return [Array<Google::Apis::SheetsV4::DimensionGroup>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8914
  def row_groups=(_arg0); end

  # The slicers on this sheet.
  # Corresponds to the JSON property `slicers`
  #
  # @return [Array<Google::Apis::SheetsV4::Slicer>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8919
  def slicers; end

  # The slicers on this sheet.
  # Corresponds to the JSON property `slicers`
  #
  # @return [Array<Google::Apis::SheetsV4::Slicer>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8919
  def slicers=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8926
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1220
class Google::Apis::SheetsV4::Sheet::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Properties of a sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8944
class Google::Apis::SheetsV4::SheetProperties
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [SheetProperties] a new instance of SheetProperties
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9051
  def initialize(**args); end

  # Additional properties of a DATA_SOURCE sheet.
  # Corresponds to the JSON property `dataSourceSheetProperties`
  #
  # @return [Google::Apis::SheetsV4::DataSourceSheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8950
  def data_source_sheet_properties; end

  # Additional properties of a DATA_SOURCE sheet.
  # Corresponds to the JSON property `dataSourceSheetProperties`
  #
  # @return [Google::Apis::SheetsV4::DataSourceSheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8950
  def data_source_sheet_properties=(_arg0); end

  # Properties of a grid.
  # Corresponds to the JSON property `gridProperties`
  #
  # @return [Google::Apis::SheetsV4::GridProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8955
  def grid_properties; end

  # Properties of a grid.
  # Corresponds to the JSON property `gridProperties`
  #
  # @return [Google::Apis::SheetsV4::GridProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8955
  def grid_properties=(_arg0); end

  # True if the sheet is hidden in the UI, false if it's visible.
  # Corresponds to the JSON property `hidden`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8960
  def hidden; end

  # True if the sheet is hidden in the UI, false if it's visible.
  # Corresponds to the JSON property `hidden`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8960
  def hidden=(_arg0); end

  # True if the sheet is hidden in the UI, false if it's visible.
  # Corresponds to the JSON property `hidden`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8960
  def hidden?; end

  # The index of the sheet within the spreadsheet. When adding or updating sheet
  # properties, if this field is excluded then the sheet is added or moved to the
  # end of the sheet list. When updating sheet indices or inserting sheets,
  # movement is considered in "before the move" indexes. For example, if there
  # were three sheets (S1, S2, S3) in order to move S1 ahead of S2 the index would
  # have to be set to 2. A sheet index update request is ignored if the requested
  # index is identical to the sheets current index or if the requested new index
  # is equal to the current sheet index + 1.
  # Corresponds to the JSON property `index`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8973
  def index; end

  # The index of the sheet within the spreadsheet. When adding or updating sheet
  # properties, if this field is excluded then the sheet is added or moved to the
  # end of the sheet list. When updating sheet indices or inserting sheets,
  # movement is considered in "before the move" indexes. For example, if there
  # were three sheets (S1, S2, S3) in order to move S1 ahead of S2 the index would
  # have to be set to 2. A sheet index update request is ignored if the requested
  # index is identical to the sheets current index or if the requested new index
  # is equal to the current sheet index + 1.
  # Corresponds to the JSON property `index`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8973
  def index=(_arg0); end

  # True if the sheet is an RTL sheet instead of an LTR sheet.
  # Corresponds to the JSON property `rightToLeft`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8978
  def right_to_left; end

  # True if the sheet is an RTL sheet instead of an LTR sheet.
  # Corresponds to the JSON property `rightToLeft`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8978
  def right_to_left=(_arg0); end

  # True if the sheet is an RTL sheet instead of an LTR sheet.
  # Corresponds to the JSON property `rightToLeft`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8978
  def right_to_left?; end

  # The ID of the sheet. Must be non-negative. This field cannot be changed once
  # set.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8985
  def sheet_id; end

  # The ID of the sheet. Must be non-negative. This field cannot be changed once
  # set.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8985
  def sheet_id=(_arg0); end

  # The type of sheet. Defaults to GRID. This field cannot be changed once set.
  # Corresponds to the JSON property `sheetType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8990
  def sheet_type; end

  # The type of sheet. Defaults to GRID. This field cannot be changed once set.
  # Corresponds to the JSON property `sheetType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#8990
  def sheet_type=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `tabColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9039
  def tab_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `tabColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9039
  def tab_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `tabColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9044
  def tab_color_style; end

  # A color value.
  # Corresponds to the JSON property `tabColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9044
  def tab_color_style=(_arg0); end

  # The name of the sheet.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9049
  def title; end

  # The name of the sheet.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9049
  def title=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9056
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1226
class Google::Apis::SheetsV4::SheetProperties::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Google Sheets API
#
# Reads and writes Google Sheets.
#
# @example
#   require 'google/apis/sheets_v4'
#
#   Sheets = Google::Apis::SheetsV4 # Alias the module
#   service = Sheets::SheetsService.new
# @see https://developers.google.com/sheets/
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#34
class Google::Apis::SheetsV4::SheetsService < ::Google::Apis::Core::BaseService
  # @return [SheetsService] a new instance of SheetsService
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#47
  def initialize; end

  # Appends values to a spreadsheet. The input range is used to search for
  # existing data and find a "table" within that range. Values will be appended to
  # the next row of the table, starting with the first column of the table. See
  # the [guide](/sheets/api/guides/values#appending_values) and [sample code](/
  # sheets/api/samples/writing#append_values) for specific details of how tables
  # are detected and data is appended. The caller must specify the spreadsheet ID,
  # range, and a valueInputOption. The `valueInputOption` only controls how the
  # input data will be added to the sheet (column-wise or row-wise), it does not
  # influence what cell the data starts being written to.
  #
  # @param spreadsheet_id [String] The ID of the spreadsheet to update.
  # @param range [String] The [A1 notation](/sheets/api/guides/concepts#cell) of a range to search for a
  #   logical table of data. Values are appended after the last row of the table.
  # @param value_range_object [Google::Apis::SheetsV4::ValueRange]
  # @param include_values_in_response [Boolean] Determines if the update response should include the values of the cells that
  #   were appended. By default, responses do not include the updated values.
  # @param insert_data_option [String] How the input data should be inserted.
  # @param response_date_time_render_option [String] Determines how dates, times, and durations in the response should be rendered.
  #   This is ignored if response_value_render_option is FORMATTED_VALUE. The
  #   default dateTime render option is SERIAL_NUMBER.
  # @param response_value_render_option [String] Determines how values in the response should be rendered. The default render
  #   option is FORMATTED_VALUE.
  # @param value_input_option [String] How the input data should be interpreted.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::AppendValuesResponse]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::AppendValuesResponse] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#377
  def append_spreadsheet_value(spreadsheet_id, range, value_range_object = T.unsafe(nil), include_values_in_response: T.unsafe(nil), insert_data_option: T.unsafe(nil), response_date_time_render_option: T.unsafe(nil), response_value_render_option: T.unsafe(nil), value_input_option: T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Clears one or more ranges of values from a spreadsheet. The caller must
  # specify the spreadsheet ID and one or more ranges. Only values are cleared --
  # all other properties of the cell (such as formatting and data validation) are
  # kept.
  #
  # @param batch_clear_values_request_object [Google::Apis::SheetsV4::BatchClearValuesRequest]
  # @param spreadsheet_id [String] The ID of the spreadsheet to update.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::BatchClearValuesResponse]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::BatchClearValuesResponse] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#419
  def batch_clear_values(spreadsheet_id, batch_clear_values_request_object = T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Returns one or more ranges of values from a spreadsheet. The caller must
  # specify the spreadsheet ID and one or more ranges.
  #
  # @param spreadsheet_id [String] The ID of the spreadsheet to retrieve data from.
  # @param date_time_render_option [String] How dates, times, and durations should be represented in the output. This is
  #   ignored if value_render_option is FORMATTED_VALUE. The default dateTime render
  #   option is SERIAL_NUMBER.
  # @param major_dimension [String] The major dimension that results should use. For example, if the spreadsheet
  #   data is: `A1=1,B1=2,A2=3,B2=4`, then requesting `ranges=["A1:B2"],
  #   majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas requesting `ranges=["A1:
  #   B2"],majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
  # @param ranges [Array<String>, String] The [A1 notation or R1C1 notation](/sheets/api/guides/concepts#cell) of the
  #   range to retrieve values from.
  # @param value_render_option [String] How values should be represented in the output. The default render option is
  #   ValueRenderOption.FORMATTED_VALUE.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::BatchGetValuesResponse]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::BatchGetValuesResponse] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#504
  def batch_get_spreadsheet_values(spreadsheet_id, date_time_render_option: T.unsafe(nil), major_dimension: T.unsafe(nil), ranges: T.unsafe(nil), value_render_option: T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Clears one or more ranges of values from a spreadsheet. The caller must
  # specify the spreadsheet ID and one or more DataFilters. Ranges matching any of
  # the specified data filters will be cleared. Only values are cleared -- all
  # other properties of the cell (such as formatting, data validation, etc..) are
  # kept.
  #
  # @param batch_clear_values_by_data_filter_request_object [Google::Apis::SheetsV4::BatchClearValuesByDataFilterRequest]
  # @param spreadsheet_id [String] The ID of the spreadsheet to update.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::BatchClearValuesByDataFilterResponse]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::BatchClearValuesByDataFilterResponse] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#456
  def batch_spreadsheet_value_clear_by_data_filter(spreadsheet_id, batch_clear_values_by_data_filter_request_object = T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Returns one or more ranges of values that match the specified data filters.
  # The caller must specify the spreadsheet ID and one or more DataFilters. Ranges
  # that match any of the data filters in the request will be returned.
  #
  # @param batch_get_values_by_data_filter_request_object [Google::Apis::SheetsV4::BatchGetValuesByDataFilterRequest]
  # @param spreadsheet_id [String] The ID of the spreadsheet to retrieve data from.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::BatchGetValuesByDataFilterResponse]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::BatchGetValuesByDataFilterResponse] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#541
  def batch_spreadsheet_value_get_by_data_filter(spreadsheet_id, batch_get_values_by_data_filter_request_object = T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Sets values in one or more ranges of a spreadsheet. The caller must specify
  # the spreadsheet ID, a valueInputOption, and one or more DataFilterValueRanges.
  #
  # @param batch_update_values_by_data_filter_request_object [Google::Apis::SheetsV4::BatchUpdateValuesByDataFilterRequest]
  # @param spreadsheet_id [String] The ID of the spreadsheet to update.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::BatchUpdateValuesByDataFilterResponse]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::BatchUpdateValuesByDataFilterResponse] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#609
  def batch_spreadsheet_value_update_by_data_filter(spreadsheet_id, batch_update_values_by_data_filter_request_object = T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Applies one or more updates to the spreadsheet. Each request is validated
  # before being applied. If any request is not valid then the entire request will
  # fail and nothing will be applied. Some requests have replies to give you some
  # information about how they are applied. The replies will mirror the requests.
  # For example, if you applied 4 updates and the 3rd one had a reply, then the
  # response will have 2 empty replies, the actual reply, and another empty reply,
  # in that order. Due to the collaborative nature of spreadsheets, it is not
  # guaranteed that the spreadsheet will reflect exactly your changes after this
  # completes, however it is guaranteed that the updates in the request will be
  # applied together atomically. Your changes may be altered with respect to
  # collaborator changes. If there are no collaborators, the spreadsheet should
  # reflect your changes.
  #
  # @param batch_update_spreadsheet_request_object [Google::Apis::SheetsV4::BatchUpdateSpreadsheetRequest]
  # @param spreadsheet_id [String] The spreadsheet to apply the updates to.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::BatchUpdateSpreadsheetResponse]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::BatchUpdateSpreadsheetResponse] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#86
  def batch_update_spreadsheet(spreadsheet_id, batch_update_spreadsheet_request_object = T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Sets values in one or more ranges of a spreadsheet. The caller must specify
  # the spreadsheet ID, a valueInputOption, and one or more ValueRanges.
  #
  # @param batch_update_values_request_object [Google::Apis::SheetsV4::BatchUpdateValuesRequest]
  # @param spreadsheet_id [String] The ID of the spreadsheet to update.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::BatchUpdateValuesResponse]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::BatchUpdateValuesResponse] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#575
  def batch_update_values(spreadsheet_id, batch_update_values_request_object = T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Clears values from a spreadsheet. The caller must specify the spreadsheet ID
  # and range. Only values are cleared -- all other properties of the cell (such
  # as formatting, data validation, etc..) are kept.
  #
  # @param spreadsheet_id [String] The ID of the spreadsheet to update.
  # @param range [String] The [A1 notation or R1C1 notation](/sheets/api/guides/concepts#cell) of the
  #   values to clear.
  # @param clear_values_request_object [Google::Apis::SheetsV4::ClearValuesRequest]
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::ClearValuesResponse]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::ClearValuesResponse] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#647
  def clear_values(spreadsheet_id, range, clear_values_request_object = T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Copies a single sheet from a spreadsheet to another spreadsheet. Returns the
  # properties of the newly created sheet.
  #
  # @param spreadsheet_id [String] The ID of the spreadsheet containing the sheet to copy.
  # @param sheet_id [Fixnum] The ID of the sheet to copy.
  # @param copy_sheet_to_another_spreadsheet_request_object [Google::Apis::SheetsV4::CopySheetToAnotherSpreadsheetRequest]
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::SheetProperties]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::SheetProperties] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#318
  def copy_spreadsheet(spreadsheet_id, sheet_id, copy_sheet_to_another_spreadsheet_request_object = T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Creates a spreadsheet, returning the newly created spreadsheet.
  #
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param spreadsheet_object [Google::Apis::SheetsV4::Spreadsheet]
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::Spreadsheet]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::Spreadsheet] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#117
  def create_spreadsheet(spreadsheet_object = T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Returns the spreadsheet at the given ID. The caller must specify the
  # spreadsheet ID. By default, data within grids is not returned. You can include
  # grid data in one of 2 ways: * Specify a [field mask](https://developers.google.
  # com/sheets/api/guides/field-masks) listing your desired fields using the `
  # fields` URL parameter in HTTP * Set the includeGridData URL parameter to true.
  # If a field mask is set, the `includeGridData` parameter is ignored For large
  # spreadsheets, as a best practice, retrieve only the specific spreadsheet
  # fields that you want. To retrieve only subsets of spreadsheet data, use the
  # ranges URL parameter. Ranges are specified using [A1 notation](/sheets/api/
  # guides/concepts#cell). You can define a single cell (for example, `A1`) or
  # multiple cells (for example, `A1:D5`). You can also get cells from other
  # sheets within the same spreadsheet (for example, `Sheet2!A1:C4`) or retrieve
  # multiple ranges at once (for example, `?ranges=A1:D5&ranges=Sheet2!A1:C4`).
  # Limiting the range returns only the portions of the spreadsheet that intersect
  # the requested ranges.
  #
  # @param spreadsheet_id [String] The spreadsheet to request.
  # @param include_grid_data [Boolean] True if grid data should be returned. This parameter is ignored if a field
  #   mask was set in the request.
  # @param ranges [Array<String>, String] The ranges to retrieve from the spreadsheet.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::Spreadsheet]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::Spreadsheet] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#167
  def get_spreadsheet(spreadsheet_id, include_grid_data: T.unsafe(nil), ranges: T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Returns the spreadsheet at the given ID. The caller must specify the
  # spreadsheet ID. This method differs from GetSpreadsheet in that it allows
  # selecting which subsets of spreadsheet data to return by specifying a
  # dataFilters parameter. Multiple DataFilters can be specified. Specifying one
  # or more data filters returns the portions of the spreadsheet that intersect
  # ranges matched by any of the filters. By default, data within grids is not
  # returned. You can include grid data one of 2 ways: * Specify a [field mask](
  # https://developers.google.com/sheets/api/guides/field-masks) listing your
  # desired fields using the `fields` URL parameter in HTTP * Set the
  # includeGridData parameter to true. If a field mask is set, the `
  # includeGridData` parameter is ignored For large spreadsheets, as a best
  # practice, retrieve only the specific spreadsheet fields that you want.
  #
  # @param get_spreadsheet_by_data_filter_request_object [Google::Apis::SheetsV4::GetSpreadsheetByDataFilterRequest]
  # @param spreadsheet_id [String] The spreadsheet to request.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::Spreadsheet]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::Spreadsheet] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#211
  def get_spreadsheet_by_data_filter(spreadsheet_id, get_spreadsheet_by_data_filter_request_object = T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Returns the developer metadata with the specified ID. The caller must specify
  # the spreadsheet ID and the developer metadata's unique metadataId.
  #
  # @param metadata_id [Fixnum] The ID of the developer metadata to retrieve.
  # @param spreadsheet_id [String] The ID of the spreadsheet to retrieve metadata from.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::DeveloperMetadata]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::DeveloperMetadata] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#246
  def get_spreadsheet_developer_metadatum(spreadsheet_id, metadata_id, fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Returns a range of values from a spreadsheet. The caller must specify the
  # spreadsheet ID and a range.
  #
  # @param spreadsheet_id [String] The ID of the spreadsheet to retrieve data from.
  # @param range [String] The [A1 notation or R1C1 notation](/sheets/api/guides/concepts#cell) of the
  #   range to retrieve values from.
  # @param date_time_render_option [String] How dates, times, and durations should be represented in the output. This is
  #   ignored if value_render_option is FORMATTED_VALUE. The default dateTime render
  #   option is SERIAL_NUMBER.
  # @param major_dimension [String] The major dimension that results should use. For example, if the spreadsheet
  #   data in Sheet1 is: `A1=1,B1=2,A2=3,B2=4`, then requesting `range=Sheet1!A1:B2?
  #   majorDimension=ROWS` returns `[[1,2],[3,4]]`, whereas requesting `range=Sheet1!
  #   A1:B2?majorDimension=COLUMNS` returns `[[1,3],[2,4]]`.
  # @param value_render_option [String] How values should be represented in the output. The default render option is
  #   FORMATTED_VALUE.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::ValueRange]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::ValueRange] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#696
  def get_spreadsheet_values(spreadsheet_id, range, date_time_render_option: T.unsafe(nil), major_dimension: T.unsafe(nil), value_render_option: T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # @return [String] API key. Your API key identifies your project and provides you with API access,
  #   quota, and reports. Required unless you provide an OAuth 2.0 token.
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#40
  def key; end

  # @return [String] API key. Your API key identifies your project and provides you with API access,
  #   quota, and reports. Required unless you provide an OAuth 2.0 token.
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#40
  def key=(_arg0); end

  # @return [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#45
  def quota_user; end

  # @return [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#45
  def quota_user=(_arg0); end

  # Returns all developer metadata matching the specified DataFilter. If the
  # provided DataFilter represents a DeveloperMetadataLookup object, this will
  # return all DeveloperMetadata entries selected by it. If the DataFilter
  # represents a location in a spreadsheet, this will return all developer
  # metadata associated with locations intersecting that region.
  #
  # @param search_developer_metadata_request_object [Google::Apis::SheetsV4::SearchDeveloperMetadataRequest]
  # @param spreadsheet_id [String] The ID of the spreadsheet to retrieve metadata from.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::SearchDeveloperMetadataResponse]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::SearchDeveloperMetadataResponse] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#282
  def search_developer_metadatum_developer_metadata(spreadsheet_id, search_developer_metadata_request_object = T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  # Sets values in a range of a spreadsheet. The caller must specify the
  # spreadsheet ID, range, and a valueInputOption.
  #
  # @param spreadsheet_id [String] The ID of the spreadsheet to update.
  # @param range [String] The [A1 notation](/sheets/api/guides/concepts#cell) of the values to update.
  # @param value_range_object [Google::Apis::SheetsV4::ValueRange]
  # @param include_values_in_response [Boolean] Determines if the update response should include the values of the cells that
  #   were updated. By default, responses do not include the updated values. If the
  #   range to write was larger than the range actually written, the response
  #   includes all values in the requested range (excluding trailing empty rows and
  #   columns).
  # @param response_date_time_render_option [String] Determines how dates, times, and durations in the response should be rendered.
  #   This is ignored if response_value_render_option is FORMATTED_VALUE. The
  #   default dateTime render option is SERIAL_NUMBER.
  # @param response_value_render_option [String] Determines how values in the response should be rendered. The default render
  #   option is FORMATTED_VALUE.
  # @param value_input_option [String] How the input data should be interpreted.
  # @param fields [String] Selector specifying which fields to include in a partial response.
  # @param quota_user [String] Available to use for quota purposes for server-side applications. Can be any
  #   arbitrary string assigned to a user, but should not exceed 40 characters.
  # @param options [Google::Apis::RequestOptions] Request-specific options
  # @raise [Google::Apis::ServerError] An error occurred on the server and the request can be retried
  # @raise [Google::Apis::ClientError] The request is invalid and should not be retried without modification
  # @raise [Google::Apis::AuthorizationError] Authorization is required
  # @return [Google::Apis::SheetsV4::UpdateValuesResponse]
  # @yield [result, err] Result & error if block supplied
  # @yieldparam result [Google::Apis::SheetsV4::UpdateValuesResponse] parsed result object
  # @yieldparam err [StandardError] error object if request failed
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#749
  def update_spreadsheet_value(spreadsheet_id, range, value_range_object = T.unsafe(nil), include_values_in_response: T.unsafe(nil), response_date_time_render_option: T.unsafe(nil), response_value_render_option: T.unsafe(nil), value_input_option: T.unsafe(nil), fields: T.unsafe(nil), quota_user: T.unsafe(nil), options: T.unsafe(nil), &block); end

  protected

  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#768
  def apply_command_defaults(command); end
end

# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/service.rb#35
Google::Apis::SheetsV4::SheetsService::DEFAULT_ENDPOINT_TEMPLATE = T.let(T.unsafe(nil), String)

# A slicer in a sheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9071
class Google::Apis::SheetsV4::Slicer
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Slicer] a new instance of Slicer
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9089
  def initialize(**args); end

  # The position of an embedded object such as a chart.
  # Corresponds to the JSON property `position`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9077
  def position; end

  # The position of an embedded object such as a chart.
  # Corresponds to the JSON property `position`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9077
  def position=(_arg0); end

  # The ID of the slicer.
  # Corresponds to the JSON property `slicerId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9082
  def slicer_id; end

  # The ID of the slicer.
  # Corresponds to the JSON property `slicerId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9082
  def slicer_id=(_arg0); end

  # The specifications of a slicer.
  # Corresponds to the JSON property `spec`
  #
  # @return [Google::Apis::SheetsV4::SlicerSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9087
  def spec; end

  # The specifications of a slicer.
  # Corresponds to the JSON property `spec`
  #
  # @return [Google::Apis::SheetsV4::SlicerSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9087
  def spec=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9094
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1232
class Google::Apis::SheetsV4::Slicer::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The specifications of a slicer.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9102
class Google::Apis::SheetsV4::SlicerSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [SlicerSpec] a new instance of SlicerSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9210
  def initialize(**args); end

  # True if the filter should apply to pivot tables. If not set, default to `True`.
  # Corresponds to the JSON property `applyToPivotTables`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9108
  def apply_to_pivot_tables; end

  # True if the filter should apply to pivot tables. If not set, default to `True`.
  # Corresponds to the JSON property `applyToPivotTables`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9108
  def apply_to_pivot_tables=(_arg0); end

  # True if the filter should apply to pivot tables. If not set, default to `True`.
  # Corresponds to the JSON property `applyToPivotTables`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9108
  def apply_to_pivot_tables?; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `backgroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9158
  def background_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `backgroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9158
  def background_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `backgroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9163
  def background_color_style; end

  # A color value.
  # Corresponds to the JSON property `backgroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9163
  def background_color_style=(_arg0); end

  # The zero-based column index in the data table on which the filter is applied
  # to.
  # Corresponds to the JSON property `columnIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9169
  def column_index; end

  # The zero-based column index in the data table on which the filter is applied
  # to.
  # Corresponds to the JSON property `columnIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9169
  def column_index=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `dataRange`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9186
  def data_range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `dataRange`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9186
  def data_range=(_arg0); end

  # Criteria for showing/hiding rows in a filter or filter view.
  # Corresponds to the JSON property `filterCriteria`
  #
  # @return [Google::Apis::SheetsV4::FilterCriteria]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9191
  def filter_criteria; end

  # Criteria for showing/hiding rows in a filter or filter view.
  # Corresponds to the JSON property `filterCriteria`
  #
  # @return [Google::Apis::SheetsV4::FilterCriteria]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9191
  def filter_criteria=(_arg0); end

  # The horizontal alignment of title in the slicer. If unspecified, defaults to `
  # LEFT`
  # Corresponds to the JSON property `horizontalAlignment`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9197
  def horizontal_alignment; end

  # The horizontal alignment of title in the slicer. If unspecified, defaults to `
  # LEFT`
  # Corresponds to the JSON property `horizontalAlignment`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9197
  def horizontal_alignment=(_arg0); end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9203
  def text_format; end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9203
  def text_format=(_arg0); end

  # The title of the slicer.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9208
  def title; end

  # The title of the slicer.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9208
  def title=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9215
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1238
class Google::Apis::SheetsV4::SlicerSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Sorts data in rows based on a sort order per column.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9229
class Google::Apis::SheetsV4::SortRangeRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [SortRangeRequest] a new instance of SortRangeRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9255
  def initialize(**args); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9247
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9247
  def range=(_arg0); end

  # The sort order per column. Later specifications are used when values are equal
  # in the earlier specifications.
  # Corresponds to the JSON property `sortSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::SortSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9253
  def sort_specs; end

  # The sort order per column. Later specifications are used when values are equal
  # in the earlier specifications.
  # Corresponds to the JSON property `sortSpecs`
  #
  # @return [Array<Google::Apis::SheetsV4::SortSpec>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9253
  def sort_specs=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9260
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1244
class Google::Apis::SheetsV4::SortRangeRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A sort order associated with a specific column or row.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9267
class Google::Apis::SheetsV4::SortSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [SortSpec] a new instance of SortSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9393
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `backgroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9317
  def background_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `backgroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9317
  def background_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `backgroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9322
  def background_color_style; end

  # A color value.
  # Corresponds to the JSON property `backgroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9322
  def background_color_style=(_arg0); end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9327
  def data_source_column_reference; end

  # An unique identifier that references a data source column.
  # Corresponds to the JSON property `dataSourceColumnReference`
  #
  # @return [Google::Apis::SheetsV4::DataSourceColumnReference]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9327
  def data_source_column_reference=(_arg0); end

  # The dimension the sort should be applied to.
  # Corresponds to the JSON property `dimensionIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9332
  def dimension_index; end

  # The dimension the sort should be applied to.
  # Corresponds to the JSON property `dimensionIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9332
  def dimension_index=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `foregroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9381
  def foreground_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `foregroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9381
  def foreground_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `foregroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9386
  def foreground_color_style; end

  # A color value.
  # Corresponds to the JSON property `foregroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9386
  def foreground_color_style=(_arg0); end

  # The order data should be sorted.
  # Corresponds to the JSON property `sortOrder`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9391
  def sort_order; end

  # The order data should be sorted.
  # Corresponds to the JSON property `sortOrder`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9391
  def sort_order=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9398
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1250
class Google::Apis::SheetsV4::SortSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A combination of a source range and how to extend that source.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9410
class Google::Apis::SheetsV4::SourceAndDestination
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [SourceAndDestination] a new instance of SourceAndDestination
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9442
  def initialize(**args); end

  # The dimension that data should be filled into.
  # Corresponds to the JSON property `dimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9416
  def dimension; end

  # The dimension that data should be filled into.
  # Corresponds to the JSON property `dimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9416
  def dimension=(_arg0); end

  # The number of rows or columns that data should be filled into. Positive
  # numbers expand beyond the last row or last column of the source. Negative
  # numbers expand before the first row or first column of the source.
  # Corresponds to the JSON property `fillLength`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9423
  def fill_length; end

  # The number of rows or columns that data should be filled into. Positive
  # numbers expand beyond the last row or last column of the source. Negative
  # numbers expand before the first row or first column of the source.
  # Corresponds to the JSON property `fillLength`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9423
  def fill_length=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9440
  def source; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9440
  def source=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9447
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1256
class Google::Apis::SheetsV4::SourceAndDestination::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Resource that represents a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9455
class Google::Apis::SheetsV4::Spreadsheet
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [Spreadsheet] a new instance of Spreadsheet
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9498
  def initialize(**args); end

  # Output only. A list of data source refresh schedules.
  # Corresponds to the JSON property `dataSourceSchedules`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceRefreshSchedule>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9461
  def data_source_schedules; end

  # Output only. A list of data source refresh schedules.
  # Corresponds to the JSON property `dataSourceSchedules`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSourceRefreshSchedule>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9461
  def data_source_schedules=(_arg0); end

  # A list of external data sources connected with the spreadsheet.
  # Corresponds to the JSON property `dataSources`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSource>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9466
  def data_sources; end

  # A list of external data sources connected with the spreadsheet.
  # Corresponds to the JSON property `dataSources`
  #
  # @return [Array<Google::Apis::SheetsV4::DataSource>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9466
  def data_sources=(_arg0); end

  # The developer metadata associated with a spreadsheet.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9471
  def developer_metadata; end

  # The developer metadata associated with a spreadsheet.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9471
  def developer_metadata=(_arg0); end

  # The named ranges defined in a spreadsheet.
  # Corresponds to the JSON property `namedRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::NamedRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9476
  def named_ranges; end

  # The named ranges defined in a spreadsheet.
  # Corresponds to the JSON property `namedRanges`
  #
  # @return [Array<Google::Apis::SheetsV4::NamedRange>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9476
  def named_ranges=(_arg0); end

  # Properties of a spreadsheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SpreadsheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9481
  def properties; end

  # Properties of a spreadsheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SpreadsheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9481
  def properties=(_arg0); end

  # The sheets that are part of a spreadsheet.
  # Corresponds to the JSON property `sheets`
  #
  # @return [Array<Google::Apis::SheetsV4::Sheet>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9486
  def sheets; end

  # The sheets that are part of a spreadsheet.
  # Corresponds to the JSON property `sheets`
  #
  # @return [Array<Google::Apis::SheetsV4::Sheet>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9486
  def sheets=(_arg0); end

  # The ID of the spreadsheet. This field is read-only.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9491
  def spreadsheet_id; end

  # The ID of the spreadsheet. This field is read-only.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9491
  def spreadsheet_id=(_arg0); end

  # The url of the spreadsheet. This field is read-only.
  # Corresponds to the JSON property `spreadsheetUrl`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9496
  def spreadsheet_url; end

  # The url of the spreadsheet. This field is read-only.
  # Corresponds to the JSON property `spreadsheetUrl`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9496
  def spreadsheet_url=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9503
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1262
class Google::Apis::SheetsV4::Spreadsheet::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Properties of a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9516
class Google::Apis::SheetsV4::SpreadsheetProperties
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [SpreadsheetProperties] a new instance of SpreadsheetProperties
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9568
  def initialize(**args); end

  # The amount of time to wait before volatile functions are recalculated.
  # Corresponds to the JSON property `autoRecalc`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9522
  def auto_recalc; end

  # The amount of time to wait before volatile functions are recalculated.
  # Corresponds to the JSON property `autoRecalc`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9522
  def auto_recalc=(_arg0); end

  # The format of a cell.
  # Corresponds to the JSON property `defaultFormat`
  #
  # @return [Google::Apis::SheetsV4::CellFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9527
  def default_format; end

  # The format of a cell.
  # Corresponds to the JSON property `defaultFormat`
  #
  # @return [Google::Apis::SheetsV4::CellFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9527
  def default_format=(_arg0); end

  # Whether to allow external URL access for image and import functions. Read only
  # when true. When false, you can set to true.
  # Corresponds to the JSON property `importFunctionsExternalUrlAccessAllowed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9533
  def import_functions_external_url_access_allowed; end

  # Whether to allow external URL access for image and import functions. Read only
  # when true. When false, you can set to true.
  # Corresponds to the JSON property `importFunctionsExternalUrlAccessAllowed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9533
  def import_functions_external_url_access_allowed=(_arg0); end

  # Whether to allow external URL access for image and import functions. Read only
  # when true. When false, you can set to true.
  # Corresponds to the JSON property `importFunctionsExternalUrlAccessAllowed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9533
  def import_functions_external_url_access_allowed?; end

  # Settings to control how circular dependencies are resolved with iterative
  # calculation.
  # Corresponds to the JSON property `iterativeCalculationSettings`
  #
  # @return [Google::Apis::SheetsV4::IterativeCalculationSettings]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9540
  def iterative_calculation_settings; end

  # Settings to control how circular dependencies are resolved with iterative
  # calculation.
  # Corresponds to the JSON property `iterativeCalculationSettings`
  #
  # @return [Google::Apis::SheetsV4::IterativeCalculationSettings]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9540
  def iterative_calculation_settings=(_arg0); end

  # The locale of the spreadsheet in one of the following formats: * an ISO 639-1
  # language code such as `en` * an ISO 639-2 language code such as `fil`, if no
  # 639-1 code exists * a combination of the ISO language code and country code,
  # such as `en_US` Note: when updating this field, not all locales/languages are
  # supported.
  # Corresponds to the JSON property `locale`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9549
  def locale; end

  # The locale of the spreadsheet in one of the following formats: * an ISO 639-1
  # language code such as `en` * an ISO 639-2 language code such as `fil`, if no
  # 639-1 code exists * a combination of the ISO language code and country code,
  # such as `en_US` Note: when updating this field, not all locales/languages are
  # supported.
  # Corresponds to the JSON property `locale`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9549
  def locale=(_arg0); end

  # Represents spreadsheet theme
  # Corresponds to the JSON property `spreadsheetTheme`
  #
  # @return [Google::Apis::SheetsV4::SpreadsheetTheme]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9554
  def spreadsheet_theme; end

  # Represents spreadsheet theme
  # Corresponds to the JSON property `spreadsheetTheme`
  #
  # @return [Google::Apis::SheetsV4::SpreadsheetTheme]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9554
  def spreadsheet_theme=(_arg0); end

  # The time zone of the spreadsheet, in CLDR format such as `America/New_York`.
  # If the time zone isn't recognized, this may be a custom time zone such as `GMT-
  # 07:00`.
  # Corresponds to the JSON property `timeZone`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9561
  def time_zone; end

  # The time zone of the spreadsheet, in CLDR format such as `America/New_York`.
  # If the time zone isn't recognized, this may be a custom time zone such as `GMT-
  # 07:00`.
  # Corresponds to the JSON property `timeZone`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9561
  def time_zone=(_arg0); end

  # The title of the spreadsheet.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9566
  def title; end

  # The title of the spreadsheet.
  # Corresponds to the JSON property `title`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9566
  def title=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9573
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1268
class Google::Apis::SheetsV4::SpreadsheetProperties::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Represents spreadsheet theme
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9586
class Google::Apis::SheetsV4::SpreadsheetTheme
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [SpreadsheetTheme] a new instance of SpreadsheetTheme
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9600
  def initialize(**args); end

  # Name of the primary font family.
  # Corresponds to the JSON property `primaryFontFamily`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9592
  def primary_font_family; end

  # Name of the primary font family.
  # Corresponds to the JSON property `primaryFontFamily`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9592
  def primary_font_family=(_arg0); end

  # The spreadsheet theme color pairs. To update you must provide all theme color
  # pairs.
  # Corresponds to the JSON property `themeColors`
  #
  # @return [Array<Google::Apis::SheetsV4::ThemeColorPair>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9598
  def theme_colors; end

  # The spreadsheet theme color pairs. To update you must provide all theme color
  # pairs.
  # Corresponds to the JSON property `themeColors`
  #
  # @return [Array<Google::Apis::SheetsV4::ThemeColorPair>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9598
  def theme_colors=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9605
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1274
class Google::Apis::SheetsV4::SpreadsheetTheme::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The format of a run of text in a cell. Absent values indicate that the field
# isn't specified.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9613
class Google::Apis::SheetsV4::TextFormat
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [TextFormat] a new instance of TextFormat
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9709
  def initialize(**args); end

  # True if the text is bold.
  # Corresponds to the JSON property `bold`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9619
  def bold; end

  # True if the text is bold.
  # Corresponds to the JSON property `bold`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9619
  def bold=(_arg0); end

  # True if the text is bold.
  # Corresponds to the JSON property `bold`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9619
  def bold?; end

  # The font family.
  # Corresponds to the JSON property `fontFamily`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9625
  def font_family; end

  # The font family.
  # Corresponds to the JSON property `fontFamily`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9625
  def font_family=(_arg0); end

  # The size of the font.
  # Corresponds to the JSON property `fontSize`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9630
  def font_size; end

  # The size of the font.
  # Corresponds to the JSON property `fontSize`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9630
  def font_size=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `foregroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9679
  def foreground_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `foregroundColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9679
  def foreground_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `foregroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9684
  def foreground_color_style; end

  # A color value.
  # Corresponds to the JSON property `foregroundColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9684
  def foreground_color_style=(_arg0); end

  # True if the text is italicized.
  # Corresponds to the JSON property `italic`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9689
  def italic; end

  # True if the text is italicized.
  # Corresponds to the JSON property `italic`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9689
  def italic=(_arg0); end

  # True if the text is italicized.
  # Corresponds to the JSON property `italic`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9689
  def italic?; end

  # An external or local reference.
  # Corresponds to the JSON property `link`
  #
  # @return [Google::Apis::SheetsV4::Link]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9695
  def link; end

  # An external or local reference.
  # Corresponds to the JSON property `link`
  #
  # @return [Google::Apis::SheetsV4::Link]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9695
  def link=(_arg0); end

  # True if the text has a strikethrough.
  # Corresponds to the JSON property `strikethrough`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9700
  def strikethrough; end

  # True if the text has a strikethrough.
  # Corresponds to the JSON property `strikethrough`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9700
  def strikethrough=(_arg0); end

  # True if the text has a strikethrough.
  # Corresponds to the JSON property `strikethrough`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9700
  def strikethrough?; end

  # True if the text is underlined.
  # Corresponds to the JSON property `underline`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9706
  def underline; end

  # True if the text is underlined.
  # Corresponds to the JSON property `underline`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9706
  def underline=(_arg0); end

  # True if the text is underlined.
  # Corresponds to the JSON property `underline`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9706
  def underline?; end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9714
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1280
class Google::Apis::SheetsV4::TextFormat::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A run of a text format. The format of this run continues until the start index
# of the next run. When updating, all fields must be set.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9729
class Google::Apis::SheetsV4::TextFormatRun
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [TextFormatRun] a new instance of TextFormatRun
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9743
  def initialize(**args); end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `format`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9736
  def format; end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `format`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9736
  def format=(_arg0); end

  # The zero-based character index where this run starts, in UTF-16 code units.
  # Corresponds to the JSON property `startIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9741
  def start_index; end

  # The zero-based character index where this run starts, in UTF-16 code units.
  # Corresponds to the JSON property `startIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9741
  def start_index=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9748
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1286
class Google::Apis::SheetsV4::TextFormatRun::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Position settings for text.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9755
class Google::Apis::SheetsV4::TextPosition
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [TextPosition] a new instance of TextPosition
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9763
  def initialize(**args); end

  # Horizontal alignment setting for the piece of text.
  # Corresponds to the JSON property `horizontalAlignment`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9761
  def horizontal_alignment; end

  # Horizontal alignment setting for the piece of text.
  # Corresponds to the JSON property `horizontalAlignment`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9761
  def horizontal_alignment=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9768
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1292
class Google::Apis::SheetsV4::TextPosition::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The rotation applied to text in a cell.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9774
class Google::Apis::SheetsV4::TextRotation
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [TextRotation] a new instance of TextRotation
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9794
  def initialize(**args); end

  # The angle between the standard orientation and the desired orientation.
  # Measured in degrees. Valid values are between -90 and 90. Positive angles are
  # angled upwards, negative are angled downwards. Note: For LTR text direction
  # positive angles are in the counterclockwise direction, whereas for RTL they
  # are in the clockwise direction
  # Corresponds to the JSON property `angle`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9784
  def angle; end

  # The angle between the standard orientation and the desired orientation.
  # Measured in degrees. Valid values are between -90 and 90. Positive angles are
  # angled upwards, negative are angled downwards. Note: For LTR text direction
  # positive angles are in the counterclockwise direction, whereas for RTL they
  # are in the clockwise direction
  # Corresponds to the JSON property `angle`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9784
  def angle=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9799
  def update!(**args); end

  # If true, text reads top to bottom, but the orientation of individual
  # characters is unchanged. For example: | V | | e | | r | | t | | i | | c | | a |
  # | l |
  # Corresponds to the JSON property `vertical`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9791
  def vertical; end

  # If true, text reads top to bottom, but the orientation of individual
  # characters is unchanged. For example: | V | | e | | r | | t | | i | | c | | a |
  # | l |
  # Corresponds to the JSON property `vertical`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9791
  def vertical=(_arg0); end

  # If true, text reads top to bottom, but the orientation of individual
  # characters is unchanged. For example: | V | | e | | r | | t | | i | | c | | a |
  # | l |
  # Corresponds to the JSON property `vertical`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9791
  def vertical?; end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1298
class Google::Apis::SheetsV4::TextRotation::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Splits a column of text into multiple columns, based on a delimiter in each
# cell.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9807
class Google::Apis::SheetsV4::TextToColumnsRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [TextToColumnsRequest] a new instance of TextToColumnsRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9837
  def initialize(**args); end

  # The delimiter to use. Used only if delimiterType is CUSTOM.
  # Corresponds to the JSON property `delimiter`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9813
  def delimiter; end

  # The delimiter to use. Used only if delimiterType is CUSTOM.
  # Corresponds to the JSON property `delimiter`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9813
  def delimiter=(_arg0); end

  # The delimiter type to use.
  # Corresponds to the JSON property `delimiterType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9818
  def delimiter_type; end

  # The delimiter type to use.
  # Corresponds to the JSON property `delimiterType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9818
  def delimiter_type=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9835
  def source; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `source`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9835
  def source=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9842
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1304
class Google::Apis::SheetsV4::TextToColumnsRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A pair mapping a spreadsheet theme color type to the concrete color it
# represents.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9851
class Google::Apis::SheetsV4::ThemeColorPair
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ThemeColorPair] a new instance of ThemeColorPair
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9864
  def initialize(**args); end

  # A color value.
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9857
  def color; end

  # A color value.
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9857
  def color=(_arg0); end

  # The type of the spreadsheet theme color.
  # Corresponds to the JSON property `colorType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9862
  def color_type; end

  # The type of the spreadsheet theme color.
  # Corresponds to the JSON property `colorType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9862
  def color_type=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9869
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1310
class Google::Apis::SheetsV4::ThemeColorPair::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Represents a time of day. The date and time zone are either not significant or
# are specified elsewhere. An API may choose to allow leap seconds. Related
# types are google.type.Date and `google.protobuf.Timestamp`.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9878
class Google::Apis::SheetsV4::TimeOfDay
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [TimeOfDay] a new instance of TimeOfDay
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9903
  def initialize(**args); end

  # Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to
  # allow the value "24:00:00" for scenarios like business closing time.
  # Corresponds to the JSON property `hours`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9885
  def hours; end

  # Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to
  # allow the value "24:00:00" for scenarios like business closing time.
  # Corresponds to the JSON property `hours`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9885
  def hours=(_arg0); end

  # Minutes of hour of day. Must be from 0 to 59.
  # Corresponds to the JSON property `minutes`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9890
  def minutes; end

  # Minutes of hour of day. Must be from 0 to 59.
  # Corresponds to the JSON property `minutes`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9890
  def minutes=(_arg0); end

  # Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
  # Corresponds to the JSON property `nanos`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9895
  def nanos; end

  # Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
  # Corresponds to the JSON property `nanos`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9895
  def nanos=(_arg0); end

  # Seconds of minutes of the time. Must normally be from 0 to 59. An API may
  # allow the value 60 if it allows leap-seconds.
  # Corresponds to the JSON property `seconds`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9901
  def seconds; end

  # Seconds of minutes of the time. Must normally be from 0 to 59. An API may
  # allow the value 60 if it allows leap-seconds.
  # Corresponds to the JSON property `seconds`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9901
  def seconds=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9908
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1316
class Google::Apis::SheetsV4::TimeOfDay::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A color scale for a treemap chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9917
class Google::Apis::SheetsV4::TreemapChartColorScale
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [TreemapChartColorScale] a new instance of TreemapChartColorScale
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10136
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `maxValueColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9967
  def max_value_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `maxValueColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9967
  def max_value_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `maxValueColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9972
  def max_value_color_style; end

  # A color value.
  # Corresponds to the JSON property `maxValueColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#9972
  def max_value_color_style=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `midValueColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10021
  def mid_value_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `midValueColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10021
  def mid_value_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `midValueColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10026
  def mid_value_color_style; end

  # A color value.
  # Corresponds to the JSON property `midValueColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10026
  def mid_value_color_style=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `minValueColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10075
  def min_value_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `minValueColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10075
  def min_value_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `minValueColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10080
  def min_value_color_style; end

  # A color value.
  # Corresponds to the JSON property `minValueColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10080
  def min_value_color_style=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `noDataColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10129
  def no_data_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `noDataColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10129
  def no_data_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `noDataColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10134
  def no_data_color_style; end

  # A color value.
  # Corresponds to the JSON property `noDataColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10134
  def no_data_color_style=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10141
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1322
class Google::Apis::SheetsV4::TreemapChartColorScale::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A Treemap chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10154
class Google::Apis::SheetsV4::TreemapChartSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [TreemapChartSpec] a new instance of TreemapChartSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10277
  def initialize(**args); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `colorData`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10160
  def color_data; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `colorData`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10160
  def color_data=(_arg0); end

  # A color scale for a treemap chart.
  # Corresponds to the JSON property `colorScale`
  #
  # @return [Google::Apis::SheetsV4::TreemapChartColorScale]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10165
  def color_scale; end

  # A color scale for a treemap chart.
  # Corresponds to the JSON property `colorScale`
  #
  # @return [Google::Apis::SheetsV4::TreemapChartColorScale]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10165
  def color_scale=(_arg0); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `headerColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10214
  def header_color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `headerColor`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10214
  def header_color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `headerColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10219
  def header_color_style; end

  # A color value.
  # Corresponds to the JSON property `headerColorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10219
  def header_color_style=(_arg0); end

  # True to hide tooltips.
  # Corresponds to the JSON property `hideTooltips`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10224
  def hide_tooltips; end

  # True to hide tooltips.
  # Corresponds to the JSON property `hideTooltips`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10224
  def hide_tooltips=(_arg0); end

  # True to hide tooltips.
  # Corresponds to the JSON property `hideTooltips`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10224
  def hide_tooltips?; end

  # The number of additional data levels beyond the labeled levels to be shown on
  # the treemap chart. These levels are not interactive and are shown without
  # their labels. Defaults to 0 if not specified.
  # Corresponds to the JSON property `hintedLevels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10232
  def hinted_levels; end

  # The number of additional data levels beyond the labeled levels to be shown on
  # the treemap chart. These levels are not interactive and are shown without
  # their labels. Defaults to 0 if not specified.
  # Corresponds to the JSON property `hintedLevels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10232
  def hinted_levels=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `labels`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10237
  def labels; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `labels`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10237
  def labels=(_arg0); end

  # The number of data levels to show on the treemap chart. These levels are
  # interactive and are shown with their labels. Defaults to 2 if not specified.
  # Corresponds to the JSON property `levels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10243
  def levels; end

  # The number of data levels to show on the treemap chart. These levels are
  # interactive and are shown with their labels. Defaults to 2 if not specified.
  # Corresponds to the JSON property `levels`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10243
  def levels=(_arg0); end

  # The maximum possible data value. Cells with values greater than this will have
  # the same color as cells with this value. If not specified, defaults to the
  # actual maximum value from color_data, or the maximum value from size_data if
  # color_data is not specified.
  # Corresponds to the JSON property `maxValue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10251
  def max_value; end

  # The maximum possible data value. Cells with values greater than this will have
  # the same color as cells with this value. If not specified, defaults to the
  # actual maximum value from color_data, or the maximum value from size_data if
  # color_data is not specified.
  # Corresponds to the JSON property `maxValue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10251
  def max_value=(_arg0); end

  # The minimum possible data value. Cells with values less than this will have
  # the same color as cells with this value. If not specified, defaults to the
  # actual minimum value from color_data, or the minimum value from size_data if
  # color_data is not specified.
  # Corresponds to the JSON property `minValue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10259
  def min_value; end

  # The minimum possible data value. Cells with values less than this will have
  # the same color as cells with this value. If not specified, defaults to the
  # actual minimum value from color_data, or the minimum value from size_data if
  # color_data is not specified.
  # Corresponds to the JSON property `minValue`
  #
  # @return [Float]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10259
  def min_value=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `parentLabels`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10264
  def parent_labels; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `parentLabels`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10264
  def parent_labels=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `sizeData`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10269
  def size_data; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `sizeData`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10269
  def size_data=(_arg0); end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10275
  def text_format; end

  # The format of a run of text in a cell. Absent values indicate that the field
  # isn't specified.
  # Corresponds to the JSON property `textFormat`
  #
  # @return [Google::Apis::SheetsV4::TextFormat]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10275
  def text_format=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10282
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1328
class Google::Apis::SheetsV4::TreemapChartSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Trims the whitespace (such as spaces, tabs, or new lines) in every cell in the
# specified range. This request removes all whitespace from the start and end of
# each cell's text, and reduces any subsequence of remaining whitespace
# characters to a single space. If the resulting trimmed text starts with a '+'
# or '=' character, the text remains as a string value and isn't interpreted as
# a formula.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10305
class Google::Apis::SheetsV4::TrimWhitespaceRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [TrimWhitespaceRequest] a new instance of TrimWhitespaceRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10325
  def initialize(**args); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10323
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10323
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10330
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1334
class Google::Apis::SheetsV4::TrimWhitespaceRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of trimming whitespace in cells.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10336
class Google::Apis::SheetsV4::TrimWhitespaceResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [TrimWhitespaceResponse] a new instance of TrimWhitespaceResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10344
  def initialize(**args); end

  # The number of cells that were trimmed of whitespace.
  # Corresponds to the JSON property `cellsChangedCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10342
  def cells_changed_count; end

  # The number of cells that were trimmed of whitespace.
  # Corresponds to the JSON property `cellsChangedCount`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10342
  def cells_changed_count=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10349
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1340
class Google::Apis::SheetsV4::TrimWhitespaceResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Unmerges cells in the given range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10355
class Google::Apis::SheetsV4::UnmergeCellsRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UnmergeCellsRequest] a new instance of UnmergeCellsRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10375
  def initialize(**args); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10373
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10373
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10380
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1346
class Google::Apis::SheetsV4::UnmergeCellsRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates properties of the supplied banded range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10386
class Google::Apis::SheetsV4::UpdateBandingRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateBandingRequest] a new instance of UpdateBandingRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10401
  def initialize(**args); end

  # A banded (alternating colors) range in a sheet.
  # Corresponds to the JSON property `bandedRange`
  #
  # @return [Google::Apis::SheetsV4::BandedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10392
  def banded_range; end

  # A banded (alternating colors) range in a sheet.
  # Corresponds to the JSON property `bandedRange`
  #
  # @return [Google::Apis::SheetsV4::BandedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10392
  def banded_range=(_arg0); end

  # The fields that should be updated. At least one field must be specified. The
  # root `bandedRange` is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10399
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `bandedRange` is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10399
  def fields=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10406
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1352
class Google::Apis::SheetsV4::UpdateBandingRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates the borders of a range. If a field is not set in the request, that
# means the border remains as-is. For example, with two subsequent
# UpdateBordersRequest: 1. range: A1:A5 `` top: RED, bottom: WHITE `` 2. range:
# A1:A5 `` left: BLUE `` That would result in A1:A5 having a borders of `` top:
# RED, bottom: WHITE, left: BLUE ``. If you want to clear a border, explicitly
# set the style to NONE.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10418
class Google::Apis::SheetsV4::UpdateBordersRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateBordersRequest] a new instance of UpdateBordersRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10468
  def initialize(**args); end

  # A border along a cell.
  # Corresponds to the JSON property `bottom`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10424
  def bottom; end

  # A border along a cell.
  # Corresponds to the JSON property `bottom`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10424
  def bottom=(_arg0); end

  # A border along a cell.
  # Corresponds to the JSON property `innerHorizontal`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10429
  def inner_horizontal; end

  # A border along a cell.
  # Corresponds to the JSON property `innerHorizontal`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10429
  def inner_horizontal=(_arg0); end

  # A border along a cell.
  # Corresponds to the JSON property `innerVertical`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10434
  def inner_vertical; end

  # A border along a cell.
  # Corresponds to the JSON property `innerVertical`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10434
  def inner_vertical=(_arg0); end

  # A border along a cell.
  # Corresponds to the JSON property `left`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10439
  def left; end

  # A border along a cell.
  # Corresponds to the JSON property `left`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10439
  def left=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10456
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10456
  def range=(_arg0); end

  # A border along a cell.
  # Corresponds to the JSON property `right`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10461
  def right; end

  # A border along a cell.
  # Corresponds to the JSON property `right`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10461
  def right=(_arg0); end

  # A border along a cell.
  # Corresponds to the JSON property `top`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10466
  def top; end

  # A border along a cell.
  # Corresponds to the JSON property `top`
  #
  # @return [Google::Apis::SheetsV4::Border]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10466
  def top=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10473
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1358
class Google::Apis::SheetsV4::UpdateBordersRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates all cells in a range with new data.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10485
class Google::Apis::SheetsV4::UpdateCellsRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateCellsRequest] a new instance of UpdateCellsRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10522
  def initialize(**args); end

  # The fields of CellData that should be updated. At least one field must be
  # specified. The root is the CellData; 'row.values.' should not be specified. A
  # single `"*"` can be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10493
  def fields; end

  # The fields of CellData that should be updated. At least one field must be
  # specified. The root is the CellData; 'row.values.' should not be specified. A
  # single `"*"` can be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10493
  def fields=(_arg0); end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10510
  def range; end

  # A range on a sheet. All indexes are zero-based. Indexes are half open, i.e.
  # the start index is inclusive and the end index is exclusive -- [start_index,
  # end_index). Missing indexes indicate the range is unbounded on that side. For
  # example, if `"Sheet1"` is sheet ID 123456, then: `Sheet1!A1:A1 == sheet_id:
  # 123456, start_row_index: 0, end_row_index: 1, start_column_index: 0,
  # end_column_index: 1` `Sheet1!A3:B4 == sheet_id: 123456, start_row_index: 2,
  # end_row_index: 4, start_column_index: 0, end_column_index: 2` `Sheet1!A:B ==
  # sheet_id: 123456, start_column_index: 0, end_column_index: 2` `Sheet1!A5:B ==
  # sheet_id: 123456, start_row_index: 4, start_column_index: 0, end_column_index:
  # 2` `Sheet1 == sheet_id: 123456` The start index must always be less than or
  # equal to the end index. If the start index equals the end index, then the
  # range is empty. Empty ranges are typically not meaningful and are usually
  # rendered in the UI as `#REF!`.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::GridRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10510
  def range=(_arg0); end

  # The data to write.
  # Corresponds to the JSON property `rows`
  #
  # @return [Array<Google::Apis::SheetsV4::RowData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10515
  def rows; end

  # The data to write.
  # Corresponds to the JSON property `rows`
  #
  # @return [Array<Google::Apis::SheetsV4::RowData>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10515
  def rows=(_arg0); end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `start`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10520
  def start; end

  # A coordinate in a sheet. All indexes are zero-based.
  # Corresponds to the JSON property `start`
  #
  # @return [Google::Apis::SheetsV4::GridCoordinate]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10520
  def start=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10527
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1364
class Google::Apis::SheetsV4::UpdateCellsRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates a chart's specifications. (This does not move or resize a chart. To
# move or resize a chart, use UpdateEmbeddedObjectPositionRequest.)
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10537
class Google::Apis::SheetsV4::UpdateChartSpecRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateChartSpecRequest] a new instance of UpdateChartSpecRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10550
  def initialize(**args); end

  # The ID of the chart to update.
  # Corresponds to the JSON property `chartId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10543
  def chart_id; end

  # The ID of the chart to update.
  # Corresponds to the JSON property `chartId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10543
  def chart_id=(_arg0); end

  # The specifications of a chart.
  # Corresponds to the JSON property `spec`
  #
  # @return [Google::Apis::SheetsV4::ChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10548
  def spec; end

  # The specifications of a chart.
  # Corresponds to the JSON property `spec`
  #
  # @return [Google::Apis::SheetsV4::ChartSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10548
  def spec=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10555
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1370
class Google::Apis::SheetsV4::UpdateChartSpecRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates a conditional format rule at the given index, or moves a conditional
# format rule to another index.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10563
class Google::Apis::SheetsV4::UpdateConditionalFormatRuleRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateConditionalFormatRuleRequest] a new instance of UpdateConditionalFormatRuleRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10586
  def initialize(**args); end

  # The zero-based index of the rule that should be replaced or moved.
  # Corresponds to the JSON property `index`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10569
  def index; end

  # The zero-based index of the rule that should be replaced or moved.
  # Corresponds to the JSON property `index`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10569
  def index=(_arg0); end

  # The zero-based new index the rule should end up at.
  # Corresponds to the JSON property `newIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10574
  def new_index; end

  # The zero-based new index the rule should end up at.
  # Corresponds to the JSON property `newIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10574
  def new_index=(_arg0); end

  # A rule describing a conditional format.
  # Corresponds to the JSON property `rule`
  #
  # @return [Google::Apis::SheetsV4::ConditionalFormatRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10579
  def rule; end

  # A rule describing a conditional format.
  # Corresponds to the JSON property `rule`
  #
  # @return [Google::Apis::SheetsV4::ConditionalFormatRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10579
  def rule=(_arg0); end

  # The sheet of the rule to move. Required if new_index is set, unused otherwise.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10584
  def sheet_id; end

  # The sheet of the rule to move. Required if new_index is set, unused otherwise.
  # Corresponds to the JSON property `sheetId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10584
  def sheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10591
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1376
class Google::Apis::SheetsV4::UpdateConditionalFormatRuleRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of updating a conditional format rule.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10600
class Google::Apis::SheetsV4::UpdateConditionalFormatRuleResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateConditionalFormatRuleResponse] a new instance of UpdateConditionalFormatRuleResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10624
  def initialize(**args); end

  # The index of the new rule.
  # Corresponds to the JSON property `newIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10606
  def new_index; end

  # The index of the new rule.
  # Corresponds to the JSON property `newIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10606
  def new_index=(_arg0); end

  # A rule describing a conditional format.
  # Corresponds to the JSON property `newRule`
  #
  # @return [Google::Apis::SheetsV4::ConditionalFormatRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10611
  def new_rule; end

  # A rule describing a conditional format.
  # Corresponds to the JSON property `newRule`
  #
  # @return [Google::Apis::SheetsV4::ConditionalFormatRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10611
  def new_rule=(_arg0); end

  # The old index of the rule. Not set if a rule was replaced (because it is the
  # same as new_index).
  # Corresponds to the JSON property `oldIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10617
  def old_index; end

  # The old index of the rule. Not set if a rule was replaced (because it is the
  # same as new_index).
  # Corresponds to the JSON property `oldIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10617
  def old_index=(_arg0); end

  # A rule describing a conditional format.
  # Corresponds to the JSON property `oldRule`
  #
  # @return [Google::Apis::SheetsV4::ConditionalFormatRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10622
  def old_rule; end

  # A rule describing a conditional format.
  # Corresponds to the JSON property `oldRule`
  #
  # @return [Google::Apis::SheetsV4::ConditionalFormatRule]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10622
  def old_rule=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10629
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1382
class Google::Apis::SheetsV4::UpdateConditionalFormatRuleResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates a data source. After the data source is updated successfully, an
# execution is triggered to refresh the associated DATA_SOURCE sheet to read
# data from the updated data source. The request requires an additional `
# bigquery.readonly` OAuth scope if you are updating a BigQuery data source.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10641
class Google::Apis::SheetsV4::UpdateDataSourceRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateDataSourceRequest] a new instance of UpdateDataSourceRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10656
  def initialize(**args); end

  # Information about an external data source in the spreadsheet.
  # Corresponds to the JSON property `dataSource`
  #
  # @return [Google::Apis::SheetsV4::DataSource]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10647
  def data_source; end

  # Information about an external data source in the spreadsheet.
  # Corresponds to the JSON property `dataSource`
  #
  # @return [Google::Apis::SheetsV4::DataSource]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10647
  def data_source=(_arg0); end

  # The fields that should be updated. At least one field must be specified. The
  # root `dataSource` is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10654
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `dataSource` is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10654
  def fields=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10661
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1388
class Google::Apis::SheetsV4::UpdateDataSourceRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response from updating data source.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10668
class Google::Apis::SheetsV4::UpdateDataSourceResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateDataSourceResponse] a new instance of UpdateDataSourceResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10689
  def initialize(**args); end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10682
  def data_execution_status; end

  # The data execution status. A data execution is created to sync a data source
  # object with the latest data from a DataSource. It is usually scheduled to run
  # at background, you can check its state to tell if an execution completes There
  # are several scenarios where a data execution is triggered to run: * Adding a
  # data source creates an associated data source sheet as well as a data
  # execution to sync the data from the data source to the sheet. * Updating a
  # data source creates a data execution to refresh the associated data source
  # sheet similarly. * You can send refresh request to explicitly refresh one or
  # multiple data source objects.
  # Corresponds to the JSON property `dataExecutionStatus`
  #
  # @return [Google::Apis::SheetsV4::DataExecutionStatus]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10682
  def data_execution_status=(_arg0); end

  # Information about an external data source in the spreadsheet.
  # Corresponds to the JSON property `dataSource`
  #
  # @return [Google::Apis::SheetsV4::DataSource]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10687
  def data_source; end

  # Information about an external data source in the spreadsheet.
  # Corresponds to the JSON property `dataSource`
  #
  # @return [Google::Apis::SheetsV4::DataSource]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10687
  def data_source=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10694
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1394
class Google::Apis::SheetsV4::UpdateDataSourceResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A request to update properties of developer metadata. Updates the properties
# of the developer metadata selected by the filters to the values provided in
# the DeveloperMetadata resource. Callers must specify the properties they wish
# to update in the fields parameter, as well as specify at least one DataFilter
# matching the metadata they wish to update.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10705
class Google::Apis::SheetsV4::UpdateDeveloperMetadataRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateDeveloperMetadataRequest] a new instance of UpdateDeveloperMetadataRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10732
  def initialize(**args); end

  # The filters matching the developer metadata entries to update.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10711
  def data_filters; end

  # The filters matching the developer metadata entries to update.
  # Corresponds to the JSON property `dataFilters`
  #
  # @return [Array<Google::Apis::SheetsV4::DataFilter>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10711
  def data_filters=(_arg0); end

  # Developer metadata associated with a location or object in a spreadsheet.
  # Developer metadata may be used to associate arbitrary data with various parts
  # of a spreadsheet and will remain associated at those locations as they move
  # around and the spreadsheet is edited. For example, if developer metadata is
  # associated with row 5 and another row is then subsequently inserted above row
  # 5, that original metadata will still be associated with the row it was first
  # associated with (what is now row 6). If the associated object is deleted its
  # metadata is deleted too.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadata]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10723
  def developer_metadata; end

  # Developer metadata associated with a location or object in a spreadsheet.
  # Developer metadata may be used to associate arbitrary data with various parts
  # of a spreadsheet and will remain associated at those locations as they move
  # around and the spreadsheet is edited. For example, if developer metadata is
  # associated with row 5 and another row is then subsequently inserted above row
  # 5, that original metadata will still be associated with the row it was first
  # associated with (what is now row 6). If the associated object is deleted its
  # metadata is deleted too.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Google::Apis::SheetsV4::DeveloperMetadata]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10723
  def developer_metadata=(_arg0); end

  # The fields that should be updated. At least one field must be specified. The
  # root `developerMetadata` is implied and should not be specified. A single `"*"`
  # can be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10730
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `developerMetadata` is implied and should not be specified. A single `"*"`
  # can be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10730
  def fields=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10737
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1400
class Google::Apis::SheetsV4::UpdateDeveloperMetadataRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response from updating developer metadata.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10745
class Google::Apis::SheetsV4::UpdateDeveloperMetadataResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateDeveloperMetadataResponse] a new instance of UpdateDeveloperMetadataResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10753
  def initialize(**args); end

  # The updated developer metadata.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10751
  def developer_metadata; end

  # The updated developer metadata.
  # Corresponds to the JSON property `developerMetadata`
  #
  # @return [Array<Google::Apis::SheetsV4::DeveloperMetadata>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10751
  def developer_metadata=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10758
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1406
class Google::Apis::SheetsV4::UpdateDeveloperMetadataResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates the state of the specified group.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10764
class Google::Apis::SheetsV4::UpdateDimensionGroupRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateDimensionGroupRequest] a new instance of UpdateDimensionGroupRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10781
  def initialize(**args); end

  # A group over an interval of rows or columns on a sheet, which can contain or
  # be contained within other groups. A group can be collapsed or expanded as a
  # unit on the sheet.
  # Corresponds to the JSON property `dimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::DimensionGroup]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10772
  def dimension_group; end

  # A group over an interval of rows or columns on a sheet, which can contain or
  # be contained within other groups. A group can be collapsed or expanded as a
  # unit on the sheet.
  # Corresponds to the JSON property `dimensionGroup`
  #
  # @return [Google::Apis::SheetsV4::DimensionGroup]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10772
  def dimension_group=(_arg0); end

  # The fields that should be updated. At least one field must be specified. The
  # root `dimensionGroup` is implied and should not be specified. A single `"*"`
  # can be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10779
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `dimensionGroup` is implied and should not be specified. A single `"*"`
  # can be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10779
  def fields=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10786
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1412
class Google::Apis::SheetsV4::UpdateDimensionGroupRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates properties of dimensions within the specified range.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10793
class Google::Apis::SheetsV4::UpdateDimensionPropertiesRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateDimensionPropertiesRequest] a new instance of UpdateDimensionPropertiesRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10820
  def initialize(**args); end

  # A range along a single dimension on a DATA_SOURCE sheet.
  # Corresponds to the JSON property `dataSourceSheetRange`
  #
  # @return [Google::Apis::SheetsV4::DataSourceSheetDimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10799
  def data_source_sheet_range; end

  # A range along a single dimension on a DATA_SOURCE sheet.
  # Corresponds to the JSON property `dataSourceSheetRange`
  #
  # @return [Google::Apis::SheetsV4::DataSourceSheetDimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10799
  def data_source_sheet_range=(_arg0); end

  # The fields that should be updated. At least one field must be specified. The
  # root `properties` is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10806
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `properties` is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10806
  def fields=(_arg0); end

  # Properties about a dimension.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::DimensionProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10811
  def properties; end

  # Properties about a dimension.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::DimensionProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10811
  def properties=(_arg0); end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10818
  def range; end

  # A range along a single dimension on a sheet. All indexes are zero-based.
  # Indexes are half open: the start index is inclusive and the end index is
  # exclusive. Missing indexes indicate the range is unbounded on that side.
  # Corresponds to the JSON property `range`
  #
  # @return [Google::Apis::SheetsV4::DimensionRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10818
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10825
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1418
class Google::Apis::SheetsV4::UpdateDimensionPropertiesRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates an embedded object's border property.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10834
class Google::Apis::SheetsV4::UpdateEmbeddedObjectBorderRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateEmbeddedObjectBorderRequest] a new instance of UpdateEmbeddedObjectBorderRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10854
  def initialize(**args); end

  # A border along an embedded object.
  # Corresponds to the JSON property `border`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectBorder]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10840
  def border; end

  # A border along an embedded object.
  # Corresponds to the JSON property `border`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectBorder]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10840
  def border=(_arg0); end

  # The fields that should be updated. At least one field must be specified. The
  # root `border` is implied and should not be specified. A single `"*"` can be
  # used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10847
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `border` is implied and should not be specified. A single `"*"` can be
  # used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10847
  def fields=(_arg0); end

  # The ID of the embedded object to update.
  # Corresponds to the JSON property `objectId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10852
  def object_id_prop; end

  # The ID of the embedded object to update.
  # Corresponds to the JSON property `objectId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10852
  def object_id_prop=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10859
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1424
class Google::Apis::SheetsV4::UpdateEmbeddedObjectBorderRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Update an embedded object's position (such as a moving or resizing a chart or
# image).
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10868
class Google::Apis::SheetsV4::UpdateEmbeddedObjectPositionRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateEmbeddedObjectPositionRequest] a new instance of UpdateEmbeddedObjectPositionRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10890
  def initialize(**args); end

  # The fields of OverlayPosition that should be updated when setting a new
  # position. Used only if newPosition.overlayPosition is set, in which case at
  # least one field must be specified. The root `newPosition.overlayPosition` is
  # implied and should not be specified. A single `"*"` can be used as short-hand
  # for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10878
  def fields; end

  # The fields of OverlayPosition that should be updated when setting a new
  # position. Used only if newPosition.overlayPosition is set, in which case at
  # least one field must be specified. The root `newPosition.overlayPosition` is
  # implied and should not be specified. A single `"*"` can be used as short-hand
  # for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10878
  def fields=(_arg0); end

  # The position of an embedded object such as a chart.
  # Corresponds to the JSON property `newPosition`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10883
  def new_position; end

  # The position of an embedded object such as a chart.
  # Corresponds to the JSON property `newPosition`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10883
  def new_position=(_arg0); end

  # The ID of the object to moved.
  # Corresponds to the JSON property `objectId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10888
  def object_id_prop; end

  # The ID of the object to moved.
  # Corresponds to the JSON property `objectId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10888
  def object_id_prop=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10895
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1430
class Google::Apis::SheetsV4::UpdateEmbeddedObjectPositionRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The result of updating an embedded object's position.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10903
class Google::Apis::SheetsV4::UpdateEmbeddedObjectPositionResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateEmbeddedObjectPositionResponse] a new instance of UpdateEmbeddedObjectPositionResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10911
  def initialize(**args); end

  # The position of an embedded object such as a chart.
  # Corresponds to the JSON property `position`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10909
  def position; end

  # The position of an embedded object such as a chart.
  # Corresponds to the JSON property `position`
  #
  # @return [Google::Apis::SheetsV4::EmbeddedObjectPosition]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10909
  def position=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10916
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1436
class Google::Apis::SheetsV4::UpdateEmbeddedObjectPositionResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates properties of the filter view.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10922
class Google::Apis::SheetsV4::UpdateFilterViewRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateFilterViewRequest] a new instance of UpdateFilterViewRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10937
  def initialize(**args); end

  # The fields that should be updated. At least one field must be specified. The
  # root `filter` is implied and should not be specified. A single `"*"` can be
  # used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10930
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `filter` is implied and should not be specified. A single `"*"` can be
  # used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10930
  def fields=(_arg0); end

  # A filter view.
  # Corresponds to the JSON property `filter`
  #
  # @return [Google::Apis::SheetsV4::FilterView]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10935
  def filter; end

  # A filter view.
  # Corresponds to the JSON property `filter`
  #
  # @return [Google::Apis::SheetsV4::FilterView]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10935
  def filter=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10942
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1442
class Google::Apis::SheetsV4::UpdateFilterViewRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates properties of the named range with the specified namedRangeId.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10949
class Google::Apis::SheetsV4::UpdateNamedRangeRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateNamedRangeRequest] a new instance of UpdateNamedRangeRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10964
  def initialize(**args); end

  # The fields that should be updated. At least one field must be specified. The
  # root `namedRange` is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10957
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `namedRange` is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10957
  def fields=(_arg0); end

  # A named range.
  # Corresponds to the JSON property `namedRange`
  #
  # @return [Google::Apis::SheetsV4::NamedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10962
  def named_range; end

  # A named range.
  # Corresponds to the JSON property `namedRange`
  #
  # @return [Google::Apis::SheetsV4::NamedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10962
  def named_range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10969
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1448
class Google::Apis::SheetsV4::UpdateNamedRangeRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates an existing protected range with the specified protectedRangeId.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10976
class Google::Apis::SheetsV4::UpdateProtectedRangeRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateProtectedRangeRequest] a new instance of UpdateProtectedRangeRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10991
  def initialize(**args); end

  # The fields that should be updated. At least one field must be specified. The
  # root `protectedRange` is implied and should not be specified. A single `"*"`
  # can be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10984
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `protectedRange` is implied and should not be specified. A single `"*"`
  # can be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10984
  def fields=(_arg0); end

  # A protected range.
  # Corresponds to the JSON property `protectedRange`
  #
  # @return [Google::Apis::SheetsV4::ProtectedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10989
  def protected_range; end

  # A protected range.
  # Corresponds to the JSON property `protectedRange`
  #
  # @return [Google::Apis::SheetsV4::ProtectedRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10989
  def protected_range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#10996
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1454
class Google::Apis::SheetsV4::UpdateProtectedRangeRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates properties of the sheet with the specified sheetId.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11003
class Google::Apis::SheetsV4::UpdateSheetPropertiesRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateSheetPropertiesRequest] a new instance of UpdateSheetPropertiesRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11018
  def initialize(**args); end

  # The fields that should be updated. At least one field must be specified. The
  # root `properties` is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11011
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `properties` is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11011
  def fields=(_arg0); end

  # Properties of a sheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11016
  def properties; end

  # Properties of a sheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11016
  def properties=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11023
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1460
class Google::Apis::SheetsV4::UpdateSheetPropertiesRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates a slicer's specifications. (This does not move or resize a slicer. To
# move or resize a slicer use UpdateEmbeddedObjectPositionRequest.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11031
class Google::Apis::SheetsV4::UpdateSlicerSpecRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateSlicerSpecRequest] a new instance of UpdateSlicerSpecRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11051
  def initialize(**args); end

  # The fields that should be updated. At least one field must be specified. The
  # root `SlicerSpec` is implied and should not be specified. A single "*"` can be
  # used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11039
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root `SlicerSpec` is implied and should not be specified. A single "*"` can be
  # used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11039
  def fields=(_arg0); end

  # The id of the slicer to update.
  # Corresponds to the JSON property `slicerId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11044
  def slicer_id; end

  # The id of the slicer to update.
  # Corresponds to the JSON property `slicerId`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11044
  def slicer_id=(_arg0); end

  # The specifications of a slicer.
  # Corresponds to the JSON property `spec`
  #
  # @return [Google::Apis::SheetsV4::SlicerSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11049
  def spec; end

  # The specifications of a slicer.
  # Corresponds to the JSON property `spec`
  #
  # @return [Google::Apis::SheetsV4::SlicerSpec]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11049
  def spec=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11056
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1466
class Google::Apis::SheetsV4::UpdateSlicerSpecRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Updates properties of a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11064
class Google::Apis::SheetsV4::UpdateSpreadsheetPropertiesRequest
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateSpreadsheetPropertiesRequest] a new instance of UpdateSpreadsheetPropertiesRequest
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11079
  def initialize(**args); end

  # The fields that should be updated. At least one field must be specified. The
  # root 'properties' is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11072
  def fields; end

  # The fields that should be updated. At least one field must be specified. The
  # root 'properties' is implied and should not be specified. A single `"*"` can
  # be used as short-hand for listing every field.
  # Corresponds to the JSON property `fields`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11072
  def fields=(_arg0); end

  # Properties of a spreadsheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SpreadsheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11077
  def properties; end

  # Properties of a spreadsheet.
  # Corresponds to the JSON property `properties`
  #
  # @return [Google::Apis::SheetsV4::SpreadsheetProperties]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11077
  def properties=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11084
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1472
class Google::Apis::SheetsV4::UpdateSpreadsheetPropertiesRequest::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response when updating a range of values by a data filter in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11091
class Google::Apis::SheetsV4::UpdateValuesByDataFilterResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateValuesByDataFilterResponse] a new instance of UpdateValuesByDataFilterResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11125
  def initialize(**args); end

  # Filter that describes what data should be selected or returned from a request.
  # Corresponds to the JSON property `dataFilter`
  #
  # @return [Google::Apis::SheetsV4::DataFilter]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11097
  def data_filter; end

  # Filter that describes what data should be selected or returned from a request.
  # Corresponds to the JSON property `dataFilter`
  #
  # @return [Google::Apis::SheetsV4::DataFilter]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11097
  def data_filter=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11130
  def update!(**args); end

  # The number of cells updated.
  # Corresponds to the JSON property `updatedCells`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11102
  def updated_cells; end

  # The number of cells updated.
  # Corresponds to the JSON property `updatedCells`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11102
  def updated_cells=(_arg0); end

  # The number of columns where at least one cell in the column was updated.
  # Corresponds to the JSON property `updatedColumns`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11107
  def updated_columns; end

  # The number of columns where at least one cell in the column was updated.
  # Corresponds to the JSON property `updatedColumns`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11107
  def updated_columns=(_arg0); end

  # Data within a range of the spreadsheet.
  # Corresponds to the JSON property `updatedData`
  #
  # @return [Google::Apis::SheetsV4::ValueRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11112
  def updated_data; end

  # Data within a range of the spreadsheet.
  # Corresponds to the JSON property `updatedData`
  #
  # @return [Google::Apis::SheetsV4::ValueRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11112
  def updated_data=(_arg0); end

  # The range (in [A1 notation](/sheets/api/guides/concepts#cell)) that updates
  # were applied to.
  # Corresponds to the JSON property `updatedRange`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11118
  def updated_range; end

  # The range (in [A1 notation](/sheets/api/guides/concepts#cell)) that updates
  # were applied to.
  # Corresponds to the JSON property `updatedRange`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11118
  def updated_range=(_arg0); end

  # The number of rows where at least one cell in the row was updated.
  # Corresponds to the JSON property `updatedRows`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11123
  def updated_rows; end

  # The number of rows where at least one cell in the row was updated.
  # Corresponds to the JSON property `updatedRows`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11123
  def updated_rows=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1478
class Google::Apis::SheetsV4::UpdateValuesByDataFilterResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The response when updating a range of values in a spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11141
class Google::Apis::SheetsV4::UpdateValuesResponse
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [UpdateValuesResponse] a new instance of UpdateValuesResponse
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11174
  def initialize(**args); end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11147
  def spreadsheet_id; end

  # The spreadsheet the updates were applied to.
  # Corresponds to the JSON property `spreadsheetId`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11147
  def spreadsheet_id=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11179
  def update!(**args); end

  # The number of cells updated.
  # Corresponds to the JSON property `updatedCells`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11152
  def updated_cells; end

  # The number of cells updated.
  # Corresponds to the JSON property `updatedCells`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11152
  def updated_cells=(_arg0); end

  # The number of columns where at least one cell in the column was updated.
  # Corresponds to the JSON property `updatedColumns`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11157
  def updated_columns; end

  # The number of columns where at least one cell in the column was updated.
  # Corresponds to the JSON property `updatedColumns`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11157
  def updated_columns=(_arg0); end

  # Data within a range of the spreadsheet.
  # Corresponds to the JSON property `updatedData`
  #
  # @return [Google::Apis::SheetsV4::ValueRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11162
  def updated_data; end

  # Data within a range of the spreadsheet.
  # Corresponds to the JSON property `updatedData`
  #
  # @return [Google::Apis::SheetsV4::ValueRange]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11162
  def updated_data=(_arg0); end

  # The range (in A1 notation) that updates were applied to.
  # Corresponds to the JSON property `updatedRange`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11167
  def updated_range; end

  # The range (in A1 notation) that updates were applied to.
  # Corresponds to the JSON property `updatedRange`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11167
  def updated_range=(_arg0); end

  # The number of rows where at least one cell in the row was updated.
  # Corresponds to the JSON property `updatedRows`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11172
  def updated_rows; end

  # The number of rows where at least one cell in the row was updated.
  # Corresponds to the JSON property `updatedRows`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11172
  def updated_rows=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1484
class Google::Apis::SheetsV4::UpdateValuesResponse::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Version of the Google Sheets API this client connects to.
# This is NOT the gem version.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4.rb#30
Google::Apis::SheetsV4::VERSION = T.let(T.unsafe(nil), String)

# Data within a range of the spreadsheet.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11190
class Google::Apis::SheetsV4::ValueRange
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [ValueRange] a new instance of ValueRange
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11223
  def initialize(**args); end

  # The major dimension of the values. For output, if the spreadsheet data is: `A1=
  # 1,B1=2,A2=3,B2=4`, then requesting `range=A1:B2,majorDimension=ROWS` will
  # return `[[1,2],[3,4]]`, whereas requesting `range=A1:B2,majorDimension=COLUMNS`
  # will return `[[1,3],[2,4]]`. For input, with `range=A1:B2,majorDimension=ROWS`
  # then `[[1,2],[3,4]]` will set `A1=1,B1=2,A2=3,B2=4`. With `range=A1:B2,
  # majorDimension=COLUMNS` then `[[1,2],[3,4]]` will set `A1=1,B1=3,A2=2,B2=4`.
  # When writing, if this field is not set, it defaults to ROWS.
  # Corresponds to the JSON property `majorDimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11202
  def major_dimension; end

  # The major dimension of the values. For output, if the spreadsheet data is: `A1=
  # 1,B1=2,A2=3,B2=4`, then requesting `range=A1:B2,majorDimension=ROWS` will
  # return `[[1,2],[3,4]]`, whereas requesting `range=A1:B2,majorDimension=COLUMNS`
  # will return `[[1,3],[2,4]]`. For input, with `range=A1:B2,majorDimension=ROWS`
  # then `[[1,2],[3,4]]` will set `A1=1,B1=2,A2=3,B2=4`. With `range=A1:B2,
  # majorDimension=COLUMNS` then `[[1,2],[3,4]]` will set `A1=1,B1=3,A2=2,B2=4`.
  # When writing, if this field is not set, it defaults to ROWS.
  # Corresponds to the JSON property `majorDimension`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11202
  def major_dimension=(_arg0); end

  # The range the values cover, in [A1 notation](/sheets/api/guides/concepts#cell).
  # For output, this range indicates the entire requested range, even though the
  # values will exclude trailing rows and columns. When appending values, this
  # field represents the range to search for a table, after which values will be
  # appended.
  # Corresponds to the JSON property `range`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11211
  def range; end

  # The range the values cover, in [A1 notation](/sheets/api/guides/concepts#cell).
  # For output, this range indicates the entire requested range, even though the
  # values will exclude trailing rows and columns. When appending values, this
  # field represents the range to search for a table, after which values will be
  # appended.
  # Corresponds to the JSON property `range`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11211
  def range=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11228
  def update!(**args); end

  # The data that was read or to be written. This is an array of arrays, the outer
  # array representing all the data and each inner array representing a major
  # dimension. Each item in the inner array corresponds with one cell. For output,
  # empty trailing rows and columns will not be included. For input, supported
  # value types are: bool, string, and double. Null values will be skipped. To set
  # a cell to an empty value, set the string value to an empty string.
  # Corresponds to the JSON property `values`
  #
  # @return [Array<Array<Object>>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11221
  def values; end

  # The data that was read or to be written. This is an array of arrays, the outer
  # array representing all the data and each inner array representing a major
  # dimension. Each item in the inner array corresponds with one cell. For output,
  # empty trailing rows and columns will not be included. For input, supported
  # value types are: bool, string, and double. Null values will be skipped. To set
  # a cell to an empty value, set the string value to an empty string.
  # Corresponds to the JSON property `values`
  #
  # @return [Array<Array<Object>>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11221
  def values=(_arg0); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1490
class Google::Apis::SheetsV4::ValueRange::Representation < ::Google::Apis::Core::JsonRepresentation; end

# Styles for a waterfall chart column.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11236
class Google::Apis::SheetsV4::WaterfallChartColumnStyle
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [WaterfallChartColumnStyle] a new instance of WaterfallChartColumnStyle
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11298
  def initialize(**args); end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11286
  def color; end

  # Represents a color in the RGBA color space. This representation is designed
  # for simplicity of conversion to and from color representations in various
  # languages over compactness. For example, the fields of this representation can
  # be trivially provided to the constructor of `java.awt.Color` in Java; it can
  # also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha`
  # method in iOS; and, with just a little work, it can be easily formatted into a
  # CSS `rgba()` string in JavaScript. This reference page doesn't have
  # information about the absolute color space that should be used to interpret
  # the RGB value—for example, sRGB, Adobe RGB, DCI-P3, and BT.2020. By default,
  # applications should assume the sRGB color space. When color equality needs to
  # be decided, implementations, unless documented otherwise, treat two colors as
  # equal if all their red, green, blue, and alpha values each differ by at most `
  # 1e-5`. Example (Java): import com.google.type.Color; // ... public static java.
  # awt.Color fromProto(Color protocolor) ` float alpha = protocolor.hasAlpha() ?
  # protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.
  # getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); ` public static
  # Color toProto(java.awt.Color color) ` float red = (float) color.getRed();
  # float green = (float) color.getGreen(); float blue = (float) color.getBlue();
  # float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .
  # setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue /
  # denominator); int alpha = color.getAlpha(); if (alpha != 255) ` result.
  # setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .
  # build()); ` return resultBuilder.build(); ` // ... Example (iOS / Obj-C): // ..
  # . static UIColor* fromProto(Color* protocolor) ` float red = [protocolor red];
  # float green = [protocolor green]; float blue = [protocolor blue]; FloatValue*
  # alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper !=
  # nil) ` alpha = [alpha_wrapper value]; ` return [UIColor colorWithRed:red green:
  # green blue:blue alpha:alpha]; ` static Color* toProto(UIColor* color) `
  # CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&
  # blue alpha:&alpha]) ` return nil; ` Color* result = [[Color alloc] init]; [
  # result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <
  # = 0.9999) ` [result setAlpha:floatWrapperWithValue(alpha)]; ` [result
  # autorelease]; return result; ` // ... Example (JavaScript): // ... var
  # protoToCssColor = function(rgb_color) ` var redFrac = rgb_color.red || 0.0;
  # var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0;
  # var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255);
  # var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) ` return
  # rgbToCssColor(red, green, blue); ` var alphaFrac = rgb_color.alpha.value || 0.
  # 0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',
  # ', alphaFrac, ')'].join(''); `; var rgbToCssColor = function(red, green, blue)
  # ` var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString
  # = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var
  # resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) ` resultBuilder.
  # push('0'); ` resultBuilder.push(hexString); return resultBuilder.join(''); `; /
  # / ...
  # Corresponds to the JSON property `color`
  #
  # @return [Google::Apis::SheetsV4::Color]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11286
  def color=(_arg0); end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11291
  def color_style; end

  # A color value.
  # Corresponds to the JSON property `colorStyle`
  #
  # @return [Google::Apis::SheetsV4::ColorStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11291
  def color_style=(_arg0); end

  # The label of the column's legend.
  # Corresponds to the JSON property `label`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11296
  def label; end

  # The label of the column's legend.
  # Corresponds to the JSON property `label`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11296
  def label=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11303
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1496
class Google::Apis::SheetsV4::WaterfallChartColumnStyle::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A custom subtotal column for a waterfall chart series.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11311
class Google::Apis::SheetsV4::WaterfallChartCustomSubtotal
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [WaterfallChartCustomSubtotal] a new instance of WaterfallChartCustomSubtotal
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11337
  def initialize(**args); end

  # True if the data point at subtotal_index is the subtotal. If false, the
  # subtotal will be computed and appear after the data point.
  # Corresponds to the JSON property `dataIsSubtotal`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11318
  def data_is_subtotal; end

  # True if the data point at subtotal_index is the subtotal. If false, the
  # subtotal will be computed and appear after the data point.
  # Corresponds to the JSON property `dataIsSubtotal`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11318
  def data_is_subtotal=(_arg0); end

  # True if the data point at subtotal_index is the subtotal. If false, the
  # subtotal will be computed and appear after the data point.
  # Corresponds to the JSON property `dataIsSubtotal`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11318
  def data_is_subtotal?; end

  # A label for the subtotal column.
  # Corresponds to the JSON property `label`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11324
  def label; end

  # A label for the subtotal column.
  # Corresponds to the JSON property `label`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11324
  def label=(_arg0); end

  # The zero-based index of a data point within the series. If data_is_subtotal is
  # true, the data point at this index is the subtotal. Otherwise, the subtotal
  # appears after the data point with this index. A series can have multiple
  # subtotals at arbitrary indices, but subtotals do not affect the indices of the
  # data points. For example, if a series has three data points, their indices
  # will always be 0, 1, and 2, regardless of how many subtotals exist on the
  # series or what data points they are associated with.
  # Corresponds to the JSON property `subtotalIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11335
  def subtotal_index; end

  # The zero-based index of a data point within the series. If data_is_subtotal is
  # true, the data point at this index is the subtotal. Otherwise, the subtotal
  # appears after the data point with this index. A series can have multiple
  # subtotals at arbitrary indices, but subtotals do not affect the indices of the
  # data points. For example, if a series has three data points, their indices
  # will always be 0, 1, and 2, regardless of how many subtotals exist on the
  # series or what data points they are associated with.
  # Corresponds to the JSON property `subtotalIndex`
  #
  # @return [Fixnum]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11335
  def subtotal_index=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11342
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1502
class Google::Apis::SheetsV4::WaterfallChartCustomSubtotal::Representation < ::Google::Apis::Core::JsonRepresentation; end

# The domain of a waterfall chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11350
class Google::Apis::SheetsV4::WaterfallChartDomain
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [WaterfallChartDomain] a new instance of WaterfallChartDomain
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11364
  def initialize(**args); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `data`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11356
  def data; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `data`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11356
  def data=(_arg0); end

  # True to reverse the order of the domain values (horizontal axis).
  # Corresponds to the JSON property `reversed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11361
  def reversed; end

  # True to reverse the order of the domain values (horizontal axis).
  # Corresponds to the JSON property `reversed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11361
  def reversed=(_arg0); end

  # True to reverse the order of the domain values (horizontal axis).
  # Corresponds to the JSON property `reversed`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11361
  def reversed?; end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11369
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1508
class Google::Apis::SheetsV4::WaterfallChartDomain::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A single series of data for a waterfall chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11376
class Google::Apis::SheetsV4::WaterfallChartSeries
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [WaterfallChartSeries] a new instance of WaterfallChartSeries
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11422
  def initialize(**args); end

  # Custom subtotal columns appearing in this series. The order in which subtotals
  # are defined is not significant. Only one subtotal may be defined for each data
  # point.
  # Corresponds to the JSON property `customSubtotals`
  #
  # @return [Array<Google::Apis::SheetsV4::WaterfallChartCustomSubtotal>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11384
  def custom_subtotals; end

  # Custom subtotal columns appearing in this series. The order in which subtotals
  # are defined is not significant. Only one subtotal may be defined for each data
  # point.
  # Corresponds to the JSON property `customSubtotals`
  #
  # @return [Array<Google::Apis::SheetsV4::WaterfallChartCustomSubtotal>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11384
  def custom_subtotals=(_arg0); end

  # The data included in a domain or series.
  # Corresponds to the JSON property `data`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11389
  def data; end

  # The data included in a domain or series.
  # Corresponds to the JSON property `data`
  #
  # @return [Google::Apis::SheetsV4::ChartData]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11389
  def data=(_arg0); end

  # Settings for one set of data labels. Data labels are annotations that appear
  # next to a set of data, such as the points on a line chart, and provide
  # additional information about what the data represents, such as a text
  # representation of the value behind that point on the graph.
  # Corresponds to the JSON property `dataLabel`
  #
  # @return [Google::Apis::SheetsV4::DataLabel]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11397
  def data_label; end

  # Settings for one set of data labels. Data labels are annotations that appear
  # next to a set of data, such as the points on a line chart, and provide
  # additional information about what the data represents, such as a text
  # representation of the value behind that point on the graph.
  # Corresponds to the JSON property `dataLabel`
  #
  # @return [Google::Apis::SheetsV4::DataLabel]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11397
  def data_label=(_arg0); end

  # True to hide the subtotal column from the end of the series. By default, a
  # subtotal column will appear at the end of each series. Setting this field to
  # true will hide that subtotal column for this series.
  # Corresponds to the JSON property `hideTrailingSubtotal`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11404
  def hide_trailing_subtotal; end

  # True to hide the subtotal column from the end of the series. By default, a
  # subtotal column will appear at the end of each series. Setting this field to
  # true will hide that subtotal column for this series.
  # Corresponds to the JSON property `hideTrailingSubtotal`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11404
  def hide_trailing_subtotal=(_arg0); end

  # True to hide the subtotal column from the end of the series. By default, a
  # subtotal column will appear at the end of each series. Setting this field to
  # true will hide that subtotal column for this series.
  # Corresponds to the JSON property `hideTrailingSubtotal`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11404
  def hide_trailing_subtotal?; end

  # Styles for a waterfall chart column.
  # Corresponds to the JSON property `negativeColumnsStyle`
  #
  # @return [Google::Apis::SheetsV4::WaterfallChartColumnStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11410
  def negative_columns_style; end

  # Styles for a waterfall chart column.
  # Corresponds to the JSON property `negativeColumnsStyle`
  #
  # @return [Google::Apis::SheetsV4::WaterfallChartColumnStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11410
  def negative_columns_style=(_arg0); end

  # Styles for a waterfall chart column.
  # Corresponds to the JSON property `positiveColumnsStyle`
  #
  # @return [Google::Apis::SheetsV4::WaterfallChartColumnStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11415
  def positive_columns_style; end

  # Styles for a waterfall chart column.
  # Corresponds to the JSON property `positiveColumnsStyle`
  #
  # @return [Google::Apis::SheetsV4::WaterfallChartColumnStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11415
  def positive_columns_style=(_arg0); end

  # Styles for a waterfall chart column.
  # Corresponds to the JSON property `subtotalColumnsStyle`
  #
  # @return [Google::Apis::SheetsV4::WaterfallChartColumnStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11420
  def subtotal_columns_style; end

  # Styles for a waterfall chart column.
  # Corresponds to the JSON property `subtotalColumnsStyle`
  #
  # @return [Google::Apis::SheetsV4::WaterfallChartColumnStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11420
  def subtotal_columns_style=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11427
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1514
class Google::Apis::SheetsV4::WaterfallChartSeries::Representation < ::Google::Apis::Core::JsonRepresentation; end

# A waterfall chart.
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11439
class Google::Apis::SheetsV4::WaterfallChartSpec
  include ::Google::Apis::Core::Hashable
  include ::Google::Apis::Core::JsonObjectSupport
  extend ::Google::Apis::Core::JsonObjectSupport::ClassMethods

  # @return [WaterfallChartSpec] a new instance of WaterfallChartSpec
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11482
  def initialize(**args); end

  # Properties that describe the style of a line.
  # Corresponds to the JSON property `connectorLineStyle`
  #
  # @return [Google::Apis::SheetsV4::LineStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11445
  def connector_line_style; end

  # Properties that describe the style of a line.
  # Corresponds to the JSON property `connectorLineStyle`
  #
  # @return [Google::Apis::SheetsV4::LineStyle]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11445
  def connector_line_style=(_arg0); end

  # The domain of a waterfall chart.
  # Corresponds to the JSON property `domain`
  #
  # @return [Google::Apis::SheetsV4::WaterfallChartDomain]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11450
  def domain; end

  # The domain of a waterfall chart.
  # Corresponds to the JSON property `domain`
  #
  # @return [Google::Apis::SheetsV4::WaterfallChartDomain]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11450
  def domain=(_arg0); end

  # True to interpret the first value as a total.
  # Corresponds to the JSON property `firstValueIsTotal`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11455
  def first_value_is_total; end

  # True to interpret the first value as a total.
  # Corresponds to the JSON property `firstValueIsTotal`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11455
  def first_value_is_total=(_arg0); end

  # True to interpret the first value as a total.
  # Corresponds to the JSON property `firstValueIsTotal`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11455
  def first_value_is_total?; end

  # True to hide connector lines between columns.
  # Corresponds to the JSON property `hideConnectorLines`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11461
  def hide_connector_lines; end

  # True to hide connector lines between columns.
  # Corresponds to the JSON property `hideConnectorLines`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11461
  def hide_connector_lines=(_arg0); end

  # True to hide connector lines between columns.
  # Corresponds to the JSON property `hideConnectorLines`
  #
  # @return [Boolean]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11461
  def hide_connector_lines?; end

  # The data this waterfall chart is visualizing.
  # Corresponds to the JSON property `series`
  #
  # @return [Array<Google::Apis::SheetsV4::WaterfallChartSeries>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11467
  def series; end

  # The data this waterfall chart is visualizing.
  # Corresponds to the JSON property `series`
  #
  # @return [Array<Google::Apis::SheetsV4::WaterfallChartSeries>]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11467
  def series=(_arg0); end

  # The stacked type.
  # Corresponds to the JSON property `stackedType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11472
  def stacked_type; end

  # The stacked type.
  # Corresponds to the JSON property `stackedType`
  #
  # @return [String]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11472
  def stacked_type=(_arg0); end

  # Settings for one set of data labels. Data labels are annotations that appear
  # next to a set of data, such as the points on a line chart, and provide
  # additional information about what the data represents, such as a text
  # representation of the value behind that point on the graph.
  # Corresponds to the JSON property `totalDataLabel`
  #
  # @return [Google::Apis::SheetsV4::DataLabel]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11480
  def total_data_label; end

  # Settings for one set of data labels. Data labels are annotations that appear
  # next to a set of data, such as the points on a line chart, and provide
  # additional information about what the data represents, such as a text
  # representation of the value behind that point on the graph.
  # Corresponds to the JSON property `totalDataLabel`
  #
  # @return [Google::Apis::SheetsV4::DataLabel]
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11480
  def total_data_label=(_arg0); end

  # Update properties of this object
  #
  # source://google-apis-sheets_v4//lib/google/apis/sheets_v4/classes.rb#11487
  def update!(**args); end
end

# @private
#
# source://google-apis-sheets_v4//lib/google/apis/sheets_v4/representations.rb#1520
class Google::Apis::SheetsV4::WaterfallChartSpec::Representation < ::Google::Apis::Core::JsonRepresentation; end
